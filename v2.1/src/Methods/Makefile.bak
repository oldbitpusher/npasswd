########################################################################
# Makefile generated from Makefile.SH on Wed Aug  7 09:57:14 CDT 1996

SHELL = /bin/sh
JMAKE = jmake
TOP = .
CURRENT = .
DIR = 

########################################################################
# Parameters set by Configure -- edit config.sh if changes are needed

AR = ar rc
CC = cc
CTAGS = ctags
JCFLAGS = $(CFLAGS) -O  
MAKE = make
MKDEP = /usr/src/ut/share/bin/passwd/V2.0/bin/mkdep $(DPFLAGS) --
MV = 
RANLIB = 
RM = /usr/bin/rm -f
SED = /usr/bin/sed

########################################################################
# Automatically generated parameters -- do not edit

CC_DBFLAGS =  -g -sb
CC_TESTFLAGS =  -DDEBUG_FILES -DDEBUG -g -sb
CFLAGS =  -I..  -DOS_SUNOS_5 -Xa -DOS_NAME=sunos -DOS_MAJOR_VERSION=5 -DOS_MINOR_VERSION=5 $(CC_TESTFLAGS)
SHADOW_M =  shm_shadow
SOURCES =  $(SHADOWM_SRC)  $(PASSWDM_SRC)
OBJECTS =   $(METHOD_OBJ) $(SHADOW_M).o

########################################################################
# New suffixes and associated building rules -- edit with care

.c.o:
	$(RM) $@
	$(CC) -c $(JCFLAGS) $<

########################################################################
# Jmake rules for building libraries, programs, scripts, and data files
# $X-Id: Jmake.rules,v 3.0.1.5 1995/09/25 09:07:19 ram Exp $

########################################################################
# Force 'make depend' to be performed first -- do not edit

.FORCE_DEPEND::

all:: .FORCE_DEPEND

########################################################################
# Start of Jmakefile

# ------------------------------------------------------
# npasswd method library Makefile
#
# Builds libmethod.a which is linked by npasswd
# This library contains all the password database access method
# modules and the ONE selected shadow database access method module
#
# %W% %G% (cc.utexas.edu)
# Permanent changes to %P%
#
# ------------------------------------------------------
PASSWDM_SRC = \
	pwm_main.c \
	pwm_local.c \
	pwm_nis.c

SHADOWM_SRC = \
	shm_adjunct.c \
	shm_shadow.c \
	shm_ultrix.c \
	shm_osf1.c

METHOD_OBJ = \
	pwm_main.o \
	pwm_local.o \
	pwm_nis.o 

all:: libmethod.a

local_realclean::
	$(RM) libmethod.a

libmethod.a:  $(METHOD_OBJ) $(SHADOW_M).o
	$(RM) $@
	$(AR) $@  $(METHOD_OBJ) $(SHADOW_M).o
	$(RANLIB) $@

depend:: ./mkdep

./mkdep:
	@echo "You have to run Configure first."; exit 1

depend::
	($(SED) '/^# DO NOT DELETE/q' Makefile && \
	$(MKDEP) $(SOURCES) | \
	$(SED) -e 's/: \.\//: /; s/\/usr\/include[^ ]*//g' -e '/: *$$/d' \
	) > Makefile.new
	cp Makefile Makefile.bak
	cp Makefile.new Makefile
	$(RM) Makefile.new

# End %M%

########################################################################
# Common rules for all Makefiles -- do not edit

emptyrule::

clean: local_clean
realclean: local_realclean
clobber: local_clobber

local_clean::
	$(RM) core *~ *.o

local_realclean:: local_clean
	$(RM) -r UU

local_clobber:: local_realclean
	$(RM) config.sh config.h
	$(RM) -r .config
	$(RM) Makefile

Makefile.SH: Jmakefile
	-@if test -f $(TOP)/.package; then \
	if test -f Makefile.SH; then \
	echo "	$(RM) Makefile.SH~; $(MV) Makefile.SH Makefile.SH~"; \
	$(RM) Makefile.SH~; $(MV) Makefile.SH Makefile.SH~; \
	fi; \
	echo "	$(JMAKE) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT)" ; \
	$(JMAKE) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT) ; \
	else touch $@; exit 0; fi

Makefile: Makefile.SH
	/bin/sh Makefile.SH

tags::
	$(CTAGS) -w *.[ch]
	$(CTAGS) -xw *.[ch] > tags

local_clobber::
	$(RM) tags

########################################################################
# Empty rules for directories with no sub-directories -- do not edit

install::
	@echo "install in $(CURRENT) done."

deinstall::
	@echo "deinstall in $(CURRENT) done."

install.man::
	@echo "install.man in $(CURRENT) done."

deinstall.man::
	@echo "deinstall.man in $(CURRENT) done."

Makefiles::

Makefiles.SH::

########################################################################
# Dependencies generated by make depend
# DO NOT DELETE THIS LINE -- make depend relies on it

# Put nothing here or make depend will gobble it up
.FORCE_DEPEND::
	@echo "You haven't run a 'make depend' yet!"; exit 1
