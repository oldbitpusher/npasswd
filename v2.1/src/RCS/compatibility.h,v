head	1.19;
access;
symbols;
locks; strict;
comment	@ * @;


1.19
date	98.06.23.00.00.00;	author clyde;	state Exp;
branches;
next	1.18;

1.18
date	98.03.26.00.00.00;	author clyde;	state Exp;
branches;
next	1.17;

1.17
date	97.09.23.00.00.00;	author clyde;	state Exp;
branches;
next	1.16;

1.16
date	96.09.13.00.00.00;	author clyde;	state Exp;
branches;
next	1.15;

1.15
date	96.09.13.00.00.00;	author clyde;	state Exp;
branches;
next	1.14;

1.14
date	96.08.15.00.00.00;	author clyde;	state Exp;
branches;
next	1.13;

1.13
date	96.08.13.00.00.00;	author clyde;	state Exp;
branches;
next	1.12;

1.12
date	96.08.06.00.00.00;	author clyde;	state Exp;
branches;
next	1.11;

1.11
date	96.03.27.00.00.00;	author clyde;	state Exp;
branches;
next	1.10;

1.10
date	95.04.05.00.00.00;	author clyde;	state Exp;
branches;
next	1.9;

1.9
date	95.04.05.00.00.00;	author clyde;	state Exp;
branches;
next	1.8;

1.8
date	94.09.28.00.00.00;	author clyde;	state Exp;
branches;
next	1.7;

1.7
date	94.07.14.00.00.00;	author clyde;	state Exp;
branches;
next	1.6;

1.6
date	94.05.19.00.00.00;	author clyde;	state Exp;
branches;
next	1.5;

1.5
date	94.05.17.00.00.00;	author clyde;	state Exp;
branches;
next	1.4;

1.4
date	94.04.01.00.00.00;	author clyde;	state Exp;
branches;
next	1.3;

1.3
date	94.03.31.00.00.00;	author clyde;	state Exp;
branches;
next	1.2;

1.2
date	94.03.17.00.00.00;	author clyde;	state Exp;
branches;
next	1.1;

1.1
date	94.03.16.00.00.00;	author clyde;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Add copyright notice
@
text
@/*
 * Copyright 1998, The University of Texas at Austin ("U. T. Austin").
 * All rights reserved.
 *
 * By using this software the USER indicates that he or she has read,
 * understood and will comply with the following:
 *
 * U. T. Austin hereby grants USER permission to use, copy, modify, and
 * distribute this software and its documentation for any purpose and
 * without fee, provided that:
 *
 * 1. the above copyright notice appears in all copies of the software
 *    and its documentation, or portions thereof, and 
 * 2. a full copy of this notice is included with the software and its
 *    documentation, or portions thereof, and 
 * 3. neither the software nor its documentation, nor portions thereof,
 *    is sold for profit. Any commercial sale or license of this software,
 *    copies of the software, its associated documentation and/or
 *    modifications of either is strictly prohibited without the prior
 *    consent of U. T. Austin. 
 * 
 * Title to copyright to this software and its associated documentation
 * shall at all times remain with U. T. Austin. No right is granted to
 * use in advertising, publicity or otherwise any trademark, service
 * mark, or the name of U. T. Austin.
 * 
 * This software and any associated documentation are provided "as is,"
 * and U. T. AUSTIN MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESSED OR
 * IMPLIED, INCLUDING THOSE OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
 * PURPOSE, OR THAT USE OF THE SOFTWARE, MODIFICATIONS, OR ASSOCIATED
 * DOCUMENTATION WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR
 * OTHER INTELLECTUAL PROPERTY RIGHTS OF A THIRD PARTY. U. T. Austin, The
 * University of Texas System, its Regents, officers, and employees shall
 * not be liable under any circumstances for any direct, indirect, special,
 * incidental, or consequential damages with respect to any claim by USER
 * or any third party on account of or arising from the use, or inability
 * to use, this software or its associated documentation, even if U. T.
 * Austin has been advised of the possibility of those damages.
 * 
 * Submit commercialization requests to: Office of the Executive Vice
 * President and Provost, U. T. Austin, 201 Main Bldg., Austin, Texas,
 * 78712, ATTN: Technology Licensing Specialist.
 */

/*
 * Comptability and option selection defines for npasswd
 * $Id$ (cc.utexas.edu) %P%
 */
#ifndef	_compatibility_h
#define	_compatibility_h 1
#include "config.h"

/*
 * Look in options.h for a full explanation of the feature selections
 */
#ifdef	OS_SUNOS_4			/* SunOS 4.X (up to 4.1.3) */
# define	NEED_CLIB_DECLS	1	/* Need to define some libc stuff */
# define	VENDOR_COMPAT	0	/* Full compatibilty with vendor prog */
#endif

#ifdef	OS_SUNOS_5			/* SunOS 5.X (Solaris 2.X) */
# define	SYS5_TTY	1	/* Use SYS5 ioctls */
#endif

#ifdef	OS_DEC_OSF1			/* DEC OSF/1 version 1.X */
# undef		VENDOR_COMPAT
# undef		_NO_PROTO
#endif

#ifdef OS_HPUX
# define	SYS5_TTY	1
# define	POSIX_ENV	1     /* HP's have a posix environment */
#endif

/*
 * Pull in system include files
 */
#ifdef	I_SYS_PARAM
# include <sys/param.h>
#endif
#include <sys/types.h>
#include <sys/stat.h>
#include <ctype.h>
#include <signal.h>
#include <stdio.h>
#include <syslog.h>
#include <fcntl.h>
#include <pwd.h>
#include <errno.h>
#ifdef	I_SYS_TIME
# include <sys/time.h>
#else
# include <time.h>
#endif
#ifdef	I_MEMORY
# include <memory.h>
#endif
#ifdef	I_UNISTD
# include <unistd.h>
#endif
#ifdef	I_STDLIB
# include <stdlib.h>
#endif
#ifdef	I_DIRENT
# include <dirent.h>
#endif

#ifndef	NO_STRINGS
/*
 * On some Solaris 2.N (N < 5) systems, cannot include both
 * <string.h> and <rpc/rpc.h> because the latter includes <memory.h>
 * which has a conflicting definition of some of the memcpy routines.
 * In order for the pwm_nis module to compile, <string.h> cannot be included.
 * This error is fixed in 2.5.
 */
# ifdef	I_STRING
#  include <string.h>
# else
#  include <strings.h>
# endif
#endif

/*
 * POSIX API not fully supported
 */
#ifdef	POSIX_ENV		/* XXX */
/* #define	_POSIX_SOURCE	1	*/
#include <fcntl.h>
#include <limits.h>
#include <locale.h>
#include <stddef.h>
#endif

/*
 * Brands of signal handling
 */
#define	SIG_TYPE_BSD	'b'	/* Use BSD signals */
#define	SIG_TYPE_POSIX	'p'	/* Use POSIX signals */
#define	SIG_TYPE_UNIX	'u'	/* Use traditional UNIX signals */

#define	SIG_TYPE		SIG_TYPE_UNIX
#ifdef	HAS_SIGBLOCK
# undef	SIG_TYPE
# define	SIG_TYPE	SIG_TYPE_BSD
#endif
#ifdef	HAS_POSIX_SIGNALS
# undef	SIG_TYPE
# define	SIG_TYPE	SIG_TYPE_POSIX
#endif

/*
 * Macros to hide differences.
 */
#ifndef	HAS_STRCHR
# define strchr(s, c)	index((s),(c))
# define strrchr(s, c)	rindex((s),(c))
#endif

#ifdef	HAS_MEMCPY
# define	bcopy(s,d,c)	memcpy((d),(s),(c))
#endif

#ifndef	HAS_GETHOSTNAME
# ifdef	HAS_SYSINFO
#  include <sys/systeminfo.h>
#  define gethostname(_b_, _l_) sysinfo(SI_HOSTNAME, _b_, _l_)
# else 	/* HAS_SYSINFO */
   ERROR-gethostname-not-found
# endif /* HAS_SYSINFO */
#endif	/* HAS_GETHOSTNAME */

/*
 * Macros to hide the differences between varargs and stdargs
 */
#ifdef	__STDC__
# include <stdarg.h>
# define VA_DCL(_X_) (_X_, ...)
# define VA_START(X,Y)	va_start(X,Y)
#else
# include <varargs.h>
# define VA_DCL(_X_) (va_alist) va_dcl
# define VA_START(X,Y)	va_start(X)
#endif


/*
 * Pull in includes for some UNIXes
 */
#ifdef	OSF1_AUTH
 /*
  * OSF/1 auth hooks are in serveral places, so do the includes here
  */
# include <sys/secdefines.h>
# include <sys/security.h>
# include <sia.h>
# include <prot.h>
# define OSF1_TCB	"/tcb"
# ifdef	AUTH_MAX_PASSWD_LENGTH
#	define	SYSTEM_PASSWD_MAX	AUTH_MAX_PASSWD_LENGTH
	/*
	 * Not really - it depends if C2 security is being used and which
	 * encryption routine is being used (crypt vs bigcrypt).
	 * But this is a reasonable default to start with.
	 */
# endif
#endif

#ifdef	HAS_MEMSET
# define	zeromem(_O_,_S_) memset((void *)_O_, 0, _S_)
#else
# define	zeromem(_O_,_S_) bzero((char *)_O_, _S_)
#endif

/*
 * If this isn't already supplied by a system define
 */
#ifndef MAXHOSTNAMLEN
# define MAXHOSTNAMLEN 64
#endif

#endif	/* _compatibility_h */
/* End $RCSfile$ */
@


1.18
log
@Define zeromem() macro to hide memset/bzero difference
@
text
@d2 41
a42 2
 *	Comptability and option selection defines for npasswd
 *	$Id$ %P%
d44 5
d222 1
a222 1
/* End compatibility.h */
@


1.17
log
@1. Move some things around 2. Add more comments
@
text
@d164 5
@


1.16
log
@Remove use of #error directive
@
text
@d79 3
d91 1
a91 1
 * Figure out what kind of signal handling we have
d108 1
a108 2
 * Define compatabilty macros to hide a lot of the difference between
 * UNIX variants.
d114 1
d128 17
d146 3
d156 5
a160 2
	/* Not really, it depend if C2 security is being used and what
	 * encryption routine the user has */
a163 10
/* Varargs operators */
#ifdef	__STDC__
# include <stdarg.h>
# define VA_DCL(_X_) (_X_, ...)
# define VA_START(X,Y)	va_start(X,Y)
#else
# include <varargs.h>
# define VA_DCL(_X_) (va_alist) va_dcl
# define VA_START(X,Y)	va_start(X)
#endif
d165 3
@


1.15
log
@Change NO_STRINGS comments
@
text
@d121 1
a121 5
#  ifdef	__STDC__
#	error No gethostname()
#  else		/* STDC */
	ERROR-gethostname-not-found
#  endif	/* STDC */
@


1.14
log
@Change use of HAS_STRRCHR
@
text
@d66 5
a70 5
 * On Solaris 2, cannot include both <string.h> and <rpc/rpc.h> because
 * the latter includes <memory.h> which has a conflicting definition of
 * some of the memcpy routines.  In order for the pwm_nis module to compile,
 * <string.h> cannot be included.
 * Stupid, stupid rat creatures!
@


1.13
log
@1. Remove uneeded things 2. Pick up system password length on OSF/1
@
text
@a109 2
#endif
#ifndef	HAS_STRRCHR
d112 3
@


1.12
log
@beta 3 cycle 1 checkin
@
text
@a107 6
#ifndef	HAS_BZERO
# define bzero(a, l)	memset((a),0,(l))
#endif
#ifndef	HAS_MEMCPY
# define memcpy(d, s, l) bcopy((s), (d), (l))
#endif
a127 7
/*
 * If this system has the crypt16() routine, a forward declaration is needed.
 */
#ifdef	HAS_CRYPT16
extern char	*crypt16();
#endif

d134 5
a155 5
/*
 * Declarations for library routines that aren't in unistd.h or stdlib.h
 */
extern char    *crypt();

@


1.11
log
@1. Add I_DIRENT 2. Fix SCCS id comment
@
text
@d17 1
a17 1
#ifdef	OS_SUNOS_5			/* SunOS 5.X (Solaris 2.X) *?
d111 2
a112 2
#ifndef	HAS_BCOPY
# define bcopy(s, d, l)	memcpy((d),(s),(l))
d114 2
a115 2
#ifndef	HAS_INDEX
# define index(s, c)	strchr((s),(c))
d117 2
a118 2
#ifndef	HAS_RINDEX
# define rindex(s, c)	strrchr((s),(c))
d125 4
a128 1
# else
d130 3
a132 2
# endif
#endif
@


1.10
log
@Beta 3 development checkin
@
text
@d3 1
a3 1
 *	@@(#)compatibility.h	1.9 05 Apr 1995
d60 3
@


1.9
log
@Beta 3 development checkin
@
text
@d3 1
a3 1
 *	$Id$
d163 1
a163 1
/* End $RCSfile$ */
@


1.8
log
@Development checkin - lots of changes
@
text
@d7 1
a8 6
/* #define	SIGNAL_T	AC_RETSIGTYPE	/* Type of signal routines */
#define	SIGNAL_T	void	/* Type of signal routines */
#define	SIG_TYPE_BSD	'b'	/* Use BSD signals */
#define	SIG_TYPE_POSIX	'p'	/* Use POSIX signals */
#define	SIG_TYPE_UNIX	'u'	/* Use traditional UNIX signals */

a11 3
#define TIME_H	<time.h>
#define ERRNO_H <errno.h>

a13 9
# define	NEED_GETPASS	1	/* Use own version of getpass */
# define	OS_BSD		1	/* Generically BSD */
# define	HAS_PW_COMMENT	1	/* Has pw_comment field */
# define	HAS_PW_AGE	1	/* Uses System 5 password aging */
# define	SIG_TYPE	SIG_TYPE_POSIX	/* Select signal type */
# define	SUNOS_TTY	1	/* Use SunOS ioctls */
# define	SUN_SECURITY	1	/* Change Sun shadow passwords */
# define	USE_MEMOPS	1	/* Use system 5 memory routines */
# define	USE_STRING_H	1	/* Include "string.h" */
a14 4
# define	YP_SUPPORT	1	/* Enable RPC password changes */
# undef		TIME_H
# define	TIME_H		<sys/time.h>	/* Time definitions */
# define	_OS_CHOSEN_	1
d17 1
a17 6
#ifdef	OS_SOLARIS_2			/* SunOS 5.X (Solaris 2.X) *?
# define	OS_SYS54	1	/* Mostly SVR4 */
# define	HAS_PW_COMMENT	1	/* Has pw_comment field */
# define	HAS_PW_AGE	1	/* Uses System 5 password aging */
# define	S5_SHADOW	1	/* Uses System 5 password aging */
# define	SIG_TYPE	SIG_TYPE_POSIX
a18 6
# define	USE_MEMOPS	1	/* Use system 5 memory routines */
# define	USE_STRING_H	1
# define	YP_SUPPORT	1	/* Enable RPC password changes */
#include <sys/systeminfo.h>
#define	gethostname(_b_, _l_) sysinfo(SI_HOSTNAME, _b_, _l_)
# define	_OS_CHOSEN_	1
a20 22
#ifdef	OS_ULTRIX_4		/* Ultrix 4.X */
# define	DBM_PASSWD	1	/* Uses DBM lookaside files */
# define	NEED_FGETPWENT	1	/* Doesn't have fgetpwent(3) */
# define	NEED_PUTPWENT	1	/* Doesn't have putpwent(3) */
# define	NO_CLNT_SPERRNO	1	/* Doesn't have clnt_sperrno(3) */
# define	OS_BSD		1	/* Generically BSD  */
# define	HAS_PW_COMMENT	1	/* Has pw_comment field */
# define	SIG_TYPE	SIG_TYPE_POSIX
# define	STD_PW_LEN	13	/* Length of standard pw string */
# define	ULTRIX_SECURITY	1	/* Use Ultrix security mode */
# define	USE_STDLIB_H 	1
# define	USE_STRING_H	1
# define	USE_UNISTD_H 	1
# define	USE_getsvc	1	/* Use DEC's getsvc() call */
# define	YP_SUPPORT	1	/* Enable RPC password changes */
extern char	*crypt16();
extern char	*getpass();

# define	_OS_CHOSEN_	1
# undef	CPP_HAS_ERROR
#endif

a21 13
# define	DBM_PASSWD	1	/* Uses DBM lookaside files */
# define	NEED_FGETPWENT	1	/* Doesn't have fgetpwent(3) */
# define	NEED_GETPASS	1
# define	OS_BSD		1	/* Generically BSD */
# define	HAS_PW_COMMENT	1	/* Has pw_comment field */
# define	SIG_TYPE	SIG_TYPE_POSIX
# define	USE_MEMOPS	1	/* Use system 5 memory routines */
# define	USE_STDLIB_H 	1
# define	USE_UNISTD_H 	1
# define	USE_getsvc	1	/* Use DEC's getsvc() call */
# define	YP_SUPPORT	1	/* Enable RPC password changes */
# define	OSF1_SECURITY	1	/* OSF/1 security */
# define	OSF1_TCB	"/tcb"	/* Where security db are kept */
a23 5
# include	<sys/secdefines.h>
# include	<sys/security.h>
# include	<sia.h>
# include	<prot.h>
# define	_OS_CHOSEN_	1
a25 30
#ifdef	OS_AIX_3			/* AIX 3.2> */
# define	NEED_FGETPWENT	1	/* Doesn't have fgetpwent(3) */
# define	HAS_PW_AGE	1	/* Has pw_age field */
# define	USE_MEMOPS	1	/* Use system 5 memory routines */
# define	_OS_CHOSEN_	1
#endif

#ifdef	OS_BSD_43			/* Plain 4.3BSD system */
# define	DBM_PASSWD	1	/* Has DBM lookaside files */
# define	OS_BSD		1	/* Generically BSD  */
# define	HAS_PW_COMMENT	1	/* Has pw_comment field */
# define	SIG_TYPE	SIG_TYPE_BSD
# define	_OS_CHOSEN_	1
# endif

#ifdef	OS_SYS_5		/* System V R[123]* */
# define	OS_SYS5		1
# define	NEED_RENAME	1
# define	SYS5_TTY	1
# define	USE_MEMOPS	1	/* Use system 5 memory routines */
# define	_OS_CHOSEN_	1
#endif

#ifdef	OS_SYS_54			/* System V R4 */
# define	OS_SYS5		1
# define	SYS5_TTY	1
# define	USE_MEMOPS	1	/* Use system 5 memory routines */
# define	_OS_CHOSEN_	1
#endif

a26 1
# define	OS_SYS5		1
a27 4
# define	USE_MEMOPS	1     /* Use system 5 memory routines */
# define	HAS_PW_COMMENT	1     /* Has pw_comment field */
# define	NO_CLNT_SPERRNO	1     /* Doesn't have clnt_sperrno(3) */
# define	SIG_TYPE	SIG_TYPE_POSIX
a28 4
# define	USE_STRING_H	1
# define	USE_UNISTD_H	1
extern char     *getpass();
# define      _OS_CHOSEN_	1
d32 1
a32 1
 * Somehow I want to blow up if more than one OS selection was made
d34 2
a35 2
#ifndef	_OS_CHOSEN_
	ERROR-operating-system-environment-not-defined
a36 39

/*
 * Define compatabilty macros to hide a lot of the difference between
 * UNIX variants.
 */
#ifdef	USE_MEMOPS
			/* String operators */
# include <memory.h>
# define INDEX(s, c)	strchr(s, c)
# define RINDEX(s, c)	strrchr(s, c)
# define BZERO(a, l)	memset(a, 0, l)
# define BCOPY(s, d, l)	memcpy(d, s, l)
#else
# define INDEX(s, c)	index(s, c)
# define RINDEX(s, c)	rindex(s, c)
# define BZERO(a, l)	bzero(a, l)
# define BCOPY(s, d, l)	bcopy(s, d, l)
#endif

/*
 * Stuff needed for ANSI C compiliation environment
 */
/* Varargs operators */
/* #ifdef	STDC_VARARGS */
#ifdef	__STDC__
# include <stdlib.h>
# include <stdarg.h>
# define VA_DCL(_X_) (_X_, ...)
# define VA_START(X,Y)	va_start(X,Y)
#else
# include <varargs.h>
# define VA_DCL(_X_) (va_alist) va_dcl
# define VA_START(X,Y)	va_start(X)
#endif

/*
 * Pull in system include files
 */
#include <sys/param.h>
d45 10
a54 4
#include ERRNO_H
#include TIME_H

#if	USE_UNISTD_H
d57 1
a57 1
#if	USE_STDLIB_H
d60 14
a73 2
#if	USE_STRINGS_H
# include <strings.h>
a74 3
#if	USE_STRING_H
# include <string.h>
#endif
a80 1
#include <stdarg.h>
a81 2
#include <stdlib.h>
#include <unistd.h>
d85 1
a85 1
 * Signal handler type
d87 3
a89 1
typedef	SIGNAL_T	(*signal_t)();
d91 62
@


1.7
log
@Add HP-UX stuff
@
text
@d8 1
d17 2
d24 2
a25 2
# define	PW_COMMENT	1	/* Has pw_comment field */
# define	S5_PWAGING	1	/* Uses System 5 password aging */
a30 1
# define	USE_SYSLOG	1	/* Use syslog messages */
d32 2
a33 1
# define	YP_PASSWD	1	/* Enable RPC password changes */
d40 2
a41 2
# define	PW_COMMENT	1	/* Has pw_comment field */
# define	S5_PWAGING	1	/* Uses System 5 password aging */
d47 1
a47 2
# define	USE_SYSLOG	1	/* Syslog messages */
/* # define	YP_PASSWD	1	/* Enable RPC password changes */
d59 1
a59 1
# define	PW_COMMENT	1	/* Has pw_comment field */
a64 1
# define	USE_SYSLOG	1	/* Syslog messages */
d67 1
a67 1
# define	YP_PASSWD	1	/* Enable RPC password changes */
d80 1
a80 1
# define	PW_COMMENT	1	/* Has pw_comment field */
a83 2
# define	USE_SYSLOG	1	/* Syslog messages */
# define	USE_SYS_TIME_H	1	/* Use <sys/time.h> */
d86 1
a86 1
# define	YP_PASSWD	1	/* Enable RPC password changes */
d100 1
a100 1
# define	S5PW_AGE	1	/* Has pw_age field */
d108 1
a108 1
# define	PW_COMMENT	1	/* Has pw_comment field */
a109 1
# define	USE_SYSLOG	1	/* Syslog messages */
d113 1
a113 1
#ifdef	OS_SYS_5123		/* System V R[123]* */
d129 9
a137 11
# define	OS_SYS5               1
# define	SYS5_TTY              1
# define	USE_MEMOPS            1     /* Use system 5 memory routines */
# define	PW_COMMENT            1     /* Has pw_comment field */
# define	NO_CLNT_SPERRNO       1     /* Doesn't have clnt_sperrno(3) */
# define	SIG_TYPE              SIG_TYPE_POSIX
# define	USE_SYSLOG            1     /* Syslog messages */
# define	POSIX_ENV             1     /* HP's have a posix environment */
# define	USE_STRING_H          1
# define	USE_UNISTD_H          1
# define	USE_SYS_TIME_H        1	 /* Use <sys/time.h> */
d139 1
a139 1
# define      _OS_CHOSEN_           1
d171 1
a185 8
#ifndef	TIME_H
# define TIME_H	<time.h>
#endif

#ifndef	ERRNO_H
# define ERRNO_H <errno.h>
#endif

d192 1
@


1.6
log
@Add defintion of location of OSF/1 security database
@
text
@d130 16
@


1.5
log
@1. Add support for OSF/1 security mode 2. Change SUN_SHADOW and ULTRIX_SHADOW to SUN_SECURITY and ULTRIX_SECURITY
@
text
@d89 1
@


1.4
log
@Strip version stuff from OS_DEC_OSF1
@
text
@d25 1
a25 1
# define	SUN_SHADOW	1	/* Change Sun shadow passwords */
d60 1
a60 1
# define	ULTRIX_SHADOW	1	/* Use Ultrix security mode */
d88 1
a88 1
# undef		S5_PWAGING		/* No password aging */
d91 4
a94 1
extern char    *crypt16();
@


1.3
log
@Make varargs macros more generic
@
text
@d74 1
a74 1
#ifdef	OS_DEC_OSF1_1			/* DEC OSF/1 version 1.X */
@


1.2
log
@Add Solaris 2 support
@
text
@d5 2
d8 4
a11 4
/*#define	SIGNAL_T	void	/* Type of signal routines */
/*#define	SIG_TYPE_BSD	'b'	/* Use BSD signals */
/*#define	SIG_TYPE_POSIX	'p'	/* Use POSIX signals */
/*#define	SIG_TYPE_UNIX	'u'	/* Use traditional UNIX signals */
a12 5
#define	SIGNAL_T	void
#define	SIG_TYPE_BSD	'b'
#define	SIG_TYPE_POSIX	'p'
#define	SIG_TYPE_UNIX	'u'

d154 1
d156 1
a156 2
#include <stdlib.h>
			/* Varargs operators */
d158 1
a158 1
# define VA_DCL(_X_)	(char *_X_, ...)
d162 1
a162 1
# define VA_DCL(_X_)	(va_alist) va_dcl
d226 1
@


1.1
log
@Initial revision
@
text
@d6 4
a9 2
#undef	_ALLDONE_
#undef	CLIBDEFINES
d11 9
a19 1
#define	SIGFUNC_T	void
d21 2
d24 3
a26 1
# define	HAS_SIGMASK	1	/* Generically BSD  */
a27 3
# define	NEED_GETPASS	1
# define	S5_PWAGING	1	/* Uses System 5 password aging */
# define	PW_COMMENT	1	/* Has pw_comment field */
d29 4
d34 2
a35 10
# define	USE_SYSLOG	1	/* Syslog messages */
# define	VENDOR_COMPAT	0	/* Full compatibilty with vendor prog */
# define	USE_SYS_TIME_H	1	/* Use <sys/time.h> */
# define TIME_H	<sys/time.h>
# 
typedef	void	(*signal_t);
#ifdef	_ALLDONE_
	ERROR_Too_many_os_selections_made
#else
# define	_ALLDONE_	1
a36 1
#endif
d40 1
a40 1
# define	SYS5_TTY	1	/* Use SYS5 ioctls */
d43 4
a46 2
# define	PW_COMMENT	1	/* Has pw_comment field */
# define	YP_PASSWD	1	/* Enable RPC password changes */
d48 4
a51 6
# define	USE_MEMOPS	1	/* Use system 5 memory routines */
typedef	void	(*signal_t);
#ifdef	_ALLDONE_
	ERROR_Too_many_os_selections_made
#else
# define	_ALLDONE_	1
a52 1
#endif
d55 4
d60 4
a63 1
# define	USE_UNISTD_H 	1
a65 9
# define	CLIBDEFINES	1
# define	HAS_SIGMASK	1	/* Generically BSD  */
# define	ULTRIX_SHADOW	1	/* Use Ultrix security mode */
# define	NO_CLNT_SPERRNO	1	/* Doesn't have clnt_sperrno(3) */
# define	NEED_PUTPWENT	1	/* Doesn't have putpwent(3) */
# define	NEED_FGETPWENT	1	/* Doesn't have fgetpwent(3) */
# define	PW_COMMENT	1	/* Has pw_comment field */
# define	YP_PASSWD	1	/* Enable RPC password changes */
# define	DBM_PASSWD	1	/* Uses DBM lookaside files */
d67 1
a67 2
# define	STD_PW_LEN	13	/* Length of standard pw string */
# define	USE_SYS_TIME_H	0	/* Need to include <time.h> */
d69 1
d72 3
a74 6
typedef	void	(*signal_t);
# ifdef	_ALLDONE_
   ERROR_Too_many_os_selections_made
# else
#  define	_ALLDONE_	1
# endif
d78 3
d82 3
a84 2
# define	CLIBDEFINES	1
# define	USE_UNISTD_H 	1
a85 8
# define	USE_MEMOPS	1	/* Use system 5 memory routines */
# define	HAS_SIGMASK	1	/* Generically BSD  */
# define	NEED_GETPASS	1
# define	NEED_FGETPWENT	1	/* Doesn't have fgetpwent(3) */
# undef		S5_PWAGING		/* No password aging */
# define	PW_COMMENT	1	/* Has pw_comment field */
# define	YP_PASSWD	1	/* Enable RPC password changes */
# define	DBM_PASSWD	1	/* Uses DBM lookaside files */
a86 1
# undef		VENDOR_COMPAT
d88 1
d90 3
a93 2
typedef	void	(*signal_t);
extern char    *crypt();
d95 1
a95 4
#ifdef	_ALLDONE_
	ERROR_Too_many_os_selections_made
#else
# define	_ALLDONE_	1
a96 1
#endif
d102 1
a102 5
# ifdef	_ALLDONE_
   ERROR_Too_many_os_selections_made
# else
#  define	_ALLDONE_	1
# endif
d106 1
a107 2
# define	HAS_SIGMASK	1	/* Generically BSD  */
# define	DBM_PASSWD	1	/* Has DBM lookaside files */
d109 1
d111 1
a111 4
# ifdef	_ALLDONE_
   ERROR_Too_many_os_selections_made
# else
#  define	_ALLDONE_	1
a112 1
# endif
d119 1
a119 5
# ifdef	_ALLDONE_
   ERROR_Too_many_os_selections_made
# else
#  define	_ALLDONE_	1
# endif
d126 1
a126 5
# ifdef	_ALLDONE_
   ERROR_Too_many_os_selections_made
# else
#  define	_ALLDONE_	1
# endif
d130 7
d173 1
a173 1
# define	TIME_H	<time.h>
d177 1
a177 1
# define	ERRNO_H	<errno.h>
d190 1
d215 5
d224 5
@
