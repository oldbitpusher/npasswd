*** /tmp/daaEhva	Tue Sep 22 11:20:06 1998
--- src/PasswordCheck/cracklib/fascist.c	Tue Sep 22 11:01:17 1998
***************
*** 52,58 ****
   */
  
  #ifndef	lint
! static char ut_id[] = "@(#)fascist.c	2.10 8/17/98 (cc.utexas.edu)";
  static char vers_id[] = "fascist.c : v2.3p3 Alec Muffett 14 dec 1997";
  #endif
  
--- 52,58 ----
   */
  
  #ifndef	lint
! static char ut_id[] = "@(#)fascist.c	2.11 9/22/98 (cc.utexas.edu)";
  static char vers_id[] = "fascist.c : v2.3p3 Alec Muffett 14 dec 1997";
  #endif
  
***************
*** 713,719 ****
      char junk[STRINGSIZE];
      char *password;
      char rpassword[STRINGSIZE];
!     int32 notfound;
  
      notfound = PW_WORDS(pwp);
      /* already truncated if from FascistCheck() */
--- 713,719 ----
      char junk[STRINGSIZE];
      char *password;
      char rpassword[STRINGSIZE];
!     c_int32 notfound;
  
      notfound = PW_WORDS(pwp);
      /* already truncated if from FascistCheck() */
***************
*** 941,947 ****
  	}
  	for (pwx = pwl; *pwx; pwx++) {	/* Iterate dictionaries */
  		PWDICT	*pw = PWOpen(*pwx, "r");
! 		int32	found;
  
  		if (pw == 0)
  		{
--- 941,947 ----
  	}
  	for (pwx = pwl; *pwx; pwx++) {	/* Iterate dictionaries */
  		PWDICT	*pw = PWOpen(*pwx, "r");
! 		c_int32	found;
  
  		if (pw == 0)
  		{
*** /tmp/daaemla	Tue Sep 22 11:20:06 1998
--- src/PasswordCheck/cracklib/packer.h	Tue Sep 22 11:01:08 1998
***************
*** 52,58 ****
   */
  
  /*
!  * @(#)packer.h	1.6 4/9/98 (cc.utexas.edu)
   */
  
  #include <stdio.h>
--- 52,58 ----
   */
  
  /*
!  * @(#)packer.h	1.7 9/22/98 (cc.utexas.edu)
   */
  
  #include <stdio.h>
***************
*** 66,81 ****
  #define STRINGSIZE	1024
  #define	TRUNCSTRINGSIZE	(STRINGSIZE/4)
  
! typedef unsigned char int8;
! typedef unsigned short int int16;
! typedef unsigned long int int32;
  
  struct pi_header
  {
!     int32 pih_magic;
!     int32 pih_numwords;
!     int16 pih_blocklen;
!     int16 pih_pad;
  };
  
  typedef struct
--- 66,81 ----
  #define STRINGSIZE	1024
  #define	TRUNCSTRINGSIZE	(STRINGSIZE/4)
  
! typedef unsigned char c_int8;
! typedef unsigned short int c_int16;
! typedef unsigned long int c_int32;
  
  struct pi_header
  {
!     c_int32 pih_magic;
!     c_int32 pih_numwords;
!     c_int16 pih_blocklen;
!     c_int16 pih_pad;
  };
  
  typedef struct
***************
*** 84,95 ****
      FILE *dfp;
      FILE *wfp;
  
!     int32 flags;
  #define PFOR_WRITE	0x0001
  #define PFOR_FLUSH	0x0002
  #define PFOR_USEHWMS	0x0004
  
!     int32 hwms[256];
      struct pi_header header;
      int count;
      char data[NUMWORDS][MAXWORDLEN];
--- 84,95 ----
      FILE *dfp;
      FILE *wfp;
  
!     c_int32 flags;
  #define PFOR_WRITE	0x0001
  #define PFOR_FLUSH	0x0002
  #define PFOR_USEHWMS	0x0004
  
!     c_int32 hwms[256];
      struct pi_header header;
      int count;
      char data[NUMWORDS][MAXWORDLEN];
***************
*** 110,116 ****
  extern int	PWClose();
  extern int	PutPW();
  extern char	*GetPW();
! extern int32	FindPW();
  
  /*
   * Password "cracking" routines
--- 110,116 ----
  extern int	PWClose();
  extern int	PutPW();
  extern char	*GetPW();
! extern c_int32	FindPW();
  
  /*
   * Password "cracking" routines
*** /tmp/daaoeqa	Tue Sep 22 11:20:06 1998
--- src/PasswordCheck/cracklib/packlib.c	Tue Sep 22 11:01:15 1998
***************
*** 54,60 ****
  #include "packer.h"
  
  static char vers_id[] = "packlib.c : v2.3p2 Alec Muffett 18 May 1993";
! static char ut_id[] = "@(#)packlib.c	1.10 4/9/98 (cc.utexas.edu)";
  
  char	PWioError[STRINGSIZE * 2];
  
--- 54,60 ----
  #include "packer.h"
  
  static char vers_id[] = "packlib.c : v2.3p2 Alec Muffett 18 May 1993";
! static char ut_id[] = "@(#)packlib.c	1.11 9/22/98 (cc.utexas.edu)";
  
  char	PWioError[STRINGSIZE * 2];
  
***************
*** 68,74 ****
      char *prefix;
      char *mode;			/* fopen() modes */
  {
!     int32 i;
      PWDICT *pdesc;
      char iname[STRINGSIZE];
      char dname[STRINGSIZE];
--- 68,74 ----
      char *prefix;
      char *mode;			/* fopen() modes */
  {
!     c_int32 i;
      PWDICT *pdesc;
      char iname[STRINGSIZE];
      char dname[STRINGSIZE];
***************
*** 291,300 ****
      if ((pwp->flags & PFOR_FLUSH) || !(pwp->count % NUMWORDS))
      {
  	int i;
! 	int32 datum;
  	register char *ostr;
  
! 	datum = (int32) ftell(pwp->dfp);
  
  	(void) fwrite((char *) &datum, sizeof(datum), 1, pwp->ifp);
  
--- 291,300 ----
      if ((pwp->flags & PFOR_FLUSH) || !(pwp->count % NUMWORDS))
      {
  	int i;
! 	c_int32 datum;
  	register char *ostr;
  
! 	datum = (c_int32) ftell(pwp->dfp);
  
  	(void) fwrite((char *) &datum, sizeof(datum), 1, pwp->ifp);
  
***************
*** 332,340 ****
  char *
  GetPW(pwp, number)
      PWDICT *pwp;
!     int32 number;
  {
!     int32 datum;
      register int i;
      register char *ostr;
      register char *nstr;
--- 332,340 ----
  char *
  GetPW(pwp, number)
      PWDICT *pwp;
!     c_int32 number;
  {
!     c_int32 datum;
      register int i;
      register char *ostr;
      register char *nstr;
***************
*** 341,348 ****
      register char *bptr;
      char buffer[NUMWORDS * MAXWORDLEN];
      static char data[NUMWORDS][MAXWORDLEN];
!     static int32 prevblock = 0xffffffff;
!     int32 thisblock;
  
      if (pwp->header.pih_magic != PIH_MAGIC)
      {
--- 341,348 ----
      register char *bptr;
      char buffer[NUMWORDS * MAXWORDLEN];
      static char data[NUMWORDS][MAXWORDLEN];
!     static c_int32 prevblock = 0xffffffff;
!     c_int32 thisblock;
  
      if (pwp->header.pih_magic != PIH_MAGIC)
      {
***************
*** 360,366 ****
  	return (data[number % NUMWORDS]);
      }
  
!     if (fseek(pwp->ifp, sizeof(struct pi_header) + (thisblock * sizeof(int32)), 0))
      {
  #ifdef	CRACKLIB_PERROR
  	perror("(index fseek failed)");
--- 360,366 ----
  	return (data[number % NUMWORDS]);
      }
  
!     if (fseek(pwp->ifp, sizeof(struct pi_header) + (thisblock * sizeof(c_int32)), 0))
      {
  #ifdef	CRACKLIB_PERROR
  	perror("(index fseek failed)");
***************
*** 421,434 ****
  /*
   * FindPW - check if <string> is in dictionary <pwp>
   */
! int32
  FindPW(pwp, string)
      PWDICT *pwp;
      char *string;
  {
!     register int32 lwm;
!     register int32 hwm;
!     register int32 middle = 0;
      register char *this;
  
      if (pwp->header.pih_magic != PIH_MAGIC)
--- 421,434 ----
  /*
   * FindPW - check if <string> is in dictionary <pwp>
   */
! c_int32
  FindPW(pwp, string)
      PWDICT *pwp;
      char *string;
  {
!     register c_int32 lwm;
!     register c_int32 hwm;
!     register c_int32 middle = 0;
      register char *this;
  
      if (pwp->header.pih_magic != PIH_MAGIC)
*** /tmp/daaEdua	Tue Sep 22 11:20:06 1998
--- src/PasswordCheck/cracklib/tools/packer.c	Tue Sep 22 11:06:40 1998
***************
*** 5,11 ****
   * in the "LICENCE" document which accompanies distributions of Crack v4.0 
   * and upwards.
   */
! static char utid[] = "@(#)packer.c	1.1 6/28/93 (cc.utexas.edu)";
  
  #include "packer.h"
  
--- 5,11 ----
   * in the "LICENCE" document which accompanies distributions of Crack v4.0 
   * and upwards.
   */
! static char utid[] = "@(#)packer.c	1.2 9/22/98 (cc.utexas.edu)";
  
  #include "packer.h"
  
***************
*** 14,21 ****
      int argc;
      char *argv[];
  {
!     int32 readed;
!     int32 wrote;
      PWDICT *pwp;
      char buffer[STRINGSIZE];
  
--- 14,21 ----
      int argc;
      char *argv[];
  {
!     c_int32 readed;
!     c_int32 wrote;
      PWDICT *pwp;
      char buffer[STRINGSIZE];
  
*** /tmp/daaxqca	Tue Sep 22 11:20:07 1998
--- src/PasswordCheck/cracklib/tools/testlib.c	Tue Sep 22 11:06:40 1998
***************
*** 13,19 ****
  	int	argc;
  	char	**argv;
  {
!     int32 i;
      char buffer[STRINGSIZE];
  
      printf("enter potential passwords, one per line...\n");
--- 13,19 ----
  	int	argc;
  	char	**argv;
  {
!     c_int32 i;
      char buffer[STRINGSIZE];
  
      printf("enter potential passwords, one per line...\n");
*** /tmp/daaicva	Tue Sep 22 11:20:07 1998
--- src/PasswordCheck/cracklib/tools/testnum.c	Tue Sep 22 11:06:40 1998
***************
*** 7,13 ****
   */
  
  #ifndef lint
! static char sccsid[] = "@(#)testnum.c	1.3 8/9/96 (cc.utexas.edu)";
  #endif
  
  #include "packer.h"
--- 7,13 ----
   */
  
  #ifndef lint
! static char sccsid[] = "@(#)testnum.c	1.4 9/22/98 (cc.utexas.edu)";
  #endif
  
  #include "packer.h"
***************
*** 17,23 ****
  int	argc;
  char	**argv;
  {
!     int32 i;
      PWDICT *pwp;
      char buffer[STRINGSIZE];
  
--- 17,23 ----
  int	argc;
  char	**argv;
  {
!     c_int32 i;
      PWDICT *pwp;
      char buffer[STRINGSIZE];
  
*** /tmp/daarnCa	Tue Sep 22 11:20:07 1998
--- src/PasswordCheck/cracklib/tools/teststr.c	Tue Sep 22 11:06:40 1998
***************
*** 7,13 ****
   */
  
  #ifndef lint
! static char sccsid[] = "@(#)teststr.c	1.3 8/9/96 (cc.utexas.edu)";
  #endif
  
  #include "packer.h"
--- 7,13 ----
   */
  
  #ifndef lint
! static char sccsid[] = "@(#)teststr.c	1.4 9/22/98 (cc.utexas.edu)";
  #endif
  
  #include "packer.h"
***************
*** 17,23 ****
  int	argc;
  char	**argv;
  {
!     int32 i;
      PWDICT *pwp;
      char buffer[STRINGSIZE];
  
--- 17,23 ----
  int	argc;
  char	**argv;
  {
!     c_int32 i;
      PWDICT *pwp;
      char buffer[STRINGSIZE];
  
***************
*** 47,53 ****
  
      while (fgets (buffer, STRINGSIZE, stdin))
      {
!     	int32 i;
  
  	Chop(buffer);
  	i = FindPW(pwp, buffer);
--- 47,53 ----
  
      while (fgets (buffer, STRINGSIZE, stdin))
      {
!     	c_int32 i;
  
  	Chop(buffer);
  	i = FindPW(pwp, buffer);
*** /tmp/daaqDna	Tue Sep 22 11:20:07 1998
--- src/PasswordCheck/cracklib/tools/unpacker.c	Tue Sep 22 11:06:41 1998
***************
*** 13,19 ****
      int argc;
      char *argv[];
  {
!     int32 i;
      PWDICT *pwp;
      char buffer[STRINGSIZE];
  
--- 13,19 ----
      int argc;
      char *argv[];
  {
!     c_int32 i;
      PWDICT *pwp;
      char buffer[STRINGSIZE];
  
*** /tmp/daantua	Tue Sep 22 11:20:07 1998
--- src/PasswordCheck/version.c.SH	Tue Sep 22 11:19:29 1998
***************
*** 70,76 ****
  
  /*
   *	checkpassword version information
!  *	@(#)version.c.SH	1.1 7/10/98 (cc.utexas.edu)
   */
  !NO!SUBS!
  $spitshell >>version.c <<!GROK!THIS!
--- 70,76 ----
  
  /*
   *	checkpassword version information
!  *	@(#)version.c.SH	1.2 9/22/98 (cc.utexas.edu)
   */
  !NO!SUBS!
  $spitshell >>version.c <<!GROK!THIS!
***************
*** 81,87 ****
  Build options:	$cc_osflags\n";
  
  char	*version = "checkpassword 2.0 (07/01/1998)",
! 	*patchlevel = "0 (07/01/1998)";
  
  /*
   * End version.c.SH
--- 81,87 ----
  Build options:	$cc_osflags\n";
  
  char	*version = "checkpassword 2.0 (07/01/1998)",
! 	*patchlevel = "02 (09/22/1998)";
  
  /*
   * End version.c.SH
*** /tmp/daaogEa	Tue Sep 22 11:20:07 1998
--- src/version.c.SH	Tue Sep 22 11:18:02 1998
***************
*** 70,76 ****
  
  /*
   *	npasswd version information
!  *	@(#)version.c.SH	1.11 9/18/98 (cc.utexas.edu)
   */
  !NO!SUBS!
  $spitshell >>version.c <<!GROK!THIS!
--- 70,76 ----
  
  /*
   *	npasswd version information
!  *	@(#)version.c.SH	1.12 9/22/98 (cc.utexas.edu)
   */
  !NO!SUBS!
  $spitshell >>version.c <<!GROK!THIS!
***************
*** 81,87 ****
  Build options:	$cc_osflags\n";
  
  char	*npasswd_version = "$package $baserev (07/01/1998)",
! 	*npasswd_patchlevel = "01 (09/18/1998)";
  
  /*
   * End version.c.SH
--- 81,87 ----
  Build options:	$cc_osflags\n";
  
  char	*npasswd_version = "$package $baserev (07/01/1998)",
! 	*npasswd_patchlevel = "02 (09/22/1998)";
  
  /*
   * End version.c.SH
