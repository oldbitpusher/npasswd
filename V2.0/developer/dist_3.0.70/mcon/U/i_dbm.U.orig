?RCS: $Id: i_dbm.U,v 3.0.1.1 1995/05/12 12:16:05 ram Exp $
?RCS:
?RCS: Copyright (c) 1991-1993, Raphael Manfredi
?RCS: 
?RCS: You may redistribute only under the terms of the Artistic Licence,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic Licence; a copy of which may be found at the root
?RCS: of the source tree for dist 3.0.
?RCS:
?RCS: $Log: i_dbm.U,v $
?RCS: Revision 3.0.1.1  1995/05/12  12:16:05  ram
?RCS: patch54: made more robust by checking both header and lib (ADO)
?RCS:
?RCS: Revision 3.0  1993/08/18  12:08:15  ram
?RCS: Baseline for dist 3.0 netwide release.
?RCS:
?MAKE:i_dbm: Inhdr Inlibc Setvar
?MAKE:	-pick add $@ %<
?S:i_dbm (d_odbm):
?S:	This variable conditionally defines the I_DBM symbol, which
?S:	indicates to the C program that <dbm.h> exists and should
?S:	be included.
?S:.
?C:I_DBM (HAS_ODBM ODBM):
?C:	This symbol, if defined, indicates that <dbm.h> exists and should
?C:	be included.
?C:.
?H:#$i_dbm I_DBM	/**/
?H:.
?T:t_dbm d_dbmclose
?LINT:set i_dbm
: see if dbm.h is available
?X: t_dbm is a tentative check.  We might just have the header, not
?X: the library.  We look for dbmclose() rather than dbminit() because
?X: some versions of SCO Unix have -ldbm, but are missing dbmclose(). -- ADO
set dbm.h t_dbm
eval $inhdr
case "$t_dbm" in
$define)
	: see if dbmclose exists
	set dbmclose d_dbmclose
	eval $inlibc
	case "$d_dbmclose" in
	$undef)
		t_dbm="$undef"
		echo "We won't be including <dbm.h>"
		;;
	esac
	;;
esac
val="$t_dbm"
set i_dbm
eval $setvar

