h34432
s 00004/00004/00063
d D 1.3 98/07/15 16:06:55 clyde 3 2
c Set trdown var properly
e
s 00015/00008/00052
d D 1.2 96/08/30 15:51:25 clyde 2 1
c Export tr upcase & tr lowercase options
e
s 00060/00000/00000
d D 1.1 96/08/29 15:24:13 clyde 1 0
c date and time created 96/08/29 15:24:13 by clyde
e
u
U
f e 0
t
T
I 1
?RCS: $Id: Tr.U,v 3.0.1.2 1994/10/29 18:00:54 ram Exp $
?RCS:
I 2
?RCS: %W% %G% (cc.utexas.edu) %P%
?RCS:
E 2
?RCS: Copyright (c) 1991-1993, Raphael Manfredi
?RCS: 
?RCS: You may redistribute only under the terms of the Artistic Licence,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic Licence; a copy of which may be found at the root
?RCS: of the source tree for dist 3.0.
?RCS:
?RCS: $Log: Tr.U,v $
?RCS: Revision 3.0.1.2  1994/10/29  18:00:54  ram
?RCS: patch43: forgot to quote $@ to protect against "evil" characters
?RCS:
?RCS: Revision 3.0.1.1  1994/10/29  15:58:35  ram
?RCS: patch36: created
?RCS:
?X: 
?X: This unit produces a bit of shell code that must be dotted in in order
?X: to do a character translation. It catches translations to uppercase or
?X: to lowercase, and then invokes the real tr to perform the job.
?X:
?X: This unit is necessary on HP machines (HP strikes again!) with non-ascii
?X: ROMAN8-charset, where normal letters are not arranged in a row, so a-z
?X: covers not the whole alphabet but lots of special chars. This was reported
?X: by Andreas Sahlbach <a.sahlbach@tu-bs.de>.
?X:
?X: Units performing a tr '[A-Z]' '[a-z]' or the other way round should include
?X: us in their dependency and use ./tr instead.
?X:
D 2
?MAKE:Tr: startsh tr eunicefix
E 2
I 2
?MAKE:Tr trup trdown: startsh tr eunicefix
E 2
?MAKE:	-pick add $@ %<
I 2
?S:trup:
?S:	This variable contains the tr class for upper case alpha
?S:.
?S:trdown:
?S:	This variable contains the tr class for lower case alpha
?S:.
E 2
?F:./tr
D 2
?T:up low
E 2
: see whether [:lower:] and [:upper:] are supported character classes
echo " "
D 2
up='[A-Z]'
low='[a-z]'
E 2
I 2
trup='[A-Z]'
D 3
trlow='[a-z]'
E 3
I 3
trdown='[a-z]'
E 3
E 2
case "`echo AbyZ | $tr '[:lower:]' '[:upper:]' 2>/dev/null`" in
ABYZ)
	echo "Good, your tr supports [:lower:] and [:upper:] to convert case." >&4
D 2
	up='[:upper:]'
	low='[:lower:]'
E 2
I 2
	trup='[:upper:]'
D 3
	trlow='[:lower:]'
E 3
I 3
	trdown='[:lower:]'
E 3
E 2
	;;
*)
	echo "Your tr only supports [a-z] and [A-Z] to convert case." >&4
	;;
esac
: set up the translation script tr, must be called with ./tr of course
cat >tr <<EOSC
$startsh
case "\$1\$2" in
D 2
'[A-Z][a-z]') exec $tr '$up' '$low';;
'[a-z][A-Z]') exec $tr '$low' '$up';;
E 2
I 2
D 3
'[A-Z][a-z]') exec $tr '$trup' '$trlow';;
'[a-z][A-Z]') exec $tr '$trlow' '$trup';;
E 3
I 3
'[A-Z][a-z]') exec $tr '$trup' '$trdown';;
'[a-z][A-Z]') exec $tr '$trdown' '$trup';;
E 3
E 2
esac
exec $tr "\$@"
EOSC
chmod +x tr
$eunicefix tr

E 1
