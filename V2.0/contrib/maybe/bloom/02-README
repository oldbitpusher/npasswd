Making filters
--------------

The program MakeBlf constructs a Bloom filter from an ascii word list.

To make a new filter type

    MakeBlf filename size multiplicity listfile ...

where

    filename	is the name of the filter to be constructed
    size	is its size in bytes (will be rounded up to a power
		    of two)
    multiplicity is the number of times each list item will be hashed
    listfile	is a file containing an ascii word list

Word lists have one item per line.  Case and leading or trailing blanks
are significant.  Lines beginning with '#' are treated as comments and
ignored.

The program prints a line for each list file:

     14/14           14 0.00000 lexicon/abbr.kl
   4047/4106       4061 0.00000 lexicon/acronyms
			  ...
   1067/8884     509290 0.00037 lexicon/vu-givenname
  13839/24153    578050 0.00095 lexicon/zipcodes

where the numbers on each line are

    new (nonduplicate) items added to the filter from this list              
    total items generated by this list              
    cumulative total items in filter so far
    false-positive probability for the filter so far

The number of filter items added from a list may differ from the number
of lines in the list because

    a list item may generate more than one filter item ("New York"
	generates "new york", "newyork", "newYork")
    an item may duplicate an item from a previous list or from the
	same list ("physiology" and "physiological" both generate
	"physiolo", "Batman" and  "batman" both generate "batman" 

To add new items to an existing filter type

    MakeBlf filename + listfile ...

(filter size and multiplicity are taken from the existing filter
"filename").

The filter distributed as "checkpasswd.filter" was constructed by the
command

    MakeBlf checkpasswd.filter 1000000 11 lexicon/abbr.kl ...

MakeBlf's output is in the file "Filter.log".  For comparison, output
from the construction of a filter from the same word lists but with
the options VOWEL_STRIP and LONG_REVERSE enabled is in 
"BigFilter.log"; the command was

    MakeBlf checkpasswd.filter 2000000 11 lexicon/abbr.kl ...

Note that enabling those options nearly doubled the number of items in
the filter, requiring two megabytes instead of one to get an acceptably
low false-positive rate.
