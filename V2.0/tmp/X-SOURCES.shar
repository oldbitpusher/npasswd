#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of shell archive."
# Contents:  Configure Makefile.SH doc/Makefile.SH
# Wrapped by clyde@grapevine.cc.utexas.edu on Thu Oct 15 10:34:51 1998
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'Configure' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Configure'\"
else
echo shar: Extracting \"'Configure'\" \(138308 characters\)
sed "s/^X//" >'Configure' <<'END_OF_FILE'
X#! /bin/sh
X#
X# If these # comments don't work, trim them. Don't worry about any other
X# shell scripts, Configure will trim # comments from them for you.
X#
X# (If you are trying to port this package to a machine without sh,
X# I would suggest you have a look at the prototypical config_h.SH file
X# and edit it to reflect your system. Some packages may include samples
X# of config.h for certain machines, so you might look for one of those.)
X#
X# Yes, you may rip this off to use in other distribution packages. This
X# script belongs to the public domain and cannot be copyrighted.
X#
X# (Note: this Configure script was generated automatically. Rather than
X# working with this copy of Configure, you may wish to get metaconfig.
X# The dist-3.0 package (which contains metaconfig) was posted in
X# comp.sources.misc and is available on CPAN under authors/id/RAM so
X# you may fetch it yourself from your nearest archive site.)
X#
X
X# $Id: Head.U,v 3.0.1.9 1997/02/28 15:02:09 ram Exp $
X#
X# Generated on Fri Sep 18 11:39:19 CDT 1998 [metaconfig 3.0 PL70]
X
Xcat >/tmp/c1$$ <<EOF
XARGGGHHHH!!!!!
X
XSCO csh still thinks true is false.  Write to SCO today and tell them that next
Xyear Configure ought to "rm /bin/csh" unless they fix their blasted shell. :-)
X
X(Actually, Configure ought to just patch csh in place.  Hmm.  Hmmmmm.  All
Xwe'd have to do is go in and swap the && and || tokens, wherever they are.)
X
X[End of diatribe. We now return you to your regularly scheduled programming...]
XEOF
Xcat >/tmp/c2$$ <<EOF
X
XOOPS!  You naughty creature!  You didn't run Configure with sh!
XI will attempt to remedy the situation by running sh for you...
XEOF
X
Xtrue || cat /tmp/c1$$ /tmp/c2$$
Xtrue || exec sh $0 $argv:q
X
X(exit $?0) || cat /tmp/c2$$
X(exit $?0) || exec sh $0 $argv:q
Xrm -f /tmp/c1$$ /tmp/c2$$
X
X: compute my invocation name
Xme=$0
Xcase "$0" in
X*/*)
X	me=`echo $0 | sed -e 's!.*/\(.*\)!\1!' 2>/dev/null`
X	test "$me" || me=$0
X	;;
Xesac
X
X: Proper PATH separator
Xp_=:
X: On OS/2 this directory should exist if this is not floppy only system :-]
Xif test -d c:/.; then
X	p_=\;
X	PATH=`cmd /c "echo %PATH%" | tr '\\\\' / `
X	OS2_SHELL=`cmd /c "echo %OS2_SHELL%" | tr '\\\\' / | tr '[A-Z]' '[a-z]'`
Xfi
X
X: Proper PATH setting
Xpaths='/bin /usr/bin /usr/local/bin /usr/ucb /usr/local /usr/lbin'
Xpaths="$paths /opt/bin /opt/local/bin /opt/local /opt/lbin"
Xpaths="$paths /usr/5bin /etc /usr/gnu/bin /usr/new /usr/new/bin /usr/nbin"
Xpaths="$paths /opt/gnu/bin /opt/new /opt/new/bin /opt/nbin"
Xpaths="$paths /sys5.3/bin /sys5.3/usr/bin /bsd4.3/bin /bsd4.3/usr/ucb"
Xpaths="$paths /bsd4.3/usr/bin /usr/bsd /bsd43/bin /usr/ccs/bin"
Xpaths="$paths /etc /usr/lib /usr/ucblib /lib /usr/ccs/lib"
Xpaths="$paths /sbin /usr/sbin /usr/libexec"
X
Xfor p in $paths
Xdo
X	case "$p_$PATH$p_" in
X	*$p_$p$p_*) ;;
X	*) test -d $p && PATH=$PATH$p_$p ;;
X	esac
Xdone
X
XPATH=.$p_$PATH
Xexport PATH
X
X: shall we be using ksh?
Xinksh=''
Xneedksh=''
Xavoidksh=''
Xnewsh=/bin/ksh
Xchangesh=''
Xif (PATH=.; alias -x) >/dev/null 2>&1; then
X		inksh=true
Xfi
Xif test -f /hp-ux -a -f /bin/ksh; then
X	needksh='to avoid sh bug in "here document" expansion'
Xfi
Xif test -d /usr/lpp -a -f /usr/bin/bsh -a -f /usr/bin/uname; then
X	if test X`/usr/bin/uname -v` = X4; then
X		avoidksh="to avoid AIX 4's /bin/sh"
X		newsh=/usr/bin/bsh
X	fi
Xfi
Xcase "$inksh/$needksh" in
X/[a-z]*)
X		unset ENV
X		changesh=true
X		reason="$needksh"
X	;;
Xesac
Xcase "$inksh/$avoidksh" in
Xtrue/[a-z]*)
X	changesh=true
X	reason="$avoidksh"
X	;;
Xesac
Xcase "$inksh/$needksh-$avoidksh-" in
Xtrue/--)
X		cat <<EOM
X(I see you are using the Korn shell.  Some ksh's blow up on $me,
Xmainly on older exotic systems.  If yours does, try the Bourne shell instead.)
XEOM
X	;;
Xesac
Xcase "$changesh" in
Xtrue)
X	echo "(Feeding myself to $newsh $reason.)"
X	case "$0" in
X	Configure|*/Configure) exec $newsh $0 "$@";;
X	*) exec $newsh Configure "$@";;
X	esac
X	;;
Xesac
X
X: Configure runs within the UU subdirectory
Xtest -d UU || mkdir UU
Xunset CDPATH
Xcd UU && rm -f ./*
X
Xd_bsd=''
Xd_eunice=''
Xd_xenix=''
Xeunicefix=''
XMcc=''
Xar=''
Xawk=''
Xbash=''
Xbison=''
Xbyacc=''
Xcat=''
Xchgrp=''
Xchmod=''
Xchown=''
Xcomm=''
Xcompress=''
Xcp=''
Xcpio=''
Xcpp=''
Xcsh=''
Xdate=''
Xecho=''
Xegrep=''
Xemacs=''
Xexpr=''
Xfind=''
Xflex=''
Xgcc=''
Xgrep=''
Xgzip=''
Xinews=''
Xksh=''
Xless=''
Xline=''
Xlint=''
Xln=''
Xlp=''
Xlpr=''
Xls=''
Xmail=''
Xmailx=''
Xmake=''
Xmkdir=''
Xmore=''
Xmv=''
Xnroff=''
Xperl=''
Xpg=''
Xpmake=''
Xpr=''
Xrm=''
Xrmail=''
Xsed=''
Xsendmail=''
Xshar=''
Xsleep=''
Xsmail=''
Xsort=''
Xsubmit=''
Xtail=''
Xtar=''
Xtbl=''
Xtest=''
Xtouch=''
Xtr=''
Xtroff=''
Xuname=''
Xuniq=''
Xuuname=''
Xvi=''
Xzcat=''
Xzip=''
Xp_aixauth=''
Xp_dbmpw=''
Xp_dictionaries=''
Xp_docdir=''
Xp_hesiod=''
Xp_history=''
Xp_hpuxauth=''
Xp_installdir=''
Xp_keepdir=''
Xp_kerberos=''
Xp_nis=''
Xp_nispasswd=''
Xp_nisplus=''
Xp_nsswitch=''
Xp_osf1auth=''
Xp_paranoid=''
Xp_passwdfile=''
Xp_replace=''
Xp_secure_rpc=''
Xp_shadow=''
Xp_shadowfile=''
Xp_svcconf=''
Xp_sysprogs=''
Xp_u4auth=''
Xp_utildir=''
Xtop_level=''
Xp_osMajor=''
Xp_osMicro=''
Xp_osMinor=''
Xp_osName=''
Xp_osRev=''
Xhint=''
Xmyuname=''
Xosname=''
Xosvers=''
XAuthor=''
XDate=''
XHeader=''
XId=''
XLocker=''
XLog=''
XRCSfile=''
XRevision=''
XSource=''
XState=''
Xtrdown=''
Xtrup=''
Xarchobjs=''
Xfirstmakefile=''
Xafs=''
Xbaserev=''
Xcc=''
Xgccversion=''
Xcc_dbflags=''
Xcc_osflags=''
Xccflags=''
Xcppflags=''
Xldflags=''
Xlkflags=''
Xoptimize=''
Xcf_by=''
Xcf_time=''
Xcontains=''
Xcpplast=''
Xcppminus=''
Xcpprun=''
Xcppstdin=''
Xd_bcopy=''
Xd_bzero=''
Xd_const=''
Xd_fchmod=''
Xd_fchown=''
Xaphostname=''
Xd_gethname=''
Xd_phostname=''
Xd_uname=''
Xd_gnulibc=''
Xd_memcpy=''
Xd_memset=''
Xd_open3=''
Xd_portable=''
Xd_readdir=''
Xd_rewinddir=''
Xd_seekdir=''
Xd_telldir=''
Xd_rename=''
Xd_sigblock=''
Xd_strccmp=''
Xd_index=''
Xd_strchr=''
Xd_strdup=''
Xd_voidsig=''
Xsignal_t=''
Xgidtype=''
Xh_fcntl=''
Xh_sysfile=''
Xi_dbm=''
Xi_rpcsvcdbm=''
Xd_dirnamlen=''
Xdirentrytype=''
Xi_dirent=''
Xi_memory=''
Xi_ndbm=''
Xd_pwage=''
Xd_pwchange=''
Xd_pwclass=''
Xd_pwcomment=''
Xd_pwexpire=''
Xd_pwquota=''
Xi_pwd=''
Xi_stdlib=''
Xi_string=''
Xstrings=''
Xi_sysparam=''
Xi_sysresrc=''
Xi_sgtty=''
Xi_termio=''
Xi_termios=''
Xi_systime=''
Xi_systimek=''
Xi_time=''
Xtimeincl=''
Xi_unistd=''
Xi_stdarg=''
Xi_varargs=''
Xi_varhdr=''
Xinstall=''
Xinstalldir=''
Xlib=''
Xlibexp=''
Xlibc=''
Xglibpth=''
Xlibpth=''
Xloclibpth=''
Xplibpth=''
Xxlibpth=''
Xlibs=''
Xlns=''
Xmkdep=''
Xhuge=''
Xlarge=''
Xmedium=''
Xmodels=''
Xsmall=''
Xsplit=''
Xmydomain=''
Xmyhostname=''
Xphostname=''
Xc=''
Xn=''
Xgroupcat=''
Xhostcat=''
Xpasscat=''
Xorderlib=''
Xranlib=''
Xp_clnt_sperrno=''
Xp_fgetpwent=''
Xp_getusershell=''
Xp_lckpwdf=''
Xp_putpwent=''
Xp_rpclib=''
Xp_xdr_passwd=''
Xp_xdr_uid_t=''
Xp_xencrypt=''
Xp_sigposix=''
Xp_sysinfo=''
Xp_ttyposix=''
Xpackage=''
Xspackage=''
Xprefix=''
Xprefixexp=''
Xinstallprivlib=''
Xprivlib=''
Xprivlibexp=''
Xprototype=''
Xsh=''
Xso=''
Xsharpbang=''
Xshsharp=''
Xspitshell=''
Xsrc=''
Xstartsh=''
Xsysman=''
Xuidsigned=''
Xuidtype=''
Xnm_opt=''
Xnm_so_opt=''
Xrunnm=''
Xusenm=''
Xincpath=''
Xmips=''
Xmips_type=''
Xusrinc=''
Xdefvoidused=''
Xvoidflags=''
XCONFIG=''
X
Xdefine='define'
Xundef='undef'
Xsmallmach='pdp11 i8086 z8000 i80286 iAPX286'
Xrmlist=''
X
X: We must find out about Eunice early
Xeunicefix=':'
Xif test -f /etc/unixtovms; then
X	eunicefix=/etc/unixtovms
Xfi
Xif test -f /etc/unixtovms.exe; then
X	eunicefix=/etc/unixtovms.exe
Xfi
X
X: list of known cpp symbols, sorted alphabetically
Xal="AMIX BIT_MSF BSD BSD4_3 BSD_NET2 CMU CRAY DGUX DOLPHIN DPX2"
Xal="$al GO32 GOULD_PN HP700 I386 I80960 I960 Lynx M68000 M68K MACH"
Xal="$al MIPSEB MIPSEL MSDOS MTXINU MULTIMAX MVS"
Xal="$al M_COFF M_I186 M_I286 M_I386 M_I8086 M_I86 M_I86SM"
Xal="$al M_SYS3 M_SYS5 M_SYSIII M_SYSV M_UNIX M_XENIX"
Xal="$al NeXT OCS88 OSF1 PARISC PC532 PORTAR POSIX"
Xal="$al PWB R3000 RES RISC6000 RT Sun386i SVR3 SVR4"
Xal="$al SYSTYPE_BSD SYSTYPE_SVR4 SYSTYPE_SYSV Tek4132 Tek4300"
Xal="$al UMAXV USGr4 USGr4_2 UTEK UTS UTek UnicomPBB UnicomPBD Utek"
Xal="$al VMS Xenix286"
Xal="$al _AIX _AIX32 _AIX370 _AM29000 _COFF _CRAY _CX_UX _EPI"
Xal="$al _IBMESA _IBMR2 _M88K _M88KBCS_TARGET"
Xal="$al _MIPSEB _MIPSEL _M_COFF _M_I86 _M_I86SM _M_SYS3"
Xal="$al _M_SYS5 _M_SYSIII _M_SYSV _M_UNIX _M_XENIX _NLS _PGC_ _R3000"
Xal="$al _SYSTYPE_BSD _SYSTYPE_BSD43 _SYSTYPE_SVR4"
Xal="$al _SYSTYPE_SYSV _SYSV3 _U370 _UNICOS"
Xal="$al __386BSD__ __BIG_ENDIAN __BIG_ENDIAN__ __BSD_4_4__"
Xal="$al __DGUX__ __DPX2__ __H3050R __H3050RX"
Xal="$al __LITTLE_ENDIAN __LITTLE_ENDIAN__ __MACH__"
Xal="$al __MIPSEB __MIPSEB__ __MIPSEL __MIPSEL__"
Xal="$al __Next__ __OSF1__ __PARAGON__ __PGC__ __PWB __STDC__"
Xal="$al __SVR4_2__ __UMAXV__"
Xal="$al ____386BSD____ __alpha __alpha__ __amiga"
Xal="$al __bsd4_2 __bsd4_2__ __bsdi__ __convex__"
Xal="$al __host_mips__"
Xal="$al __hp9000s200 __hp9000s300 __hp9000s400 __hp9000s500"
Xal="$al __hp9000s500 __hp9000s700 __hp9000s800"
Xal="$al __hppa __hpux __hp_osf __i286 __i286__ __i386 __i386__"
Xal="$al __i486 __i486__ __i860 __i860__ __ibmesa __ksr1__ __linux__"
Xal="$al __m68k __m68k__ __m88100__ __m88k __m88k__"
Xal="$al __mc68000 __mc68000__ __mc68020 __mc68020__"
Xal="$al __mc68030 __mc68030__ __mc68040 __mc68040__"
Xal="$al __mc88100 __mc88100__ __mips __mips__"
Xal="$al __motorola__ __osf__ __pa_risc __sparc__ __stdc__"
Xal="$al __sun __sun__ __svr3__ __svr4__ __ultrix __ultrix__"
Xal="$al __unix __unix__ __uxpm__ __uxps__ __vax __vax__"
Xal="$al _host_mips _mips _unix"
Xal="$al a29k aegis aix aixpc alliant alpha am29000 amiga ansi ardent"
Xal="$al apollo ardent att386 att3b"
Xal="$al bsd bsd43 bsd4_2 bsd4_3 bsd4_4 bsdi bull"
Xal="$al cadmus clipper concurrent convex cray ctix"
Xal="$al dmert encore gcos gcx gimpel gould"
Xal="$al hbullx20 hcx host_mips hp200 hp300 hp700 hp800"
Xal="$al hp9000 hp9000s300 hp9000s400 hp9000s500"
Xal="$al hp9000s700 hp9000s800 hp9k8 hppa hpux"
Xal="$al i186 i286 i386 i486 i8086"
Xal="$al i80960 i860 iAPX286 ibm ibm032 ibmrt interdata is68k"
Xal="$al ksr1 linux luna luna88k m68k m88100 m88k"
Xal="$al mc300 mc500 mc68000 mc68010 mc68020 mc68030"
Xal="$al mc68040 mc68060 mc68k mc68k32 mc700"
Xal="$al mc88000 mc88100 merlin mert mips mvs n16"
Xal="$al ncl_el ncl_mr"
Xal="$al news1500 news1700 news1800 news1900 news3700"
Xal="$al news700 news800 news900 ns16000 ns32000"
Xal="$al ns32016 ns32332 ns32k nsc32000 os osf"
Xal="$al parisc pc532 pdp11 plexus posix pyr"
Xal="$al riscix riscos scs sequent sgi sinix sony sony_news"
Xal="$al sonyrisc sparc sparclite spectrum stardent stratos"
Xal="$al sun sun3 sun386 svr4 sysV68 sysV88"
Xal="$al titan tower tower32 tower32_200 tower32_600 tower32_700"
Xal="$al tower32_800 tower32_850 tss u370 u3b u3b2 u3b20 u3b200"
Xal="$al u3b20d u3b5 ultrix unix unixpc unos vax venix vms"
Xal="$al xenix z8000"
X
X: No trailing extension on UNIX executables
X_exe='' 
X: Extra object files, if any, needed on this platform.
Xarchobjs=''
Xgccversion=''
Xi_sysselct=''
Xi_whoami=''
X: change the next line if compiling for Xenix/286 on Xenix/386
Xxlibpth='/usr/lib/386 /lib/386'
X
X: Possible local library directories to search.
Xloclibpth="/usr/local/lib /opt/local/lib /usr/gnu/lib"
Xloclibpth="$loclibpth /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib"
X
X: general looking path for locating libraries
Xglibpth="/shlib /usr/shlib /lib/pa1.1 /usr/lib/large"
Xglibpth="$glibpth /lib /usr/lib $xlibpth"
Xglibpth="$glibpth /lib/large /usr/lib/small /lib/small"
Xglibpth="$glibpth /usr/ccs/lib /usr/ucblib /usr/local/lib"
X
X: Private path used by Configure to find libraries.  Its value
X: is prepended to libpth. This variable takes care of special
X: machines, like the mips.  Usually, it should be empty.
Xplibpth=''
X
X: default library list
Xlibswanted=''
X: full support for void wanted by default
Xdefvoidused=15
X
X: no include file wanted by default
Xinclwanted=''
X
X: Some greps do not return status, grrr.
Xecho "grimblepritz" >grimble
Xif grep blurfldyick grimble >/dev/null 2>&1 ; then
X	contains=contains
Xelif grep grimblepritz grimble >/dev/null 2>&1 ; then
X	contains=grep
Xelse
X	contains=contains
Xfi
Xrm -f grimble
X: the following should work in any shell
Xcase "$contains" in
Xcontains*)
X	echo " "
X	echo "AGH!  Grep doesn't return a status.  Attempting remedial action."
X	cat >contains <<'EOSS'
Xgrep "$1" "$2" >.greptmp && cat .greptmp && test -s .greptmp
XEOSS
Xchmod +x contains
Xesac
X
X: first determine how to suppress newline on echo command
Xecho " "
Xecho "Checking echo to see how to suppress newlines..."
X(echo "hi there\c" ; echo " ") >.echotmp
Xif $contains c .echotmp >/dev/null 2>&1 ; then
X	echo "...using -n."
X	n='-n'
X	c=''
Xelse
X	cat <<'EOM'
X...using \c
XEOM
X	n=''
X	c='\c'
Xfi
Xecho $n "The star should be here-->$c"
Xecho '*'
Xrm -f .echotmp
X
X: Find the basic shell for Bourne shell scripts
Xcase "$sh" in
X'')
X	case "$SYSTYPE" in
X	*bsd*|sys5*) xxx="/$SYSTYPE/bin/sh";;
X	*) xxx='/bin/sh';;
X	esac
X	if test -f "$xxx"; then
X		sh="$xxx"
X	else
X		: Build up a list and do a single loop so we can 'break' out.
X		pth=`echo $PATH | sed -e "s/$p_/ /g"`
X		for xxx in sh bash ksh pdksh ash; do
X			for p in $pth; do
X				try="$try ${p}/${xxx}"
X			done
X		done
X		for xxx in $try; do
X			if test -f "$xxx"; then
X				sh="$xxx";
X				break
X			elif test -f "$xxx.exe"; then
X				sh="$xxx";
X				break
X			fi
X		done
X	fi
X	;;
Xesac
X
Xcase "$sh" in
X'')	cat <<EOM >&2
X$me:  Fatal Error:  I can't find a Bourne Shell anywhere.  
X
XUsually it's in /bin/sh.  How did you even get this far?
XPlease contact me (Senior UNIX Wacker) at npasswd-bugs@lists.cc.utexas.edu and 
Xwe'll try to straighten this all out.
XEOM
X	exit 1
X	;;
Xesac
X
X: see if sh knows # comments
Xif `$sh -c '#' >/dev/null 2>&1`; then
X	shsharp=true
X	spitshell=cat
X	xcat=/bin/cat
X	test -f $xcat || xcat=/usr/bin/cat
X	echo "#!$xcat" >try
X	$eunicefix try
X	chmod +x try
X	./try > today
X	if test -s today; then
X		sharpbang='#!'
X	else
X		echo "#! $xcat" > try
X		$eunicefix try
X		chmod +x try
X		./try > today
X		if test -s today; then
X			sharpbang='#! '
X		else
X			sharpbang=': use '
X		fi
X	fi
Xelse
X	echo " "
X	echo "Your $sh doesn't grok # comments--I will strip them later on."
X	shsharp=false
X	cd ..
X	echo "exec grep -v '^[ 	]*#'" >spitshell
X	chmod +x spitshell
X	$eunicefix spitshell
X	spitshell=`pwd`/spitshell
X	cd UU
X	echo "I presume that if # doesn't work, #! won't work either!"
X	sharpbang=': use '
Xfi
Xrm -f try today
X
X: figure out how to guarantee sh startup
Xcase "$startsh" in
X'') startsh=${sharpbang}${sh} ;;
X*)
Xesac
Xcat >try <<EOSS
X$startsh
Xset abc
Xtest "$?abc" != 1
XEOSS
X
Xchmod +x try
X$eunicefix try
Xif ./try; then
X	: echo "Yup, it does."
Xelse
X	echo "Hmm... '$startsh' does not guarantee sh startup..."
X	echo "You may have to fix up the shell scripts to make sure $sh runs them."
Xfi
Xrm -f try
X
X: produce awk script to parse command line options
Xcat >options.awk <<'EOF'
XBEGIN {
X	optstr = "dD:eEf:hKOrsSU:V";	# getopt-style specification
X
X	len = length(optstr);
X	for (i = 1; i <= len; i++) {
X		c = substr(optstr, i, 1);
X		if (i < len) a = substr(optstr, i + 1, 1); else a = "";
X		if (a == ":") {
X			arg[c] = 1;
X			i++;
X		}
X		opt[c] = 1;
X	}
X}
X{
X	expect = 0;
X	str = $0;
X	if (substr(str, 1, 1) != "-") {
X		printf("'%s'\n", str);
X		next;
X	}
X	len = length($0);
X	for (i = 2; i <= len; i++) {
X		c = substr(str, i, 1);
X		if (!opt[c]) {
X			printf("-%s\n", substr(str, i));
X			next;
X		}
X		printf("-%s\n", c);
X		if (arg[c]) {
X			if (i < len)
X				printf("'%s'\n", substr(str, i + 1));
X			else
X				expect = 1;
X			next;
X		}
X	}
X}
XEND {
X	if (expect)
X		print "?";
X}
XEOF
X
X: process the command line options
Xset X `for arg in "$@"; do echo "X$arg"; done |
X	sed -e s/X// | awk -f options.awk`
Xeval "set $*"
Xshift
Xrm -f options.awk
X
X: set up default values
Xfastread=''
Xreuseval=false
Xconfig_sh=''
Xalldone=''
Xerror=''
Xsilent=''
Xextractsh=''
Xoverride=''
Xknowitall=''
Xrm -f optdef.sh
Xcat >optdef.sh <<EOS
X$startsh
XEOS
X
X
X: option parsing
Xwhile test $# -gt 0; do
X	case "$1" in
X	-d) shift; fastread=yes;;
X	-e) shift; alldone=cont;;
X	-f)
X		shift
X		cd ..
X		if test -r "$1"; then
X			config_sh="$1"
X		else
X			echo "$me: cannot read config file $1." >&2
X			error=true
X		fi
X		cd UU
X		shift;;
X	-h) shift; error=true;;
X	-r) shift; reuseval=true;;
X	-s) shift; silent=true; realsilent=true;;
X	-E) shift; alldone=exit;;
X	-K) shift; knowitall=true;;
X	-O) shift; override=true;;
X	-S) shift; silent=true; extractsh=true;;
X	-D)
X		shift
X		case "$1" in
X		*=)
X			echo "$me: use '-U symbol=', not '-D symbol='." >&2
X			echo "$me: ignoring -D $1" >&2
X			;;
X		*=*) echo "$1" | \
X				sed -e "s/'/'\"'\"'/g" -e "s/=\(.*\)/='\1'/" >> optdef.sh;;
X		*) echo "$1='define'" >> optdef.sh;;
X		esac
X		shift
X		;;
X	-U)
X		shift
X		case "$1" in
X		*=) echo "$1" >> optdef.sh;;
X		*=*)
X			echo "$me: use '-D symbol=val', not '-U symbol=val'." >&2
X			echo "$me: ignoring -U $1" >&2
X			;;
X		*) echo "$1='undef'" >> optdef.sh;;
X		esac
X		shift
X		;;
X	-V) echo "$me generated by metaconfig 3.0 PL70." >&2
X		exit 0;;
X	--) break;;
X	-*) echo "$me: unknown option $1" >&2; shift; error=true;;
X	*) break;;
X	esac
Xdone
X
Xcase "$error" in
Xtrue)
X	cat >&2 <<EOM
XUsage: $me [-dehrsEKOSV] [-f config.sh] [-D symbol] [-D symbol=value]
X                 [-U symbol] [-U symbol=]
X  -d : use defaults for all answers.
X  -e : go on without questioning past the production of config.sh.
X  -f : specify an alternate default configuration file.
X  -h : print this help message and exit (with an error status).
X  -r : reuse C symbols value if possible (skips costly nm extraction).
X  -s : silent mode, only echoes questions and essential information.
X  -D : define symbol to have some value:
X         -D symbol         symbol gets the value 'define'
X         -D symbol=value   symbol gets the value 'value'
X  -E : stop at the end of questions, after having produced config.sh.
X  -K : do not use unless you know what you are doing.
X  -O : let -D and -U override definitions from loaded configuration file.
X  -S : perform variable substitutions on all .SH files (can mix with -f)
X  -U : undefine symbol:
X         -U symbol    symbol gets the value 'undef'
X         -U symbol=   symbol gets completely empty
X  -V : print version number and exit (with a zero status).
XEOM
X	exit 1
X	;;
Xesac
X
X: Sanity checks
Xcase "$fastread$alldone" in
Xyescont|yesexit) ;;
X*)
X	if test ! -t 0; then
X		echo "Say 'sh Configure', not 'sh <Configure'"
X		exit 1
X	fi
X	;;
Xesac
X
Xexec 4>&1
Xcase "$silent" in
Xtrue) exec 1>/dev/null;;
Xesac
X
X: run the defines and the undefines, if any, but leave the file out there...
Xtouch optdef.sh
X. ./optdef.sh
X
X: compute the number of columns on the terminal for proper question formatting
Xcase "$COLUMNS" in
X'') COLUMNS='80';;
Xesac
X
X: set up the echo used in my read
Xmyecho="case \"\$xxxm\" in
X'') echo $n \"\$rp $c\" >&4;;
X*) case \"\$rp\" in
X	'') echo $n \"[\$xxxm] $c\";;
X	*)
X		if test \`echo \"\$rp [\$xxxm]  \" | wc -c\` -ge $COLUMNS; then
X			echo \"\$rp\" >&4
X			echo $n \"[\$xxxm] $c\" >&4
X		else
X			echo $n \"\$rp [\$xxxm] $c\" >&4
X		fi
X		;;
X	esac;;
Xesac"
X
X: now set up to do reads with possible shell escape and default assignment
Xcat <<EOSC >myread
X$startsh
Xxxxm=\$dflt
X$myecho
Xans='!'
Xcase "\$fastread" in
Xyes) case "\$dflt" in
X	'') ;;
X	*) ans='';
X		case "\$silent-\$rp" in
X		true-) ;;
X		*) echo " " >&4;;
X		esac;;
X	esac;;
X*) case "\$silent" in
X	true) case "\$rp" in
X		'') ans='';;
X		esac;;
X	esac;;
Xesac
Xwhile expr "X\$ans" : "X!" >/dev/null; do
X	read answ
X	set x \$xxxm
X	shift
X	aok=''; eval "ans=\\"\$answ\\"" && aok=y
X	case  "\$answ" in
X	"!")
X		sh 1>&4
X		echo " "
X		$myecho
X		;;
X	!*)
X		set x \`expr "X\$ans" : "X!\(.*\)\$"\`
X		shift
X		sh 1>&4 -c "\$*"
X		echo " "
X		$myecho
X		;;
X	"\$ans")
X		case "\$ans" in
X		\\&*)
X			set x \`expr "X\$ans" : "X&\(.*\)\$"\`
X			shift
X			case "\$1" in
X			-d)
X				fastread=yes
X				echo "(OK, I'll run with -d after this question.)" >&4
X				;;
X			-*)
X				echo "*** Sorry, \$1 not supported yet." >&4
X				;;
X			esac
X			$myecho
X			ans=!
X			;;
X		esac;;
X	*)
X		case "\$aok" in
X		y)
X			echo "*** Substitution done -- please confirm."
X			xxxm="\$ans"
X			ans=\`echo $n "\$ans$c" | tr '\012' ' '\`
X			xxxm="\$ans"
X			ans=!
X			;;
X		*)
X			echo "*** Error -- try again."
X			ans=!
X			;;
X		esac
X		$myecho
X		;;
X	esac
X	case "\$ans\$xxxm\$nostick" in
X	'')
X		ans=!
X		$myecho
X		;;
X	esac
Xdone
Xcase "\$ans" in
X'') ans="\$xxxm";;
Xesac
XEOSC
X
X: set package name
Xpackage=npasswd
X
X: create .config dir to save info across Configure sessions
Xtest -d ../.config || mkdir ../.config
Xcat >../.config/README <<EOF
XThis directory created by Configure to save information that should
Xpersist across sessions for $package.
X
XYou may safely delete it if you wish.
XEOF
X
X: general instructions
Xneedman=true
Xfirsttime=true
Xuser=`(logname) 2>/dev/null`
Xcase "$user" in
X'') user=`whoami 2>&1`;;
Xesac
Xif $contains "^$user\$" ../.config/instruct >/dev/null 2>&1; then
X	firsttime=false
X	echo " "
X	rp='Would you like to see the instructions?'
X	dflt=n
X	. ./myread
X	case "$ans" in
X	[yY]*) ;;
X	*) needman=false;;
X	esac
Xfi
Xif $needman; then
X	cat <<EOH
X 
XThis installation shell script will examine your system and ask you questions
Xto determine how the npasswd package should be installed. If you get
Xstuck on a question, you may use a ! shell escape to start a subshell or
Xexecute a command.  Many of the questions will have default answers in square
Xbrackets; typing carriage return will give you the default.
X
XOn some of the questions which ask for file or directory names you are allowed
Xto use the ~name construct to specify the login directory belonging to "name",
Xeven if you don't have a shell which knows about that.  Questions where this is
Xallowed will be marked "(~name ok)".
X
XEOH
X	rp=''
X	dflt='Type carriage return to continue'
X	. ./myread
X	cat <<'EOH'
X
XThe prompter used in this script allows you to use shell variables and
Xbackticks in your answers.  You may use $1, $2, etc...  to refer to the words
Xin the default answer, as if the default line was a set of arguments given to a
Xscript shell.  This means you may also use $* to repeat the whole default line,
Xso you do not have to re-type everything to add something to the default.
X
XEverytime there is a substitution, you will have to confirm.  If there is an
Xerror (e.g. an unmatched backtick), the default answer will remain unchanged
Xand you will be prompted again.
X
XIf you are in a hurry, you may run 'Configure -d'.  This will bypass nearly all
Xthe questions and use the computed defaults (or the previous answers if there
Xwas already a config.sh file). Type 'Configure -h' for a list of options.
XYou may also start interactively and then answer '& -d' at any prompt to turn
Xon the non-interactive behaviour for the remaining of the execution.
X
XEOH
X	. ./myread
X	cat <<EOH
X
XMuch effort has been expended to ensure that this shell script will run on any
XUnix system.  If despite that it blows up on yours, your best bet is to edit
XConfigure and run it again.  If you can't run Configure for some reason,
Xyou'll have to generate a config.sh file by hand.  Whatever problems you
Xhave, let me (npasswd-bugs@lists.cc.utexas.edu) know how I blew it.
X
XThis installation script affects things in two ways:
X
X1) it may do direct variable substitutions on some of the files included
X   in this kit.
X2) it builds a config.h file for inclusion in C programs.  You may edit
X   any of these files as the need arises after running this script.
X
XIf you make a mistake on a question, there is no easy way to back up to it
Xcurrently.  The easiest thing to do is to edit config.sh and rerun all the SH
Xfiles.  Configure will offer to let you do this before it runs the SH files.
X
XEOH
X	dflt='Type carriage return to continue'
X	. ./myread
X	case "$firsttime" in
X	true) echo $user >>../.config/instruct;;
X	esac
Xfi
X
X: find out where common programs are
Xecho " "
Xecho "Locating common programs..." >&4
Xcat <<EOSC >loc
X$startsh
Xcase \$# in
X0) exit 1;;
Xesac
Xthing=\$1
Xshift
Xdflt=\$1
Xshift
Xfor dir in \$*; do
X	case "\$thing" in
X	.)
X	if test -d \$dir/\$thing; then
X		echo \$dir
X		exit 0
X	fi
X	;;
X	*)
X	for thisthing in \$dir/\$thing; do
X		: just loop through to pick last item
X	done
X	if test -f \$thisthing; then
X		echo \$thisthing
X		exit 0
X	elif test -f \$dir/\$thing.exe; then
X		: on Eunice apparently
X		echo \$dir/\$thing
X		exit 0
X	fi
X	;;
X	esac
Xdone
Xecho \$dflt
Xexit 1
XEOSC
Xchmod +x loc
X$eunicefix loc
Xloclist="
Xawk
Xcat
Xcomm
Xecho
Xexpr
Xgrep
Xmkdir
Xmv
Xrm
Xsed
Xsort
Xtouch
Xtr
Xuniq
X"
Xtrylist="
XMcc
Xar
Xcpp
Xdate
Xln
Xmore
Xnroff
Xtest
Xuname
X"
Xpth=`echo $PATH | sed -e "s/$p_/ /g"`
Xpth="$pth /lib /usr/lib"
Xfor file in $loclist; do
X	eval xxx=\$$file
X	case "$xxx" in
X	/*|?:[\\/]*)
X		if test -f "$xxx"; then
X			: ok
X		else
X			echo "WARNING: no $xxx -- ignoring your setting for $file." >&4
X			xxx=`./loc $file $file $pth`
X		fi
X		;;
X	'') xxx=`./loc $file $file $pth`;;
X	*) xxx=`./loc $xxx $xxx $pth`;;
X	esac
X	eval $file=$xxx
X	eval _$file=$xxx
X	case "$xxx" in
X	/*)
X		echo $file is in $xxx.
X		;;
X	?:[\\/]*)
X		echo $file is in $xxx.
X		;;
X	*)
X		echo "I don't know where '$file' is, and my life depends on it." >&4
X		echo "Go find a public domain implementation or fix your PATH setting!" >&4
X		exit 1
X		;;
X	esac
Xdone
Xecho " "
Xecho "Don't worry if any of the following aren't found..."
Xsay=offhand
Xfor file in $trylist; do
X	eval xxx=\$$file
X	case "$xxx" in
X	/*|?:[\\/]*)
X		if test -f "$xxx"; then
X			: ok
X		else
X			echo "WARNING: no $xxx -- ignoring your setting for $file." >&4
X			xxx=`./loc $file $file $pth`
X		fi
X		;;
X	'') xxx=`./loc $file $file $pth`;;
X	*) xxx=`./loc $xxx $xxx $pth`;;
X	esac
X	eval $file=$xxx
X	eval _$file=$xxx
X	case "$xxx" in
X	/*)
X		echo $file is in $xxx.
X		;;
X	?:[\\/]*)
X		echo $file is in $xxx.
X		;;
X	*)
X		echo "I don't see $file out there, $say."
X		say=either
X		;;
X	esac
Xdone
Xcase "$egrep" in
Xegrep)
X	echo "Substituting grep for egrep."
X	egrep=$grep
X	;;
Xesac
Xcase "$ln" in
Xln)
X	echo "Substituting cp for ln."
X	ln=$cp
X	;;
Xesac
Xcase "$test" in
Xtest)
X	echo "Hopefully test is built into your sh."
X	;;
X*)
X	if `sh -c "PATH= test true" >/dev/null 2>&1`; then
X		echo "Using the test built into your sh."
X		test=test
X		_test=test
X	fi
X	;;
Xesac
Xcase "$echo" in
Xecho)
X	echo "Hopefully echo is built into your sh."
X	;;
X'') ;;
X*)
X	echo " "
Xecho "Checking compatibility between $echo and builtin echo (if any)..." >&4
X	$echo $n "hi there$c" >foo1
X	echo $n "hi there$c" >foo2
X	if cmp foo1 foo2 >/dev/null 2>&1; then
X		echo "They are compatible.  In fact, they may be identical."
X	else
X		case "$n" in
X		'-n') n='' c='\c';;
X		*) n='-n' c='';;
X		esac
X		cat <<FOO
XThey are not compatible!  You are probably running ksh on a non-USG system.
XI'll have to use $echo instead of the builtin, since Bourne shell doesn't
Xhave echo built in and we may have to run some Bourne shell scripts.  That
Xmeans I'll have to use '$n$c' to suppress newlines now.  Life is ridiculous.
X
XFOO
X		$echo $n "The star should be here-->$c"
X		$echo "*"
X	fi
X	$rm -f foo1 foo2
X	;;
Xesac
X
X: make some quick guesses about what we are up against
Xecho " "
X$echo $n "Hmm...  $c"
Xecho exit 1 >bsd
Xecho exit 1 >usg
Xecho exit 1 >v7
Xecho exit 1 >osf1
Xecho exit 1 >eunice
Xecho exit 1 >xenix
Xecho exit 1 >venix
Xecho exit 1 >os2
Xd_bsd="$undef"
X$cat /usr/include/signal.h /usr/include/sys/signal.h >foo 2>/dev/null
Xif test -f /osf_boot || $contains 'OSF/1' /usr/include/ctype.h >/dev/null 2>&1
Xthen
X	echo "Looks kind of like an OSF/1 system, but we'll see..."
X	echo exit 0 >osf1
Xelif test `echo abc | tr a-z A-Z` = Abc ; then
X	xxx=`./loc addbib blurfl $pth`
X	if $test -f $xxx; then
X	echo "Looks kind of like a USG system with BSD features, but we'll see..."
X		echo exit 0 >bsd
X		echo exit 0 >usg
X	else
X		if $contains SIGTSTP foo >/dev/null 2>&1 ; then
X			echo "Looks kind of like an extended USG system, but we'll see..."
X		else
X			echo "Looks kind of like a USG system, but we'll see..."
X		fi
X		echo exit 0 >usg
X	fi
Xelif $contains SIGTSTP foo >/dev/null 2>&1 ; then
X	echo "Looks kind of like a BSD system, but we'll see..."
X	d_bsd="$define"
X	echo exit 0 >bsd
Xelse
X	echo "Looks kind of like a Version 7 system, but we'll see..."
X	echo exit 0 >v7
Xfi
Xcase "$eunicefix" in
X*unixtovms*)
X	$cat <<'EOI'
XThere is, however, a strange, musty smell in the air that reminds me of
Xsomething...hmm...yes...I've got it...there's a VMS nearby, or I'm a Blit.
XEOI
X	echo exit 0 >eunice
X	d_eunice="$define"
X: it so happens the Eunice I know will not run shell scripts in Unix format
X	;;
X*)
X	echo " "
X	echo "Congratulations.  You aren't running Eunice."
X	d_eunice="$undef"
X	;;
Xesac
Xcase "$p_" in
X:) ;;
X*)
X	$cat <<'EOI'
XI have the feeling something is not exactly right, however...don't tell me...
Xlemme think...does HAL ring a bell?...no, of course, you're only running OS/2!
XEOI
X	echo exit 0 >os2
X	;;
Xesac
Xif test -f /xenix; then
X	echo "Actually, this looks more like a XENIX system..."
X	echo exit 0 >xenix
X	d_xenix="$define"
Xelse
X	echo " "
X	echo "It's not Xenix..."
X	d_xenix="$undef"
Xfi
Xchmod +x xenix
X$eunicefix xenix
Xif test -f /venix; then
X	echo "Actually, this looks more like a VENIX system..."
X	echo exit 0 >venix
Xelse
X	echo " "
X	if ./xenix; then
X		: null
X	else
X		echo "Nor is it Venix..."
X	fi
Xfi
Xchmod +x bsd usg v7 osf1 eunice xenix venix os2
X$eunicefix bsd usg v7 osf1 eunice xenix venix os2
X$rm -f foo
X
X: determine whether symbolic links are supported
Xecho " "
X$touch blurfl
Xif $ln -s blurfl sym > /dev/null 2>&1 ; then
X	echo "Symbolic links are supported." >&4
X	lns="$ln -s"
Xelse
X	echo "Symbolic links are NOT supported." >&4
X	lns="$ln"
Xfi
X$rm -f blurfl sym
X
X: see whether [:lower:] and [:upper:] are supported character classes
Xecho " "
Xtrup='[A-Z]'
Xtrdown='[a-z]'
Xcase "`echo AbyZ | $tr '[:lower:]' '[:upper:]' 2>/dev/null`" in
XABYZ)
X	echo "Good, your tr supports [:lower:] and [:upper:] to convert case." >&4
X	trup='[:upper:]'
X	trdown='[:lower:]'
X	;;
X*)
X	echo "Your tr only supports [a-z] and [A-Z] to convert case." >&4
X	;;
Xesac
X: set up the translation script tr, must be called with ./tr of course
Xcat >tr <<EOSC
X$startsh
Xcase "\$1\$2" in
X'[A-Z][a-z]') exec $tr '$trup' '$trdown';;
X'[a-z][A-Z]') exec $tr '$trdown' '$trup';;
Xesac
Xexec $tr "\$@"
XEOSC
Xchmod +x tr
X$eunicefix tr
X
X: Find the path to the source tree
Xcase "$src" in
X'') src=`echo $0 | sed -e 's%/[^/][^/]*$%%'`;;
Xesac
Xcase "$src" in
X'')
X	src=.
X	rsrc=..
X	;;
X/*) rsrc="$src/..";;
X*) rsrc="../$src";;
Xesac
Xif test -f $rsrc/Configure && \
X	$contains "^package=$package" $rsrc/Configure >/dev/null 2>&1
Xthen
X   : found it, so we are ok.
Xelse
X	rsrc=''
X	for src in . .. ../.. ../../.. ../../../..; do
X		if test -f ../$src/Configure && \
X			$contains "^package=$package" ../$src/Configure >/dev/null 2>&1
X		then
X			rsrc=../$src
X			break
X		fi
X	done
Xfi
Xcase "$rsrc" in
X'')
X	echo " "
X	dflt=
X	rp="Directory where sources for $package are located?"
X	. ./myread
X	src="$ans"
X	rsrc="$src"
X	if test -f $rsrc/Configure && \
X		$contains "^package=$package" $rsrc/Configure >/dev/null 2>&1
X	then
X		echo "Ok, I've found them under $src"
X	else
X		echo "Sorry, I can't seem to be able to locate $package sources." >&4
X		exit 1
X	fi
X	;;
X../.) ;;
X*)
X	echo " "
X	echo "Sources for $package found in $src" >&4
X	;;
Xesac
X
X: Try to determine whether config.sh was made on this system
Xcase "$config_sh" in
X'')
Xmyuname=`( ($uname -a) 2>/dev/null || hostname) 2>&1`
Xmyuname=`echo $myuname | $sed -e 's/^[^=]*=//' -e 's/\///g' | \
X	./tr '[A-Z]' '[a-z]' | tr '\012' ' '`
Xnewmyuname="$myuname"
Xdflt=n
Xcase "$knowitall" in
X'')
X	if test -f ../config.sh; then
X		if $contains myuname= ../config.sh >/dev/null 2>&1; then
X			eval "`grep myuname= ../config.sh`"
X		fi
X		if test "X$myuname" = "X$newmyuname"; then
X			dflt=y
X		fi
X	fi
X	;;
X*) dflt=y;;
Xesac
X
X: Get old answers from old config file if Configure was run on the
X: same system, otherwise use the hints.
Xhint=default
Xcd ..
Xif test -f config.sh; then
X	echo " "
X	rp="I see a config.sh file.  Shall I use it to set the defaults?"
X	. UU/myread
X	case "$ans" in
X	n*|N*) echo "OK, I'll ignore it."; mv config.sh config.sh.old;;
X	*)  echo "Fetching default answers from your old config.sh file..." >&4
X		tmp_n="$n"
X		tmp_c="$c"
X		tmp_sh="$sh"
X		. ./config.sh
X		cp config.sh UU
X		n="$tmp_n"
X		c="$tmp_c"
X		: Older versions did not always set $sh.  Catch re-use of such
X		: an old config.sh.
X		case "$sh" in
X		'') sh="$tmp_sh" ;;
X		esac
X		hint=previous
X		;;
X	esac
Xfi
Xif test ! -f config.sh; then
X	$cat <<EOM
X
XFirst time through, eh?  I have some defaults handy for the following systems:
X
XEOM
X	(cd $src/hints; ls -C *.sh) | $sed 's/\.sh/   /g' >&4
X	dflt=''
X	: Half the following guesses are probably wrong... If you have better
X	: tests or hints, please send them to npasswd-bugs@lists.cc.utexas.edu
X	: The metaconfig authors would also appreciate a copy...
X	$test -f /irix && osname=irix
X	$test -f /xenix && osname=sco_xenix
X	$test -f /dynix && osname=dynix
X	$test -f /dnix && osname=dnix
X	$test -f /lynx.os && osname=lynxos
X	$test -f /unicos && osname=unicos && osvers=`$uname -r`
X	$test -f /unicosmk.ar && osname=unicosmk && osvers=`$uname -r`
X	$test -f /bin/mips && /bin/mips && osname=mips
X	$test -d /NextApps && set X `hostinfo | grep 'NeXT Mach.*:' | \
X		$sed -e 's/://' -e 's/\./_/'` && osname=next && osvers=$4
X	$test -d /usr/apollo/bin && osname=apollo
X	$test -f /etc/saf/_sactab && osname=svr4
X	$test -d /usr/include/minix && osname=minix
X	if $test -d /MachTen; then
X		osname=machten
X		if $test -x /sbin/version; then
X			osvers=`/sbin/version | $awk '{print $2}' |
X			$sed -e 's/[A-Za-z]$//'`
X		elif $test -x /usr/etc/version; then
X			osvers=`/usr/etc/version | $awk '{print $2}' |
X			$sed -e 's/[A-Za-z]$//'`
X		else
X			osvers="$2.$3"
X		fi
X	fi
X	if $test -f $uname; then
X		set X $myuname
X		shift
X
X		case "$5" in
X		fps*) osname=fps ;;
X		mips*)
X			case "$4" in
X			umips) osname=umips ;;
X			*) osname=mips ;;
X			esac;;
X		[23]100) osname=mips ;;
X		next*) osname=next ;;
X		news*) osname=news ;;
X		i386*)
X			if $test -f /etc/kconfig; then
X				osname=isc
X				if test "$lns" = "ln -s"; then
X					osvers=4
X				elif $contains _SYSV3 /usr/include/stdio.h > /dev/null 2>&1 ; then
X					osvers=3
X				elif $contains _POSIX_SOURCE /usr/include/stdio.h > /dev/null 2>&1 ; then
X					osvers=2
X				fi
X			fi
X			;;
X		esac
X
X		case "$1" in
X		aix) osname=aix
X			tmp=`( (oslevel) 2>/dev/null || echo "not found") 2>&1`
X			case "$tmp" in
X			'not found') osvers="$4"."$3" ;;
X			'<3240'|'<>3240') osvers=3.2.0 ;;
X			'=3240'|'>3240'|'<3250'|'<>3250') osvers=3.2.4 ;;
X			'=3250'|'>3250') osvers=3.2.5 ;;
X			*) osvers=$tmp;;
X			esac
X			;;
X		*dc.osx) osname=dcosx
X			osvers="$3"
X			;;
X		dnix) osname=dnix
X			osvers="$3"
X			;;
X		domainos) osname=apollo
X			osvers="$3"
X			;;
X		dgux) osname=dgux 
X			osvers="$3"
X			;;
X		dynixptx*) osname=dynixptx
X			osvers="$3"
X			;;
X		freebsd) osname=freebsd 
X			osvers="$3" ;;
X		genix) osname=genix ;;
X		hp*) osname=hpux 
X			case "$3" in
X			*.08.*) osvers=9 ;;
X			*.09.*) osvers=9 ;;
X			*.10.*) osvers=10 ;;
X			*)	osvers="$3" ;;
X			esac
X			;;
X		irix*) osname=irix
X			case "$3" in
X			4*) osvers=4 ;;
X			5*) osvers=5 ;;
X			*)	osvers="$3" ;;
X			esac
X			;;
X		linux) osname=linux
X			case "$3" in
X			1*) osvers=1 ;;
X			*)	osvers="$3" ;;
X			esac
X			;;
X		netbsd*) osname=netbsd 
X			osvers="$3"
X			;;
X		bsd386) osname=bsd386
X			osvers=`$uname -r`
X			;;
X		next*) osname=next ;;
X		solaris) osname=solaris
X			case "$3" in
X			5*) osvers=`echo $3 | $sed 's/^5/2/g'` ;;
X			*)	osvers="$3" ;;
X			esac
X			;;
X		sunos) osname=sunos
X			case "$3" in
X			5*) osname=solaris
X				osvers=`echo $3 | $sed 's/^5/2/g'` ;;
X			*)	osvers="$3" ;;
X			esac
X			;;
X		titanos) osname=titanos
X			case "$3" in
X			1*) osvers=1 ;;
X			2*) osvers=2 ;;
X			3*) osvers=3 ;;
X			4*) osvers=4 ;;
X			*)	osvers="$3" ;;
X			esac
X			;;
X		ultrix) osname=ultrix
X			osvers="$3"
X			;;
X		osf1|mls+)	case "$5" in
X				alpha)
X					osname=dec_osf
X					osvers=`echo "$3" | sed 's/^[vt]//'`
X					;;
X			hp*)	osname=hp_osf1	;;
X			mips)	osname=mips_osf1 ;;
X			esac
X			;;
X		uts) osname=uts 
X			osvers="$3"
X			;;
X		qnx) osname=qnx
X			osvers="$4"
X			;;
X		$2) case "$osname" in
X			*isc*) ;;
X			*freebsd*) ;;
X			svr*)
X				: svr4.x or possibly later
X				case "svr$3" in	
X				${osname}*)
X					osname=svr$3
X					osvers=$4
X					;;
X				esac
X				case "$osname" in
X				svr4.0)
X					: Check for ESIX
X					if test -f /stand/boot ; then
X						eval `grep '^INITPROG=[a-z/0-9]*$' /stand/boot`
X						if test -n "$INITPROG" -a -f "$INITPROG"; then
X			isesix=`strings -a $INITPROG|grep 'ESIX SYSTEM V/386 Release 4.0'`
X							if test -n "$isesix"; then
X								osname=esix4
X							fi
X						fi
X					fi
X					;;
X				esac
X				;;
X			*)	if test -f /etc/systemid; then
X					osname=sco
X					set `echo $3 | $sed 's/\./ /g'` $4
X					if $test -f sco_$1_$2_$3.sh; then
X						osvers=$1.$2.$3
X					elif $test -f sco_$1_$2.sh; then
X						osvers=$1.$2
X					elif $test -f sco_$1.sh; then
X						osvers=$1
X					fi
X				else
X					case "$osname" in
X					'') : Still unknown.  Probably a generic Sys V.
X						osname="sysv"
X						osvers="$3"
X						;;
X					esac
X				fi
X				;;
X			esac
X			;;
X		*)	case "$osname" in
X			'') : Still unknown.  Probably a generic BSD.
X				osname="$1"
X				osvers="$3"
X				;;
X			esac
X			;;
X		esac
X	else
X		if test -f /vmunix -a -f $src/hints/news_os.sh; then
X			(what /vmunix | UU/tr '[A-Z]' '[a-z]') > UU/kernel.what 2>&1
X			if $contains news-os UU/kernel.what >/dev/null 2>&1; then
X				osname=news_os
X			fi
X			$rm -f UU/kernel.what
X		elif test -d c:/.; then
X			set X $myuname
X			osname=os2
X			osvers="$5"
X		fi
X	fi
X	
X	: Now look for a hint file osname_osvers, unless one has been
X	: specified already.
X	case "$hintfile" in
X	''|' ')
X		file=`echo "${osname}_${osvers}" | $sed -e 's@\.@_@g' -e 's@_$@@'`
X		: Also try without trailing minor version numbers.
X		xfile=`echo $file | $sed -e 's@_[^_]*$@@'`
X		xxfile=`echo $xfile | $sed -e 's@_[^_]*$@@'`
X		xxxfile=`echo $xxfile | $sed -e 's@_[^_]*$@@'`
X		xxxxfile=`echo $xxxfile | $sed -e 's@_[^_]*$@@'`
X		case "$file" in
X		'') dflt=none ;;
X		*)  case "$osvers" in
X			'') dflt=$file
X				;;
X			*)  if $test -f $src/hints/$file.sh ; then
X					dflt=$file
X				elif $test -f $src/hints/$xfile.sh ; then
X					dflt=$xfile
X				elif $test -f $src/hints/$xxfile.sh ; then
X					dflt=$xxfile
X				elif $test -f $src/hints/$xxxfile.sh ; then
X					dflt=$xxxfile
X				elif $test -f $src/hints/$xxxxfile.sh ; then
X					dflt=$xxxxfile
X				elif $test -f "$src/hints/${osname}.sh" ; then
X					dflt="${osname}"
X				else
X					dflt=none
X				fi
X				;;
X			esac
X			;;
X		esac
X		;;
X	*)
X		dflt=`echo $hintfile | $sed 's/\.sh$//'`
X		;;
X	esac
X
X	$cat <<EOM
X
XYou may give one or more space-separated answers, or "none" if appropriate.
XIf your OS version has no hints, DO NOT give a wrong version -- say "none".
X
XEOM
X	rp="Which of these apply, if any?"
X	. UU/myread
X	tans=$ans
X	for file in $tans; do
X		if $test -f $src/hints/$file.sh; then
X			. $src/hints/$file.sh
X			$cat $src/hints/$file.sh >> UU/config.sh
X		elif $test X$tans = X -o X$tans = Xnone ; then
X			: nothing
X		else
X			: Give one chance to correct a possible typo.
X			echo "$file.sh does not exist"
X			dflt=$file
X			rp="hint to use instead?"
X			. UU/myread
X			for file in $ans; do
X				if $test -f "$src/hints/$file.sh"; then
X					. $src/hints/$file.sh
X					$cat $src/hints/$file.sh >> UU/config.sh
X				elif $test X$ans = X -o X$ans = Xnone ; then
X					: nothing
X				else
X					echo "$file.sh does not exist -- ignored."
X				fi
X			done
X		fi
X	done
X
X	hint=recommended
X	: Remember our hint file for later.
X	if $test -f "$src/hints/$file.sh" ; then
X		hintfile="$file"
X	else
X		hintfile=''
X	fi
Xfi
Xcd UU
X;;
X*)
X	echo " "
X	echo "Fetching default answers from $config_sh..." >&4
X	tmp_n="$n"
X	tmp_c="$c"
X	cd ..
X	cp $config_sh config.sh 2>/dev/null
X	chmod +w config.sh
X	. ./config.sh
X	cd UU
X	cp ../config.sh .
X	n="$tmp_n"
X	c="$tmp_c"
X	hint=previous
X	;;
Xesac
Xtest "$override" && . ./optdef.sh
Xmyuname="$newmyuname"
X
X: Restore computed paths
Xfor file in $loclist $trylist; do
X	eval $file="\$_$file"
Xdone
X
Xcat << EOM
X
XConfigure uses the operating system name and version to set some defaults.
XThe default value is probably right if the name rings a bell. Otherwise,
Xsince spelling matters for me, either accept the default or answer "none"
Xto leave it blank.
X
XEOM
Xcase "$osname" in
X	''|' ')
X		case "$hintfile" in
X		''|' '|none) dflt=none ;;
X		*)  dflt=`echo $hintfile | $sed -e 's/\.sh$//' -e 's/_.*$//'` ;;
X		esac
X		;;
X	*) dflt="$osname" ;;
Xesac
Xrp="Operating system name?"
X. ./myread
Xcase "$ans" in
Xnone)  osname='' ;;
X*) osname=`echo "$ans" | $sed -e 's/[ 	][	]*/_/g' | ./tr '[A-Z]' '[a-z]'`;;
Xesac
Xecho " "
Xcase "$osvers" in
X	''|' ')
X		case "$hintfile" in
X		''|' '|none) dflt=none ;;
X		*)	dflt=`echo $hintfile | $sed -e 's/\.sh$//' -e 's/^[^_]*//'`
X			dflt=`echo $dflt | $sed -e 's/^_//' -e 's/_/./g'`
X			case "$dflt" in
X			''|' ') dflt=none ;;
X			esac
X			;;
X		esac
X		;;
X	*) dflt="$osvers" ;;
Xesac
Xrp="Operating system version?"
X. ./myread
Xcase "$ans" in
Xnone)  osvers='' ;;
X*) osvers="$ans" ;;
Xesac
X
Xecho " " >& 4
Xp_osName=$osname
Xp_osRev=$osvers
Xp_osMajor=`echo $p_osRev | sed 's/\..*//'`
Xp_osMinor=`echo $p_osRev | sed -e "s/^$p_osMajor\.//" -e 's/\..*//'| $tr -d '[a-z]'`
Xp_osMicro=`echo $p_osRev | sed -e "s/^$p_osMajor\.$p_osMinor\.//"  | $tr -d '[a-z]'`
Xif $test $osname = 'solaris'; then
X	t=`uname -s | ./tr '[A-Z]' '[a-z]'`
X	: The difference between Solaris 2 and SunOS 5 may matter
X	if $test "$t" -eq 'sunos'; then
X		p_osName=$t
X		if $test $p_osMajor -eq 2; then
X			p_osMajor=5
X			p_osRev=`echo $osvers | sed 's/2\./5./'`
X		fi
X	fi
Xfi
Xecho "System is $p_osName; Major version $p_osMajor; Minor version $p_osMinor" >&4
X
X: List of libraries wanted by $package
Xlibswanted='net inet nsl'
X
X
X: Add to path places where cpp may lurk
X: $test -d /usr/ccs/bin && PATH=/usr/ccs/bin:$PATH
X: $test -d /usr/ccs/lib && PATH=/usr/ccs/lib:$PATH
X
Xcase "${p_osName}_${p_osRev}" in
X	sunos_4*)	libswanted='' ;;
X	ultrix*)	libswanted="$libswanted auth" ;;
X	dec_osf*)	libswanted="$libswanted security" ;;
X	aix_4*)		libswanted="$libswanted s"
X			usenm=false ;;
X	irix_6*)	usenm=false ;;
Xesac
X
X: Defaults for other settings
Xprivlib='/usr/lib/passwd'
Xprefix='/usr'
X
X: script used to extract .SH files with variable substitutions
Xcat >extract <<'EOS'
XCONFIG=true
Xecho "Doing variable substitutions on .SH files..."
Xif test -f $src/MANIFEST; then
X	set x `awk '{print $1}' <$src/MANIFEST | grep '\.SH'`
Xelse
X	echo "(Looking for .SH files under the source directory.)"
X	set x `(cd $src; find . -name "*.SH" -print)`
Xfi
Xshift
Xcase $# in
X0) set x `(cd $src; echo *.SH)`; shift;;
Xesac
Xif test ! -f $src/$1; then
X	shift
Xfi
Xmkdir_p='
Xname=$1;
Xcreate="";
Xwhile test $name; do
X	if test ! -d "$name"; then
X		create="$name $create";
X		name=`echo $name | sed -e "s|^[^/]*$||"`;
X		name=`echo $name | sed -e "s|\(.*\)/.*|\1|"`;
X	else
X		name="";
X	fi;
Xdone;
Xfor file in $create; do
X	mkdir $file;
Xdone
X'
Xfor file in $*; do
X	case "$src" in
X	".")
X		case "$file" in
X		*/*)
X			dir=`expr X$file : 'X\(.*\)/'`
X			file=`expr X$file : 'X.*/\(.*\)'`
X			(cd $dir && . ./$file)
X			;;
X		*)
X			. ./$file
X			;;
X		esac
X		;;
X	*)
X		case "$file" in
X		*/*)
X			dir=`expr X$file : 'X\(.*\)/'`
X			file=`expr X$file : 'X.*/\(.*\)'`
X			(set x $dir; shift; eval $mkdir_p)
X			sh <$src/$dir/$file
X			;;
X		*)
X			sh <$src/$file
X			;;
X		esac
X		;;
X	esac
Xdone
Xif test -f $src/config_h.SH; then
X	if test ! -f config.h; then
X	: oops, they left it out of MANIFEST, probably, so do it anyway.
X	. $src/config_h.SH
X	fi
Xfi
XEOS
X
X: extract files and exit if asked to do so
Xcase "$extractsh" in
Xtrue)
X	case "$realsilent" in
X	true) ;;
X	*) exec 1>&4;;
X	esac
X	case "$config_sh" in
X	'') config_sh='config.sh'; config="$rsrc/config.sh";;
X	/*) config="$config_sh";;
X	*) config="$rsrc/$config_sh";;
X	esac
X	echo " "
X	echo "Fetching answers from $config_sh..."
X	. $config
X	test "$override" && . ./optdef.sh
X	echo " "
X	cd ..
X	. UU/extract
X	rm -rf UU
X	echo "Done."
X	exit 0
X	;;
Xesac
X
X: Eunice requires " " instead of "", can you believe it
Xecho " "
X: Here we go...
Xecho "Beginning of configuration questions for $package."
X
Xtrap 'echo " "; test -d ../UU && rm -rf X $rmlist; exit 1' 1 2 3 15
X
X: Now test for existence of everything in MANIFEST
Xecho " "
Xif test -f $rsrc/MANIFEST; then
X	echo "First let's make sure your kit is complete.  Checking..." >&4
X	awk '$1 !~ /PACK[A-Z]+/ {print $1}' $rsrc/MANIFEST | split -50
X	rm -f missing
X	tmppwd=`pwd`
X	for filelist in x??; do
X		(cd $rsrc; ls `cat $tmppwd/$filelist` >/dev/null 2>>$tmppwd/missing)
X	done
X	if test -s missing; then
X		cat missing >&4
X		cat >&4 <<'EOM'
X
XTHIS PACKAGE SEEMS TO BE INCOMPLETE.
X
XYou have the option of continuing the configuration process, despite the
Xdistinct possibility that your kit is damaged, by typing 'y'es.  If you
Xdo, don't blame me if something goes wrong.  I advise you to type 'n'o
Xand contact the author (npasswd-bugs@lists.cc.utexas.edu).
X
XEOM
X		echo $n "Continue? [n] $c" >&4
X		read ans
X		case "$ans" in
X		y*)
X			echo "Continuing..." >&4
X			rm -f missing
X			;;
X		*)
X			echo "ABORTING..." >&4
X			kill $$
X			;;
X		esac
X	else
X		echo "Looks good..."
X	fi
Xelse
X	echo "There is no MANIFEST file.  I hope your kit is complete !"
Xfi
Xrm -f missing x??
X
X: who configured the system
Xcf_time=`$date 2>&1`
Xcf_by=`(logname) 2>/dev/null`
Xcase "$cf_by" in
X"")
X	cf_by=`(whoami) 2>/dev/null`
X	case "$cf_by" in
X	"") cf_by=unknown ;;
X	esac ;;
Xesac
X
X: determine where manual pages are on this system
Xecho " "
Xcase "$sysman" in
X'') 
X	syspath='/usr/man/man1 /usr/man/mann /usr/man/manl /usr/man/local/man1'
X	syspath="$syspath /usr/man/u_man/man1 /usr/share/man/man1"
X	syspath="$syspath /usr/catman/u_man/man1 /usr/man/l_man/man1"
X	syspath="$syspath /usr/local/man/u_man/man1 /usr/local/man/l_man/man1"
X	syspath="$syspath /usr/man/man.L /local/man/man1 /usr/local/man/man1"
X	sysman=`./loc . /usr/man/man1 $syspath`
X	;;
Xesac
Xif $test -d "$sysman"; then
X	echo "System manual is in $sysman." >&4
Xelse
X	echo "Could not find manual pages in source form." >&4
Xfi
X
X: see what memory models we can support
Xcase "$models" in
X'')
X	$cat >pdp11.c <<'EOP'
Xmain() {
X#ifdef pdp11
X	exit(0);
X#else
X	exit(1);
X#endif
X}
XEOP
X	cc -o pdp11 pdp11.c >/dev/null 2>&1
X	if ./pdp11 2>/dev/null; then
X		dflt='unsplit split'
X	else
X		tans=`./loc . X /lib/small /lib/large /usr/lib/small /usr/lib/large /lib/medium /usr/lib/medium /lib/huge`
X		case "$tans" in
X		X) dflt='none';;
X		*) if $test -d /lib/small || $test -d /usr/lib/small; then
X				dflt='small'
X			else
X				dflt=''
X			fi
X			if $test -d /lib/medium || $test -d /usr/lib/medium; then
X				dflt="$dflt medium"
X			fi
X			if $test -d /lib/large || $test -d /usr/lib/large; then
X				dflt="$dflt large"
X			fi
X			if $test -d /lib/huge || $test -d /usr/lib/huge; then
X				dflt="$dflt huge"
X			fi
X		esac
X	fi;;
X*) dflt="$models";;
Xesac
X$cat <<EOM
X 
XSome systems have different model sizes.  On most systems they are called
Xsmall, medium, large, and huge.  On the PDP11 they are called unsplit and
Xsplit.  If your system doesn't support different memory models, say "none".
XIf you wish to force everything to one memory model, say "none" here and
Xput the appropriate flags later when it asks you for other cc and ld flags.
XVenix systems may wish to put "none" and let the compiler figure things out.
X(In the following question multiple model names should be space separated.)
X
XEOM
Xrp="Which memory models are supported?"
X. ./myread
Xmodels="$ans"
X
Xcase "$models" in
Xnone)
X	small=''
X	medium=''
X	large=''
X	huge=''
X	unsplit=''
X	split=''
X	;;
X*split)
X	case "$split" in
X	'') if $contains '\-i' $sysman/ld.1 >/dev/null 2>&1 || \
X			 $contains '\-i' $sysman/cc.1 >/dev/null 2>&1; then
X			dflt='-i'
X		else
X			dflt='none'
X		fi;;
X	*) dflt="$split";;
X	esac
X	rp="What flag indicates separate I and D space?"
X	. ./myread
X	tans="$ans"
X	case "$tans" in
X	none) tans='';;
X	esac
X	split="$tans"
X	unsplit='';;
X*large*|*small*|*medium*|*huge*)
X	case "$models" in
X	*large*)
X		case "$large" in
X		'') dflt='-Ml';;
X		*) dflt="$large";;
X		esac
X	rp="What flag indicates large model?"
X	. ./myread
X	tans="$ans"
X	case "$tans" in
X	none) tans='';
X	esac
X	large="$tans";;
X	*) large='';;
X	esac
X	case "$models" in
X	*huge*) case "$huge" in
X		'') dflt='-Mh';;
X		*) dflt="$huge";;
X		esac
X		rp="What flag indicates huge model?"
X		. ./myread
X		tans="$ans"
X		case "$tans" in
X		none) tans='';
X		esac
X		huge="$tans";;
X	*) huge="$large";;
X	esac
X	case "$models" in
X	*medium*) case "$medium" in
X		'') dflt='-Mm';;
X		*) dflt="$medium";;
X		esac
X		rp="What flag indicates medium model?"
X		. ./myread
X		tans="$ans"
X		case "$tans" in
X		none) tans='';
X		esac
X		medium="$tans";;
X	*) medium="$large";;
X	esac
X	case "$models" in
X	*small*) case "$small" in
X		'') dflt='none';;
X		*) dflt="$small";;
X		esac
X		rp="What flag indicates small model?"
X		. ./myread
X		tans="$ans"
X		case "$tans" in
X		none) tans='';
X		esac
X		small="$tans";;
X	*) small='';;
X	esac
X	;;
X*)
X	echo "Unrecognized memory models--you may have to edit Makefile.SH" >&4
X	;;
Xesac
X
X: see if we need a special compiler
Xecho " "
Xif ./usg; then
X	case "$cc" in
X	'') case "$Mcc" in
X		/*) dflt='Mcc';;
X		*) case "$large" in
X			-M*) dflt='cc';;
X			*)	if $contains '\-M' $sysman/cc.1 >/dev/null 2>&1 ; then
X					if $contains '\-M' $sysman/cpp.1 >/dev/null 2>&1; then
X						dflt='cc'
X					else
X						dflt='cc -M'
X					fi
X				else
X					dflt='cc'
X				fi;;
X			esac;;
X		esac;;
X	*)  dflt="$cc";;
X	esac
X	$cat <<'EOM'
XOn some systems the default C compiler will not resolve multiple global
Xreferences that happen to have the same name.  On some such systems the "Mcc"
Xcommand may be used to force these to be resolved.  On other systems a "cc -M"
Xcommand is required.  (Note that the -M flag on other systems indicates a
Xmemory model to use!) If you have the Gnu C compiler, you might wish to use
Xthat instead.
X
XEOM
X	rp="What command will force resolution on this system?"
X	. ./myread
X	cc="$ans"
Xelse
X	case "$cc" in
X	'') dflt=cc;;
X	*) dflt="$cc";;
X	esac
X	rp="Use which C compiler?"
X	. ./myread
X	cc="$ans"
Xfi
Xecho " "
Xecho "Checking for GNU cc in disguise and/or its version number..." >&4
X$cat >gccvers.c <<EOM
X#include <stdio.h>
Xint main() {
X#ifdef __GNUC__
X#ifdef __VERSION__
X	printf("%s\n", __VERSION__);
X#else
X	printf("%s\n", "1");
X#endif
X#endif
X	exit(0);
X}
XEOM
Xif $cc -o gccvers gccvers.c >/dev/null 2>&1; then
X	gccversion=`./gccvers`
X	case "$gccversion" in
X	'') echo "You are not using GNU cc." ;;
X	*)  echo "You are using GNU cc $gccversion." ;;
X	esac
Xelse
X	echo " "
X	echo "*** WHOA THERE!!! ***" >&4
X	echo "    Your C compiler \"$cc\" doesn't seem to be working!" >&4
X	case "$knowitall" in
X	'')
X	echo "    You'd better start hunting for one and let me know about it." >&4
X		exit 1
X		;;
X	esac
Xfi
X$rm -f gccvers*
Xcase "$gccversion" in
X1*) cpp=`./loc gcc-cpp $cpp $pth` ;;
Xesac
X
X: decide how portable to be
Xcase "$d_portable" in
X"$define") dflt=y;;
X*)	dflt=n;;
Xesac
X$cat <<'EOH'
X 
XI can set things up so that your shell scripts and binaries are more portable,
Xat what may be a noticable cost in performance.  In particular, if you
Xask to be portable, the following happens:
X
X     1) Shell scripts will rely on the PATH variable rather than using
X	the paths derived above.
X     2) ~username interpretations will be done at run time rather than
X	by Configure.
X
XEOH
Xrp="Do you expect to run these scripts and binaries on multiple machines?"
X. ./myread
Xcase "$ans" in
X	y*) d_portable="$define"
X	;;
X	*)  d_portable="$undef" ;;
Xesac
X
X: set up shell script to do ~ expansion
Xcat >filexp <<EOSS
X$startsh
X: expand filename
Xcase "\$1" in
X ~/*|~)
X	echo \$1 | $sed "s|~|\${HOME-\$LOGDIR}|"
X	;;
X ~*)
X	if $test -f /bin/csh; then
X		/bin/csh -f -c "glob \$1"
X		failed=\$?
X		echo ""
X		exit \$failed
X	else
X		name=\`$expr x\$1 : '..\([^/]*\)'\`
X		dir=\`$sed -n -e "/^\${name}:/{s/^[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:\([^:]*\).*"'\$'"/\1/" -e p -e q -e '}' </etc/passwd\`
X		if $test ! -d "\$dir"; then
X			me=\`basename \$0\`
X			echo "\$me: can't locate home directory for: \$name" >&2
X			exit 1
X		fi
X		case "\$1" in
X		*/*)
X			echo \$dir/\`$expr x\$1 : '..[^/]*/\(.*\)'\`
X			;;
X		*)
X			echo \$dir
X			;;
X		esac
X	fi
X	;;
X*)
X	echo \$1
X	;;
Xesac
XEOSS
Xchmod +x filexp
X$eunicefix filexp
X
X: now set up to get a file name
Xcat <<EOS >getfile
X$startsh
XEOS
Xcat <<'EOSC' >>getfile
Xtilde=''
Xfullpath=''
Xalready=''
Xskip=''
Xnone_ok=''
Xexp_file=''
Xnopath_ok=''
Xorig_rp="$rp"
Xorig_dflt="$dflt"
X
Xcase "$fn" in
X*\(*)
X	expr $fn : '.*(\(.*\)).*' | tr ',' '\012' >getfile.ok
X	fn=`echo $fn | sed 's/(.*)//'`
X	;;
Xesac
X
Xcase "$fn" in
X*:*)
X	loc_file=`expr $fn : '.*:\(.*\)'`
X	fn=`expr $fn : '\(.*\):.*'`
X	;;
Xesac
X
Xcase "$fn" in
X*~*) tilde=true;;
Xesac
Xcase "$fn" in
X*/*) fullpath=true;;
Xesac
Xcase "$fn" in
X*+*) skip=true;;
Xesac
Xcase "$fn" in
X*n*) none_ok=true;;
Xesac
Xcase "$fn" in
X*e*) exp_file=true;;
Xesac
Xcase "$fn" in
X*p*) nopath_ok=true;;
Xesac
X
Xcase "$fn" in
X*f*) type='File';;
X*d*) type='Directory';;
X*l*) type='Locate';;
Xesac
X
Xwhat="$type"
Xcase "$what" in
XLocate) what='File';;
Xesac
X
Xcase "$exp_file" in
X'')
X	case "$d_portable" in
X	"$define") ;;
X	*) exp_file=true;;
X	esac
X	;;
Xesac
X
Xcd ..
Xwhile test "$type"; do
X	redo=''
X	rp="$orig_rp"
X	dflt="$orig_dflt"
X	case "$tilde" in
X	true) rp="$rp (~name ok)";;
X	esac
X	. UU/myread
X	if test -f UU/getfile.ok && \
X		$contains "^$ans\$" UU/getfile.ok >/dev/null 2>&1
X	then
X		value="$ans"
X		ansexp="$ans"
X		break
X	fi
X	case "$ans" in
X	none)
X		value=''
X		ansexp=''
X		case "$none_ok" in
X		true) type='';;
X		esac
X		;;
X	*)
X		case "$tilde" in
X		'') value="$ans"
X			ansexp="$ans";;
X		*)
X			value=`UU/filexp $ans`
X			case $? in
X			0)
X				if test "$ans" != "$value"; then
X					echo "(That expands to $value on this system.)"
X				fi
X				;;
X			*) value="$ans";;
X			esac
X			ansexp="$value"
X			case "$exp_file" in
X			'') value="$ans";;
X			esac
X			;;
X		esac
X		case "$fullpath" in
X		true)
X			case "$ansexp" in
X			/*) value="$ansexp" ;;
X			*)
X				redo=true
X				case "$already" in
X				true)
X				echo "I shall only accept a full path name, as in /bin/ls." >&4
X				echo "Use a ! shell escape if you wish to check pathnames." >&4
X					;;
X				*)
X				echo "Please give a full path name, starting with slash." >&4
X					case "$tilde" in
X					true)
X				echo "Note that using ~name is ok provided it expands well." >&4
X						already=true
X						;;
X					esac
X				esac
X				;;
X			esac
X			;;
X		esac
X		case "$redo" in
X		'')
X			case "$type" in
X			File)
X				if test -f "$ansexp"; then
X					type=''
X				elif test -r "$ansexp" || (test -h "$ansexp") >/dev/null 2>&1
X				then
X					echo "($value is not a plain file, but that's ok.)"
X					type=''
X				fi
X				;;
X			Directory)
X				if test -d "$ansexp"; then
X					type=''
X				fi
X				;;
X			Locate)
X				if test -d "$ansexp"; then
X					echo "(Looking for $loc_file in directory $value.)"
X					value="$value/$loc_file"
X					ansexp="$ansexp/$loc_file"
X				fi
X				if test -f "$ansexp"; then
X					type=''
X				fi
X				case "$nopath_ok" in
X				true)	case "$value" in
X					*/*) ;;
X					*)	echo "Assuming $value will be in people's path."
X						type=''
X						;;
X					esac
X					;;
X				esac
X				;;
X			esac
X
X			case "$skip" in
X			true) type='';
X			esac
X
X			case "$type" in
X			'') ;;
X			*)
X				if test "$fastread" = yes; then
X					dflt=y
X				else
X					dflt=n
X				fi
X				rp="$what $value doesn't exist.  Use that name anyway?"
X				. UU/myread
X				dflt=''
X				case "$ans" in
X				y*) type='';;
X				*) echo " ";;
X				esac
X				;;
X			esac
X			;;
X		esac
X		;;
X	esac
Xdone
Xcd UU
Xans="$value"
Xrp="$orig_rp"
Xdflt="$orig_dflt"
Xrm -f getfile.ok
XEOSC
X
X: What should the include directory be ?
Xecho " "
X$echo $n "Hmm...  $c"
Xdflt='/usr/include'
Xincpath=''
Xmips_type=''
Xif $test -f /bin/mips && /bin/mips; then
X	echo "Looks like a MIPS system..."
X	$cat >usr.c <<'EOCP'
X#ifdef SYSTYPE_BSD43
X/bsd43
X#endif
XEOCP
X	if $cc -E usr.c > usr.out && $contains / usr.out >/dev/null 2>&1; then
X		dflt='/bsd43/usr/include'
X		incpath='/bsd43'
X		mips_type='BSD 4.3'
X	else
X		mips_type='System V'
X	fi
X	$rm -f usr.c usr.out
X	echo "and you're compiling with the $mips_type compiler and libraries."
X	xxx_prompt=y
X	echo "exit 0" >mips
Xelse
X	echo "Doesn't look like a MIPS system."
X	xxx_prompt=n
X	echo "exit 1" >mips
Xfi
Xchmod +x mips
X$eunicefix mips
Xcase "$usrinc" in
X'') ;;
X*) dflt="$usrinc";;
Xesac
Xcase "$xxx_prompt" in
Xy)	fn=d/
X	echo " "
X	rp='Where are the include files you want to use?'
X	. ./getfile
X	usrinc="$ans"
X	;;
X*)	usrinc="$dflt"
X	;;
Xesac
X
X: see how we invoke the C preprocessor
Xecho " "
Xecho "Now, how can we feed standard input to your C preprocessor..." >&4
Xcat <<'EOT' >testcpp.c
X#define ABC abc
X#define XYZ xyz
XABC.XYZ
XEOT
Xcd ..
Xecho 'cat >.$$.c; '"$cc"' -E ${1+"$@"} .$$.c; rm .$$.c' >cppstdin
Xchmod 755 cppstdin
Xwrapper=`pwd`/cppstdin
Xok='false'
Xcd UU
X
Xif $test "X$cppstdin" != "X" && \
X	$cppstdin $cppminus <testcpp.c >testcpp.out 2>&1 && \
X	$contains 'abc.*xyz' testcpp.out >/dev/null 2>&1
Xthen
X	echo "You used to use $cppstdin $cppminus so we'll use that again."
X	case "$cpprun" in
X	'') echo "But let's see if we can live without a wrapper..." ;;
X	*)
X		if $cpprun $cpplast <testcpp.c >testcpp.out 2>&1 && \
X			$contains 'abc.*xyz' testcpp.out >/dev/null 2>&1
X		then
X			echo "(And we'll use $cpprun $cpplast to preprocess directly.)"
X			ok='true'
X		else
X			echo "(However, $cpprun $cpplast does not work, let's see...)"
X		fi
X		;;
X	esac
Xelse
X	case "$cppstdin" in
X	'') ;;
X	*)
X		echo "Good old $cppstdin $cppminus does not seem to be of any help..."
X		;;
X	esac
Xfi
X
Xif $ok; then
X	: nothing
Xelif echo 'Maybe "'"$cc"' -E" will work...'; \
X	$cc -E <testcpp.c >testcpp.out 2>&1; \
X	$contains 'abc.*xyz' testcpp.out >/dev/null 2>&1 ; then
X	echo "Yup, it does."
X	x_cpp="$cc -E"
X	x_minus='';
Xelif echo 'Nope...maybe "'"$cc"' -E -" will work...'; \
X	$cc -E - <testcpp.c >testcpp.out 2>&1; \
X	$contains 'abc.*xyz' testcpp.out >/dev/null 2>&1 ; then
X	echo "Yup, it does."
X	x_cpp="$cc -E"
X	x_minus='-';
Xelif echo 'Nope...maybe "'"$cc"' -P" will work...'; \
X	$cc -P <testcpp.c >testcpp.out 2>&1; \
X	$contains 'abc.*xyz' testcpp.out >/dev/null 2>&1 ; then
X	echo "Yipee, that works!"
X	x_cpp="$cc -P"
X	x_minus='';
Xelif echo 'Nope...maybe "'"$cc"' -P -" will work...'; \
X	$cc -P - <testcpp.c >testcpp.out 2>&1; \
X	$contains 'abc.*xyz' testcpp.out >/dev/null 2>&1 ; then
X	echo "At long last!"
X	x_cpp="$cc -P"
X	x_minus='-';
Xelif echo 'No such luck, maybe "'$cpp'" will work...'; \
X	$cpp <testcpp.c >testcpp.out 2>&1; \
X	$contains 'abc.*xyz' testcpp.out >/dev/null 2>&1 ; then
X	echo "It works!"
X	x_cpp="$cpp"
X	x_minus='';
Xelif echo 'Nixed again...maybe "'$cpp' -" will work...'; \
X	$cpp - <testcpp.c >testcpp.out 2>&1; \
X	$contains 'abc.*xyz' testcpp.out >/dev/null 2>&1 ; then
X	echo "Hooray, it works!  I was beginning to wonder."
X	x_cpp="$cpp"
X	x_minus='-';
Xelif echo 'Uh-uh.  Time to get fancy.  Trying a wrapper...'; \
X	$wrapper <testcpp.c >testcpp.out 2>&1; \
X	$contains 'abc.*xyz' testcpp.out >/dev/null 2>&1 ; then
X	x_cpp="$wrapper"
X	x_minus=''
X	echo "Eureka!"
Xelse
X	dflt=''
X	rp="No dice.  I can't find a C preprocessor.  Name one:"
X	. ./myread
X	x_cpp="$ans"
X	x_minus=''
X	$x_cpp <testcpp.c >testcpp.out 2>&1
X	if $contains 'abc.*xyz' testcpp.out >/dev/null 2>&1 ; then
X		echo "OK, that will do." >&4
X	else
Xecho "Sorry, I can't get that to work.  Go find one and rerun Configure." >&4
X		exit 1
X	fi
Xfi
X
Xcase "$ok" in
Xfalse)
X	cppstdin="$x_cpp"
X	cppminus="$x_minus"
X	cpprun="$x_cpp"
X	cpplast="$x_minus"
X	set X $x_cpp
X	shift
X	case "$1" in
X	"$cpp")
X		echo "Perhaps can we force $cc -E using a wrapper..."
X		if $wrapper <testcpp.c >testcpp.out 2>&1; \
X			$contains 'abc.*xyz' testcpp.out >/dev/null 2>&1
X		then
X			echo "Yup, we can."
X			cppstdin="$wrapper"
X			cppminus='';
X		else
X			echo "Nope, we'll have to live without it..."
X		fi
X		;;
X	esac
X	case "$cpprun" in
X	"$wrapper")
X		cpprun=''
X		cpplast=''
X		;;
X	esac
X	;;
Xesac
X
Xcase "$cppstdin" in
X"$wrapper") ;;
X*) $rm -f $wrapper;;
Xesac
X$rm -f testcpp.c testcpp.out
X
Xcc_osflags="-DOS_NAME=$p_osName -DOS_MAJOR_VERSION=$p_osMajor -DOS_MINOR_VERSION=$p_osMinor"
X
Xcc_dbflags='-g'
Xxcc=`expr //$cc : '.*/\(.*\)'`
Xif test -n "$gccversion"; then
X	# Options for gcc are the same on all systems - I like that :)
X	ccflags=''
X	optimize='-O2'
X	cc_dbflags='-g3'
Xfi
Xcase "${p_osName}_${p_osRev}" in
X	ultrix_4*)	cc_osflags="-DOS_ULTRIX_4 $cc_osflags"
X			case "$xcc" in
X				cc*)	cc_dbflags="-g2" ;;
X			esac
X			;;
X	dec_osf*)	cc_osflags="-DOS_DEC_OSF1 $cc_osflags"
X			case "$xcc" in
X			cc*)	cc_osflags="$cc_osflags -std"
X				cc_dbflags="-g2"
X				;;
X			esac
X			;;
X	sunos_4*)	cc_osflags="-DOS_SUNOS_4 $cc_osflags"
X			case "$xcc" in
X			acc*)	cc_osflags="$cc_osflags -Xa"
X				cc_dbflags="-g -sb"
X			esac
X			;;
X	solaris* | sunos_5*)
X			no=false
X			echo 'main(){printf("f");exit(0);}' > cctest.c
X			$cc cctest.c -o cctest >/dev/null 2>&1
X			$test -n "`(ldd cctest | grep ucblib) 2>/dev/null`" && no=true
X			$rm -f cctest.c cctest
X			if $no; then
X				cat <<EOF >&4
X
XUh, oh... It looks like you are using the UCB compatiblity compiler for SunOS 5.
X$package must be built in the native Solaris 2 environment.
XRestart this configuration and choose either the SunSoft C compiler or gcc.
X
XEOF
X				exit 1
X			fi
X			cc_osflags="-DOS_SUNOS_5 $cc_osflags"
X			if $test $xcc = 'cc'; then
X				cc_osflags="-Xa $cc_osflags"
X				case "`cc -V 2>&1`" in
X				*SC[12].*)	cc_dbflags="-g -sb" ;;
X				*)		cc_dbflags="-g -xsb" ;;
X				esac
X			fi
X			;;
X	irix*)		cc_osflags="-DOS_IRIX -Wl,-w $cc_osflags"
X			ldflags="-Wl,-w $ldflags"
X			;;
X	aix*)		cc_osflags="-DOS_AIX $cc_osflags"
X			;;
X	hp*ux*)		cc_osflags="-DOS_HPUX -D_HPUX_SOURCE $cc_osflags"
X			;;
Xesac
X
X: determine optimize, if desired, or use for debug flag also
Xcase "$optimize" in
X' ') dflt='none';;
X'') dflt='-O';;
X*) dflt="$optimize";;
Xesac
X$cat <<EOH
X
XSome C compilers have problems with their optimizers, by default, $package
Xcompiles with the -O flag to use the optimizer.
X
XTo use no optimization flag, specify the word "none".
X
XEOH
X
Xrp="What optimizer flag should be used?"
X. ./myread
Xoptimize="$ans"
Xcase "$optimize" in
X'none') optimize=" ";;
Xesac
X
X$cat <<EOH
X
XIn order to build a debugging version on $package, (via "make debug")
Xyou need to provide flags to the C compiler to include support for
Xsource level debuggers.
X
XTo use no debugging, specify the word "none".
X
XEOH
X
Xdflt=$cc_dbflags
Xrp="What debugging flags should be used?"
X. ./myread
Xcase "$ans" in
X'none') cc_dbflags=" ";;
X*)	cc_dbflags="$ans"
Xesac
Xdflt=''
X:
X:
Xcase "$ccflags" in
X'')	
X	case "$gccversion" in
X	1*) dflt='-fpcc-struct-return' ;;
X	esac
X	case "$optimize" in
X	*-g*) dflt="$dflt -DDEBUGGING";;
X	esac
X	case "$gccversion" in
X	2*) if test -d /etc/conf/kconfig.d &&
X			$contains _POSIX_VERSION $usrinc/sys/unistd.h >/dev/null 2>&1
X		then
X			dflt="$dflt -posix"
X		fi
X		;;
X	esac
X	;;
Xesac
X
Xcase "$mips_type" in
X*BSD*) ;;
X'') ;;
X*) inclwanted="$inclwanted $usrinc/bsd";;
Xesac
Xfor thisincl in $inclwanted; do
X	if $test -d $thisincl; then
X		if $test x$thisincl != x$usrinc; then
X			case "$dflt" in
X			*$thisincl*);;
X			*) dflt="$dflt -I$thisincl";;
X			esac
X		fi
X	fi
Xdone
X
Xinctest='if $contains $2 $usrinc/$1 >/dev/null 2>&1; then
X	xxx=true;
Xelif $contains $2 $usrinc/sys/$1 >/dev/null 2>&1; then
X	xxx=true;
Xelse
X	xxx=false;
Xfi;
Xif $xxx; then
X	case "$dflt" in
X	*$2*);;
X	*) dflt="$dflt -D$2";;
X	esac;
Xfi'
X
Xif ./osf1; then
X	set signal.h __LANGUAGE_C__; eval "$inctest"
Xelse
X	set signal.h LANGUAGE_C; eval "$inctest"
Xfi
Xset signal.h NO_PROTOTYPE; eval "$inctest"
Xset signal.h _NO_PROTO; eval "$inctest"
X
Xcase "$dflt" in
X'') dflt=none;;
Xesac
Xcase "$ccflags" in
X'') ;;
X*) dflt="$ccflags";;
Xesac
X$cat <<EOH
X
XYour C compiler may want other flags.  For this question you should include
X-I/whatever and -DWHATEVER flags and any other flags used by the C compiler,
Xbut you should NOT include libraries or ld flags like -lwhatever.  If you
Xwant $package to honor its debug switch, you should include -DDEBUG here.
XTo use no flags, specify the word "none".
X
XEOH
Xset X $dflt
Xshift
Xdflt=${1+"$@"}
Xrp="Any additional cc flags?"
X. ./myread
Xcase "$ans" in
Xnone) ccflags='';;
X*) ccflags="$ans";;
Xesac
X
Xecho The C flags which will be used are: $ccflags $optimize $cc_osflags
X
X: the following weeds options from ccflags that are of no interest to cpp
Xcppflags="$ccflags $cc_osflags"
Xcase "$gccversion" in
X1*) cppflags="$cppflags -D__GNUC__"
Xesac
Xcase "$mips_type" in
X'');;
X*BSD*) cppflags="$cppflags -DSYSTYPE_BSD43";;
Xesac
Xcase "$cppflags" in
X'');;
X*)
X	echo " "
X	echo "Let me guess what the preprocessor flags are..." >&4
X	set X $cppflags
X	shift
X	cppflags=''
X	$cat >cpp.c <<'EOM'
X#define BLURFL foo
X
XBLURFL xx LFRULB
XEOM
X	previous=''
X	for flag in $*
X	do
X		case "$flag" in
X		-*) ftry="$flag";;
X		*) ftry="$previous $flag";;
X		esac
X		if $cppstdin -DLFRULB=bar $ftry $cppminus <cpp.c \
X			>cpp1.out 2>/dev/null && \
X			$cpprun -DLFRULB=bar $ftry $cpplast <cpp.c \
X			>cpp2.out 2>/dev/null && \
X			$contains 'foo.*xx.*bar' cpp1.out >/dev/null 2>&1 && \
X			$contains 'foo.*xx.*bar' cpp2.out >/dev/null 2>&1
X		then
X			cppflags="$cppflags $ftry"
X			previous=''
X		else
X			previous="$flag"
X		fi
X	done
X	set X $cppflags
X	shift
X	cppflags=${1+"$@"}
X	case "$cppflags" in
X	*-*)  echo "They appear to be: $cppflags";;
X	esac
X	$rm -f cpp.c cpp?.out
X	;;
Xesac
X
X: flags used in final linking phase
Xcase "$ldflags" in
X'') if ./venix; then
X		dflt='-i -z'
X	else
X		dflt=''
X	fi
X	case "$ccflags" in
X	*-posix*) dflt="$dflt -posix" ;;
X	esac
X	case "$dflt" in
X	'') dflt='none' ;;
X	esac
X	;;
X*) dflt="$ldflags";;
Xesac
Xecho " "
Xrp="Any additional ld flags (NOT including libraries)?"
X. ./myread
Xcase "$ans" in
Xnone) ldflags='';;
X*) ldflags="$ans";;
Xesac
Xrmlist="$rmlist pdp11"
X
X: determine root of directory hierarchy where package will be installed.
Xcase "$prefix" in
X'')
X	dflt=`./loc . /usr/local /usr/local /local /opt /usr`
X	;;
X*)
X	dflt="$prefix"
X	;;
Xesac
X$cat <<EOM
X
XBy default, $package will be installed in $dflt/bin, manual
Xpages under $dflt/man, etc..., i.e. with $dflt as prefix for
Xall installation directories. Typically set to /usr/local, but you
Xmay choose /usr if you wish to install $package among your system
Xbinaries. If you wish to have binaries under /bin but manual pages
Xunder /usr/local/man, that's ok: you will be prompted separately
Xfor each of the installation directories, the prefix being only used
Xto set the defaults.
X
XEOM
Xfn=d~
Xrp='Installation prefix to use?'
X. ./getfile
Xoldprefix=''
Xcase "$prefix" in
X'') ;;
X*)
X	case "$ans" in
X	"$prefix") ;;
X	*) oldprefix="$prefix";;
X	esac
X	;;
Xesac
Xprefix="$ans"
Xprefixexp="$ansexp"
X
X: set the prefixit variable, to compute a suitable default value
Xprefixit='case "$3" in
X""|none)
X	case "$oldprefix" in
X	"") eval "$1=\"\$$2\"";;
X	*)
X		case "$3" in
X		"") eval "$1=";;
X		none)
X			eval "tp=\"\$$2\"";
X			case "$tp" in
X			""|" ") eval "$1=\"\$$2\"";;
X			*) eval "$1=";;
X			esac;;
X		esac;;
X	esac;;
X*)
X	eval "tp=\"$oldprefix-\$$2-\""; eval "tp=\"$tp\"";
X	case "$tp" in
X	--|/*--|\~*--) eval "$1=\"$prefix/$3\"";;
X	/*-$oldprefix/*|\~*-$oldprefix/*)
X		eval "$1=\`echo \$$2 | sed \"s,^$oldprefix,$prefix,\"\`";;
X	*) eval "$1=\"\$$2\"";;
X	esac;;
Xesac'
X
X: set the prefixup variable, to restore leading tilda escape
Xprefixup='case "$prefixexp" in
X"$prefix") ;;
X*) eval "$1=\`echo \$$1 | sed \"s,^$prefixexp,$prefix,\"\`";;
Xesac'
X
X: determine where public libraries go
Xset lib lib
Xeval $prefixit
Xcase "$lib" in
X'')
X	dflt=`./loc . "." $prefixexp/lib /usr/local/lib /usr/lib /lib`
X	set dflt
X	eval $prefixup
X	;;
X*)  dflt="$lib";;
Xesac
Xecho " "
Xfn=d~
Xrp='Where do you want to put the public libraries?'
X. ./getfile
Xlib="$ans"
Xlibexp="$ansexp"
X
X: is AFS running?
Xecho " "
Xcase "$afs" in
X$define|true)	afs=true ;;
X$undef|false)	afs=false ;;
X*)	if test -d /afs; then
X		afs=true
X	else
X		afs=false
X	fi
X	;;
Xesac
Xif $afs; then
X	echo "AFS may be running... I'll be extra cautious then..." >&4
Xelse
X	echo "AFS does not seem to be running..." >&4
Xfi
X
X: determine where private executables go
Xset dflt privlib lib/$package
Xeval $prefixit
X$cat <<EOM
X
XThere are some auxiliary files for $package that need to be put into a
Xprivate library directory that is accessible by everyone.
X
XEOM
Xfn=d~+
Xrp='Pathname where the private library files will reside?'
X. ./getfile
Xif $test "X$privlibexp" != "X$ansexp"; then
X	installprivlib=''
Xfi
Xprivlib="$ans"
Xprivlibexp="$ansexp"
Xif $afs; then
X	$cat <<EOM
X
XSince you are running AFS, I need to distinguish the directory in which
Xprivate files reside from the directory in which they are installed (and from
Xwhich they are presumably copied to the former directory by occult means).
X
XEOM
X	case "$installprivlib" in
X	'') dflt=`echo $privlibexp | sed 's#^/afs/#/afs/.#'`;;
X	*) dflt="$installprivlib";;
X	esac
X	fn=de~
X	rp='Where will private files be installed?'
X	. ./getfile
X	installprivlib="$ans"
Xelse
X	installprivlib="$privlibexp"
Xfi
X
X: see if we have to deal with yellow pages, now NIS.
Xif $test -d /usr/etc/yp || $test -d /etc/yp; then
X	if $test -f /usr/etc/nibindd; then
X		echo " "
X		echo "I'm fairly confident you're on a NeXT."
X		echo " "
X		rp='Do you get the passwd file via NetInfo?'
X		dflt=y
X		case "$passcat" in
X		nidump*) ;;
X		'') ;;
X		*) dflt=n;;
X		esac
X		. ./myread
X		case "$ans" in
X		y*) passcat='nidump passwd .'
X			echo "(Assuming /etc/group is also distributed.)"
X			groupcat='nidump group .'
X			;;
X		*)	echo "You told me, so don't blame me."
X			case "$passcat" in
X			nidump*) passcat=''
X				 groupcat='';;
X			esac
X			echo "(Assuming /etc/group is handled the same way.)"
X			;;
X		esac
X		echo " "
X		rp='Do you get the hosts file via NetInfo?'
X		dflt=y
X		case "$hostcat" in
X		nidump*) ;;
X		'') ;;
X		*) dflt=n;;
X		esac
X		. ./myread
X		case "$ans" in
X		y*) hostcat='nidump hosts .';;
X		*)	case "$hostcat" in
X			nidump*) hostcat='';;
X			esac
X			;;
X		esac
X	fi
X	case "$passcat" in
X	nidump*) ;;
X	*)
X		case "$passcat" in
X		*ypcat*) dflt=y;;
X		'') if $contains '^\+' /etc/passwd >/dev/null 2>&1; then
X				dflt=y
X			else
X				dflt=n
X			fi;;
X		*) dflt=n;;
X		esac
X		echo " "
X		rp='Are you getting the passwd file via yellow pages?'
X		. ./myread
X		case "$ans" in
X		y*) passcat='ypcat passwd'
X			echo "(Assuming /etc/group is also distributed.)"
X			groupcat='ypcat group'
X			;;
X		*)	passcat='cat /etc/passwd'
X			echo "(Assuming /etc/group is also local.)"
X			groupcat='cat /etc/group'
X			;;
X		esac
X		;;
X	esac
X	case "$hostcat" in
X	nidump*) ;;
X	*)
X		case "$hostcat" in
X		*ypcat*) dflt=y;;
X		'') if $contains '^\+' /etc/passwd >/dev/null 2>&1; then
X				dflt=y
X			else
X				dflt=n
X			fi;;
X		*) dflt=n;;
X		esac
X		echo " "
X		rp='Are you getting the hosts file via yellow pages?'
X		. ./myread
X		case "$ans" in
X		y*) hostcat='ypcat hosts';;
X		*) hostcat='cat /etc/hosts';;
X		esac
X		;;
X	esac
Xfi
Xcase "$hostcat" in
X'') hostcat='cat /etc/hosts';;
Xesac
Xcase "$groupcat" in
X'') groupcat='cat /etc/group';;
Xesac
Xcase "$passcat" in
X'') passcat='cat /etc/passwd';;
Xesac
X
X: now get the host name
Xecho " "
Xecho "Figuring out host name..." >&4
Xcase "$myhostname" in
X'') cont=true
X	echo 'Maybe "hostname" will work...'
X	if tans=`sh -c hostname 2>&1` ; then
X		myhostname=$tans
X		phostname=hostname
X		cont=''
X	fi
X	;;
X*) cont='';;
Xesac
Xif $test "$cont"; then
X	if ./xenix; then
X		echo 'Oh, dear.  Maybe "/etc/systemid" is the key...'
X		if tans=`cat /etc/systemid 2>&1` ; then
X			myhostname=$tans
X			phostname='cat /etc/systemid'
X			echo "Whadyaknow.  Xenix always was a bit strange..."
X			cont=''
X		fi
X	elif $test -r /etc/systemid; then
X		echo "(What is a non-Xenix system doing with /etc/systemid?)"
X	fi
Xfi
Xif $test "$cont"; then
X	echo 'No, maybe "uuname -l" will work...'
X	if tans=`sh -c 'uuname -l' 2>&1` ; then
X		myhostname=$tans
X		phostname='uuname -l'
X	else
X		echo 'Strange.  Maybe "uname -n" will work...'
X		if tans=`sh -c 'uname -n' 2>&1` ; then
X			myhostname=$tans
X			phostname='uname -n'
X		else
X			echo 'Oh well, maybe I can mine it out of whoami.h...'
X			if tans=`sh -c $contains' sysname $usrinc/whoami.h' 2>&1` ; then
X				myhostname=`echo "$tans" | $sed 's/^.*"\(.*\)"/\1/'`
X				phostname="sed -n -e '"'/sysname/s/^.*\"\\(.*\\)\"/\1/{'"' -e p -e q -e '}' <$usrinc/whoami.h"
X			else
X				case "$myhostname" in
X				'') echo "Does this machine have an identity crisis or something?"
X					phostname='';;
X				*)
X					echo "Well, you said $myhostname before..."
X					phostname='echo $myhostname';;
X				esac
X			fi
X		fi
X	fi
Xfi
X: you do not want to know about this
Xset $myhostname
Xmyhostname=$1
X
X: verify guess
Xif $test "$myhostname" ; then
X	dflt=y
X	rp='Your host name appears to be "'$myhostname'".'" Right?"
X	. ./myread
X	case "$ans" in
X	y*) ;;
X	*) myhostname='';;
X	esac
Xfi
X
X: bad guess or no guess
Xwhile $test "X$myhostname" = X ; do
X	dflt=''
X	rp="Please type the (one word) name of your host:"
X	. ./myread
X	myhostname="$ans"
Xdone
X
X: translate upper to lower if necessary
Xcase "$myhostname" in
X*[A-Z]*)
X	echo "(Normalizing case in your host name)"
X	myhostname=`echo $myhostname | ./tr '[A-Z]' '[a-z]'`
X	;;
Xesac
X
X: a little sanity check here
Xcase "$phostname" in
X'') ;;
X*)
X	case `$phostname | ./tr '[A-Z]' '[a-z]'` in
X	$myhostname$mydomain|$myhostname) ;;
X	*)
X		case "$phostname" in
X		sed*)
X			echo "(That doesn't agree with your whoami.h file, by the way.)"
X			;;
X		*)
X			echo "(That doesn't agree with your $phostname command, by the way.)"
X			;;
X		esac
X	;;
X	esac
X	;;
Xesac
X
X: set up the script used to warn in case of inconsistency
Xcat <<EOS >whoa
X$startsh
XEOS
Xcat <<'EOSC' >>whoa
Xdflt=y
Xecho " "
Xecho "*** WHOA THERE!!! ***" >&4
Xecho "    The $hint value for \$$var on this machine was \"$was\"!" >&4
Xrp="    Keep the $hint value?"
X. ./myread
Xcase "$ans" in
Xy) td=$was; tu=$was;;
Xesac
XEOSC
X
X: function used to set $1 to $val
Xsetvar='var=$1; eval "was=\$$1"; td=$define; tu=$undef;
Xcase "$val$was" in
X$define$undef) . ./whoa; eval "$var=\$td";;
X$undef$define) . ./whoa; eval "$var=\$tu";;
X*) eval "$var=$val";;
Xesac'
X
X: Set private lib path
Xcase "$plibpth" in
X'') if ./mips; then
X		plibpth="$incpath/usr/lib /usr/local/lib /usr/ccs/lib"
X	fi;;
Xesac
Xcase "$libpth" in
X' ') dlist='';;
X'') dlist="$loclibpth $plibpth $glibpth";;
X*) dlist="$libpth";;
Xesac
X
X: Now check and see which directories actually exist, avoiding duplicates
Xlibpth=''
Xfor xxx in $dlist
Xdo
X    if $test -d $xxx; then
X		case " $libpth " in
X		*" $xxx "*) ;;
X		*) libpth="$libpth $xxx";;
X		esac
X    fi
Xdone
X$cat <<'EOM'
X
XSome systems have incompatible or broken versions of libraries.  Among
Xthe directories listed in the question below, please remove any you
Xknow not to be holding relevant libraries, and add any that are needed.
XSay "none" for none.
X
XEOM
Xcase "$libpth" in
X'') dflt='none';;
X*)
X	set X $libpth
X	shift
X	dflt=${1+"$@"}
X	;;
Xesac
Xrp="Directories to use for library searches?"
X. ./myread
Xcase "$ans" in
Xnone) libpth=' ';;
X*) libpth="$ans";;
Xesac
X
X: compute shared library extension
Xcase "$so" in
X'')
X	if xxx=`./loc libc.sl X $libpth`; $test -f "$xxx"; then
X		dflt='sl'
X	else
X		dflt='so'
X	fi
X	;;
X*) dflt="$so";;
Xesac
X$cat <<EOM
X
XOn some systems, shared libraries may be available.  Answer 'none' if
Xyou want to suppress searching of shared libraries for the remaining
Xof this configuration.
X
XEOM
Xrp='What is the file extension used for shared libraries?'
X. ./myread
Xso="$ans"
X
X: Define several unixisms.
X: Hints files or command line option can be used to override them.
Xcase "$_a" in
X'') _a='.a';;
Xesac
Xcase "$_o" in
X'') _o='.o';;
Xesac
X
X: Looking for optional libraries
Xecho " "
Xecho "Checking for optional libraries..." >&4
Xcase "$libs" in
X' '|'') dflt='';;
X*) dflt="$libs";;
Xesac
Xcase "$libswanted" in
X'') libswanted='c_s';;
Xesac
Xfor thislib in $libswanted; do
X	
X	if xxx=`./loc lib$thislib.$so.[0-9]'*' X $libpth`; $test -f "$xxx"; then
X		echo "Found -l$thislib (shared)."
X		case " $dflt " in
X		*"-l$thislib "*);;
X		*) dflt="$dflt -l$thislib";;
X		esac
X	elif xxx=`./loc lib$thislib.$so X $libpth` ; $test -f "$xxx"; then
X		echo "Found -l$thislib (shared)."
X		case " $dflt " in
X		*"-l$thislib "*);;
X		*) dflt="$dflt -l$thislib";;
X		esac
X	elif xxx=`./loc lib$thislib$_a X $libpth`; $test -f "$xxx"; then
X		echo "Found -l$thislib."
X		case " $dflt " in
X		*"-l$thislib "*);;
X		*) dflt="$dflt -l$thislib";;
X		esac
X	elif xxx=`./loc $thislib$_a X $libpth`; $test -f "$xxx"; then
X		echo "Found -l$thislib."
X		case " $dflt " in
X		*"-l$thislib "*);;
X		*) dflt="$dflt -l$thislib";;
X		esac
X	elif xxx=`./loc lib${thislib}_s$_a X $libpth`; $test -f "$xxx"; then
X		echo "Found -l${thislib}_s."
X		case " $dflt " in
X		*"-l$thislib "*);;
X		*) dflt="$dflt -l${thislib}_s";;
X		esac
X	elif xxx=`./loc Slib$thislib$_a X $xlibpth`; $test -f "$xxx"; then
X		echo "Found -l$thislib."
X		case " $dflt " in
X		*"-l$thislib "*);;
X		*) dflt="$dflt -l$thislib";;
X		esac
X	else
X		echo "No -l$thislib."
X	fi
Xdone
Xset X $dflt
Xshift
Xdflt="$*"
Xcase "$libs" in
X'') dflt="$dflt";;
X*) dflt="$libs";;
Xesac
Xcase "$dflt" in
X' '|'') dflt='none';;
Xesac
X
X$cat <<EOM
X 
XSome versions of Unix support shared libraries, which make executables smaller
Xbut make load time slightly longer.
X
XOn some systems, mostly System V Release 3's, the shared library is included
Xby putting the option "-lc_s" as the last thing on the cc command line when
Xlinking.  Other systems use shared libraries by default.  There may be other
Xlibraries needed to compile $package on your machine as well.  If your system
Xneeds the "-lc_s" option, include it here.  Include any other special libraries
Xhere as well.  Say "none" for none.
XEOM
X
Xecho " "
Xrp="Any additional libraries?"
X. ./myread
Xcase "$ans" in
Xnone) libs=' ';;
X*) libs="$ans";;
Xesac
X
Xecho " "
Xecho "Checking for GNU C Library..." >&4
Xcat >gnulibc.c <<EOM
Xint
Xmain()
X{
X	return __libc_main();
X}
XEOM
Xif $cc $ccflags $ldflags -o gnulibc gnulibc.c $libs >/dev/null 2>&1 && \
X  ./gnulibc | $contains '^GNU C Library' >/dev/null 2>&1; then
X	val="$define"
X	echo "You are using the GNU C Library"
Xelse
X	val="$undef"
X	echo "You are not using the GNU C Library"
Xfi
X$rm -f gnulibc*
Xset d_gnulibc
Xeval $setvar
X
X: see if nm is to be used to determine whether a symbol is defined or not
Xcase "$usenm" in
X'')
X	case "$d_gnulibc" in
X	$define)
X		dflt=n
X		;;
X	*)
X		dflt=`egrep 'inlibc|csym' ../Configure | wc -l 2>/dev/null`
X		if $test $dflt -gt 20; then
X			dflt=y
X		else
X			dflt=n
X		fi
X		;;
X	esac
X	;;
X*)
X	case "$usenm" in
X	true) dflt=y;;
X	*) dflt=n;;
X	esac
X	;;
Xesac
X$cat <<EOM
X
XI can use 'nm' to extract the symbols from your C libraries. This is a time
Xconsuming task which may generate huge output on the disk (up to 3 megabytes)
Xbut that should make the symbols extraction faster. The alternative is to skip
Xthe 'nm' extraction part and to compile a small test program instead to
Xdetermine whether each symbol is present. If you have a fast C compiler and/or
Xif your 'nm' output cannot be parsed, this may be the best solution.
XYou shouldn't let me use 'nm' if you have the GNU C Library.
X
XEOM
Xrp='Shall I use nm to extract C symbols from the libraries?'
X. ./myread
Xcase "$ans" in
Xn|N) usenm=false;;
X*) usenm=true;;
Xesac
X
Xrunnm=$usenm
Xcase "$reuseval" in
Xtrue) runnm=false;;
Xesac
X
X: nm options which may be necessary
Xcase "$nm_opt" in
X'') if $test -f /mach_boot; then
X		nm_opt=''
X	elif $test -d /usr/ccs/lib; then
X		nm_opt='-p'
X	elif $test -f /dgux; then
X		nm_opt='-p'
X	else
X		nm_opt=''
X	fi;;
Xesac
X
X: nm options which may be necessary for shared libraries but illegal
X: for archive libraries.  Thank you, Linux.
Xcase "$nm_so_opt" in
X'')	case "$myuname" in
X	*linux*)
X		if nm --help | $grep 'dynamic' > /dev/null 2>&1; then
X			nm_so_opt='--dynamic'
X		fi
X		;;
X	esac
X	;;
Xesac
X
Xcase "$runnm" in
Xtrue)
X: get list of predefined functions in a handy place
Xecho " "
Xcase "$libc" in
X'') libc=unknown
X	case "$libs" in
X	*-lc_s*) libc=`./loc libc_s$_a $libc $libpth`
X	esac
X	;;
Xesac
Xlibnames='';
Xcase "$libs" in
X'') ;;
X*)  for thislib in $libs; do
X	case "$thislib" in
X	-lc|-lc_s)
X		: Handle C library specially below.
X		;;
X	-l*)
X		thislib=`echo $thislib | $sed -e 's/^-l//'`
X		if try=`./loc lib$thislib.$so.'*' X $libpth`; $test -f "$try"; then
X			:
X		elif try=`./loc lib$thislib.$so X $libpth`; $test -f "$try"; then
X			:
X		elif try=`./loc lib$thislib$_a X $libpth`; $test -f "$try"; then
X			:
X		elif try=`./loc $thislib$_a X $libpth`; $test -f "$try"; then
X			:
X		elif try=`./loc lib$thislib X $libpth`; $test -f "$try"; then
X			:
X		elif try=`./loc $thislib X $libpth`; $test -f "$try"; then
X			:
X		elif try=`./loc Slib$thislib$_a X $xlibpth`; $test -f "$try"; then
X			:
X		else
X			try=''
X		fi
X		libnames="$libnames $try"
X		;;
X	*) libnames="$libnames $thislib" ;;
X	esac
X	done
X	;;
Xesac
Xxxx=normal
Xcase "$libc" in
Xunknown)
X	set /lib/libc.$so
X	for xxx in $libpth; do
X		$test -r $1 || set $xxx/libc.$so
X		$test -r $1 || \
X			set `echo blurfl; echo /usr/lib/libc.$so.[0-9]* | \
X			tr ' ' '\012' | egrep -v '\.[A-Za-z]*$' | $sed -e '
X				h
X				s/[0-9][0-9]*/0000&/g
X				s/0*\([0-9][0-9][0-9][0-9][0-9]\)/\1/g
X				G
X				s/\n/ /' | \
X			 sort | $sed -e 's/^.* //'`
X		eval set \$$#
X	done
X	$test -r $1 || set /usr/ccs/lib/libc.$so
X	$test -r $1 || set /lib/libsys_s$_a
X	;;
X*)
X	set blurfl
X	;;
Xesac
Xif $test -r "$1"; then
X	echo "Your (shared) C library seems to be in $1."
X	libc="$1"
Xelif $test -r /lib/libc && $test -r /lib/clib; then
X	echo "Your C library seems to be in both /lib/clib and /lib/libc."
X	xxx=apollo
X	libc='/lib/clib /lib/libc'
X	if $test -r /lib/syslib; then
X		echo "(Your math library is in /lib/syslib.)"
X		libc="$libc /lib/syslib"
X	fi
Xelif $test -r "$libc" || (test -h "$libc") >/dev/null 2>&1; then
X	echo "Your C library seems to be in $libc, as you said before."
Xelif $test -r $incpath/usr/lib/libc$_a; then
X	libc=$incpath/usr/lib/libc$_a;
X	echo "Your C library seems to be in $libc.  That's fine."
Xelif $test -r /lib/libc$_a; then
X	libc=/lib/libc$_a;
X	echo "Your C library seems to be in $libc.  You're normal."
Xelse
X	if tans=`./loc libc$_a blurfl/dyick $libpth`; $test -r "$tans"; then
X		:
X	elif tans=`./loc libc blurfl/dyick $libpth`; $test -r "$tans"; then
X		libnames="$libnames "`./loc clib blurfl/dyick $libpth`
X	elif tans=`./loc clib blurfl/dyick $libpth`; $test -r "$tans"; then
X		:
X	elif tans=`./loc Slibc$_a blurfl/dyick $xlibpth`; $test -r "$tans"; then
X		:
X	elif tans=`./loc Mlibc$_a blurfl/dyick $xlibpth`; $test -r "$tans"; then
X		:
X	else
X		tans=`./loc Llibc$_a blurfl/dyick $xlibpth`
X	fi
X	if $test -r "$tans"; then
X		echo "Your C library seems to be in $tans, of all places."
X		libc=$tans
X	else
X		libc='blurfl'
X	fi
Xfi
Xif $test $xxx = apollo -o -r "$libc" || (test -h "$libc") >/dev/null 2>&1; then
X	dflt="$libc"
X	cat <<EOM
X
XIf the guess above is wrong (which it might be if you're using a strange
Xcompiler, or your machine supports multiple models), you can override it here.
X
XEOM
Xelse
X	dflt=''
X	echo $libpth | tr ' ' '\012' | sort | uniq > libpath
X	cat >&4 <<EOM
XI can't seem to find your C library.  I've looked in the following places:
X
XEOM
X	$sed 's/^/	/' libpath
X	cat <<EOM
X
XNone of these seems to contain your C library. I need to get its name...
X
XEOM
Xfi
Xfn=f
Xrp='Where is your C library?'
X. ./getfile
Xlibc="$ans"
X
Xecho " "
Xecho $libc $libnames | tr ' ' '\012' | sort | uniq > libnames
Xset X `cat libnames`
Xshift
Xxxx=files
Xcase $# in 1) xxx=file; esac
Xecho "Extracting names from the following $xxx for later perusal:" >&4
Xecho " "
X$sed 's/^/	/' libnames >&4
Xecho " "
X$echo $n "This may take a while...$c" >&4
X
Xfor file in $*; do
X	case $file in
X	*$so*) nm $nm_so_opt $nm_opt $file 2>/dev/null;;
X	*) nm $nm_opt $file 2>/dev/null;;
X	esac
Xdone >libc.tmp
X
X$echo $n ".$c"
X$grep fprintf libc.tmp > libc.ptf
Xxscan='eval "<libc.ptf $com >libc.list"; $echo $n ".$c" >&4'
Xxrun='eval "<libc.tmp $com >libc.list"; echo "done" >&4'
Xxxx='[ADTSIW]'
Xif com="$sed -n -e 's/__IO//' -e 's/^.* $xxx  *_[_.]*//p' -e 's/^.* $xxx  *//p'";\
X	eval $xscan;\
X	$contains '^fprintf$' libc.list >/dev/null 2>&1; then
X		eval $xrun
Xelif com="$sed -n -e 's/^__*//' -e 's/^\([a-zA-Z_0-9$]*\).*xtern.*/\1/p'";\
X	eval $xscan;\
X	$contains '^fprintf$' libc.list >/dev/null 2>&1; then
X		eval $xrun
Xelif com="$sed -n -e '/|UNDEF/d' -e '/FUNC..GL/s/^.*|__*//p'";\
X	eval $xscan;\
X	$contains '^fprintf$' libc.list >/dev/null 2>&1; then
X		eval $xrun
Xelif com="$sed -n -e 's/^.* D __*//p' -e 's/^.* D //p'";\
X	eval $xscan;\
X	$contains '^fprintf$' libc.list >/dev/null 2>&1; then
X		eval $xrun
Xelif com="$sed -n -e 's/^_//' -e 's/^\([a-zA-Z_0-9]*\).*xtern.*text.*/\1/p'";\
X	eval $xscan;\
X	$contains '^fprintf$' libc.list >/dev/null 2>&1; then
X		eval $xrun
Xelif com="$sed -n -e 's/^.*|FUNC |GLOB .*|//p'";\
X	eval $xscan;\
X	$contains '^fprintf$' libc.list >/dev/null 2>&1; then
X		eval $xrun
Xelif com="$grep '|' | $sed -n -e '/|COMMON/d' -e '/|DATA/d' \
X				-e '/ file/d' -e 's/^\([^ 	]*\).*/\1/p'";\
X	eval $xscan;\
X	$contains '^fprintf$' libc.list >/dev/null 2>&1; then
X		eval $xrun
Xelif com="$sed -n -e 's/^.*|FUNC |GLOB .*|//p' -e 's/^.*|FUNC |WEAK .*|//p'";\
X	eval $xscan;\
X	$contains '^fprintf$' libc.list >/dev/null 2>&1; then
X		eval $xrun
Xelif com="$sed -n -e 's/^__//' -e '/|Undef/d' -e '/|Proc/s/ .*//p'";\
X	eval $xscan;\
X	$contains '^fprintf$' libc.list >/dev/null 2>&1; then
X		eval $xrun
Xelif com="$sed -n -e '/Def. Text/s/.* \([^ ]*\)\$/\1/p'";\
X	eval $xscan;\
X	$contains '^fprintf$' libc.list >/dev/null 2>&1; then
X		eval $xrun
Xelif com="$sed -n -e 's/^[-0-9a-f ]*_\(.*\)=.*/\1/p'";\
X	eval $xscan;\
X	$contains '^fprintf$' libc.list >/dev/null 2>&1; then
X		eval $xrun
Xelif com="$sed -n -e 's/.*\.text n\ \ \ \.//p'";\
X	eval $xscan;\
X	$contains '^fprintf$' libc.list >/dev/null 2>&1; then
X		eval $xrun
Xelse
X	nm -p $* 2>/dev/null >libc.tmp
X	$grep fprintf libc.tmp > libc.ptf
X	if com="$sed -n -e 's/^.* [ADTSIW]  *_[_.]*//p' -e 's/^.* [ADTSIW] //p'";\
X		eval $xscan; $contains '^fprintf$' libc.list >/dev/null 2>&1
X	then
X		nm_opt='-p'
X		eval $xrun
X	else
X		echo " "
X		echo "nm didn't seem to work right. Trying ar instead..." >&4
X		com=''
X		if ar t $libc > libc.tmp; then
X			for thisname in $libnames; do
X				ar t $thisname >>libc.tmp
X			done
X			$sed -e "s/\\$_o\$//" < libc.tmp > libc.list
X			echo "Ok." >&4
X		else
X			echo "ar didn't seem to work right." >&4
X			echo "Maybe this is a Cray...trying bld instead..." >&4
X			if bld t $libc | $sed -e 's/.*\///' -e "s/\\$_o:.*\$//" > libc.list
X			then
X				for thisname in $libnames; do
X					bld t $libnames | \
X					$sed -e 's/.*\///' -e "s/\\$_o:.*\$//" >>libc.list
X					ar t $thisname >>libc.tmp
X				done
X				echo "Ok." >&4
X			else
X				echo "That didn't work either.  Giving up." >&4
X				exit 1
X			fi
X		fi
X	fi
Xfi
Xnm_extract="$com"
Xif $test -f /lib/syscalls.exp; then
X	echo " "
X	echo "Also extracting names from /lib/syscalls.exp for good ole AIX..." >&4
X	$sed -n 's/^\([^ 	]*\)[ 	]*syscall$/\1/p' /lib/syscalls.exp >>libc.list
Xfi
X;;
Xesac
X$rm -f libnames libpath
X
X: is a C symbol defined?
Xcsym='tlook=$1;
Xcase "$3" in
X-v) tf=libc.tmp; tc=""; tdc="";;
X-a) tf=libc.tmp; tc="[0]"; tdc="[]";;
X*) tlook="^$1\$"; tf=libc.list; tc="()"; tdc="()";;
Xesac;
Xtx=yes;
Xcase "$reuseval-$4" in
Xtrue-) ;;
Xtrue-*) tx=no; eval "tval=\$$4"; case "$tval" in "") tx=yes;; esac;;
Xesac;
Xcase "$tx" in
Xyes)
X	case "$runnm" in
X	true)
X		if $contains $tlook $tf >/dev/null 2>&1;
X		then tval=true;
X		else tval=false;
X		fi;;
X	*)
X		echo "main() { extern short $1$tdc; printf(\"%hd\", $1$tc); }" > t.c;
X		if $cc $ccflags $ldflags -o t t.c $libs >/dev/null 2>&1;
X		then tval=true;
X		else tval=false;
X		fi;
X		$rm -f t t.c;;
X	esac;;
X*)
X	case "$tval" in
X	$define) tval=true;;
X	*) tval=false;;
X	esac;;
Xesac;
Xeval "$2=$tval"'
X
X: define an is-in-libc? function
Xinlibc='echo " "; td=$define; tu=$undef;
Xsym=$1; var=$2; eval "was=\$$2";
Xtx=yes;
Xcase "$reuseval$was" in
Xtrue) ;;
Xtrue*) tx=no;;
Xesac;
Xcase "$tx" in
Xyes)
X	set $sym tres -f;
X	eval $csym;
X	case "$tres" in
X	true)
X		echo "$sym() found." >&4;
X		case "$was" in $undef) . ./whoa; esac; eval "$var=\$td";;
X	*)
X		echo "$sym() NOT found." >&4;
X		case "$was" in $define) . ./whoa; esac; eval "$var=\$tu";;
X	esac;;
X*)
X	case "$was" in
X	$define) echo "$sym() found." >&4;;
X	*) echo "$sym() NOT found." >&4;;
X	esac;;
Xesac'
X
X: determine filename position in cpp output
Xecho " "
Xecho "Computing filename position in cpp output for #include directives..." >&4
Xecho '#include <stdio.h>' > foo.c
X$cat >fieldn <<EOF
X$startsh
X$cppstdin $cppflags $cppminus <foo.c 2>/dev/null | \
X$grep '^[ 	]*#.*stdio\.h' | \
Xwhile read cline; do
X	pos=1
X	set \$cline
X	while $test \$# -gt 0; do
X		if $test -r \`echo \$1 | $tr -d '"'\`; then
X			echo "\$pos"
X			exit 0
X		fi
X		shift
X		pos=\`expr \$pos + 1\`
X	done
Xdone
XEOF
Xchmod +x fieldn
Xfieldn=`./fieldn`
X$rm -f foo.c fieldn
Xcase $fieldn in
X'') pos='???';;
X1) pos=first;;
X2) pos=second;;
X3) pos=third;;
X*) pos="${fieldn}th";;
Xesac
Xecho "Your cpp writes the filename in the $pos field of the line."
X
X: locate header file
X$cat >findhdr <<EOF
X$startsh
Xwanted=\$1
Xname=''
Xif test -f $usrinc/\$wanted; then
X	echo "$usrinc/\$wanted"
X	exit 0
Xfi
Xawkprg='{ print \$$fieldn }'
Xecho "#include <\$wanted>" > foo\$\$.c
X$cppstdin $cppminus $cppflags < foo\$\$.c 2>/dev/null | \
X$grep "^[ 	]*#.*\$wanted" | \
Xwhile read cline; do
X	name=\`echo \$cline | $awk "\$awkprg" | $tr -d '"'\`
X	case "\$name" in
X	*/\$wanted) echo "\$name"; exit 0;;
X	*) name='';;
X	esac;
Xdone;
X$rm -f foo\$\$.c;
Xcase "\$name" in
X'') exit 1;;
Xesac
XEOF
Xchmod +x findhdr
X
X: see if ar generates random libraries by itself
Xecho " "
Xecho "Checking how to generate random libraries on your machine..." >&4
Xecho 'int bar1() { return bar2(); }' > bar1.c
Xecho 'int bar2() { return 2; }' > bar2.c
X$cat > foo.c <<'EOP'
Xmain() { printf("%d\n", bar1()); exit(0); }
XEOP
X$cc $ccflags -c bar1.c >/dev/null 2>&1
X$cc $ccflags -c bar2.c >/dev/null 2>&1
X$cc $ccflags -c foo.c >/dev/null 2>&1
X$ar rc bar$_a bar2$_o bar1$_o >/dev/null 2>&1
Xif $cc $ccflags $ldflags -o foobar foo$_o bar$_a $libs > /dev/null 2>&1 &&
X	./foobar >/dev/null 2>&1; then
X	echo "ar appears to generate random libraries itself."
X	orderlib=false
X	ranlib=":"
Xelif $ar ts bar$_a >/dev/null 2>&1 &&
X	$cc $ccflags $ldflags -o foobar foo$_o bar$_a $libs > /dev/null 2>&1 &&
X	./foobar >/dev/null 2>&1; then
X		echo "a table of contents needs to be added with 'ar ts'."
X		orderlib=false
X		ranlib="$ar ts"
Xelse
X	case "$ranlib" in
X	:) ranlib='';;
X	'')
X		ranlib=`./loc ranlib X /usr/bin /bin /usr/local/bin`
X		$test -f $ranlib || ranlib=''
X		;;
X	esac
X	if $test -n "$ranlib"; then
X		echo "your system has '$ranlib'; we'll use that."
X		orderlib=false
X	else
X		echo "your system doesn't seem to support random libraries"
X		echo "so we'll use lorder and tsort to order the libraries."
X		orderlib=true
X		ranlib=":"
X	fi
Xfi
X$rm -f foo* bar* 
X
X
X: Set install dir to full library directory path
Xp_installdir="$privlibexp"
X
X: Set default dictionary path
Xp_dictionaries="$p_installdir/dictionaries"
X
X: Set utilty directory path
Xp_utildir="$p_installdir/bin"
X
X: Set saved program directory path
Xp_keepdir="$p_installdir/system"
X
X: Set saved doc directory path
Xp_docdir="$p_installdir/doc"
X
X: Remember where this is taking place
Xtop_level=`cd ..;pwd`
X
Xp_shadow=''
Xt=`./findhdr shadow.h`
Xif $test -n "$t"; then
X	echo '### Including support for System 5 shadow passwords' >& 4
X	p_shadow='shm_shadow'
Xfi
Xp_osf1auth=$undef
Xp_u4auth=$undef
Xp_hpuxauth=$undef
Xp_aixauth=$undef
X
Xcase "${p_osName}_${p_osRev}" in
X	sunos_4*)
X		if $test -n "`./findhdr pwdadj.h`"; then
X			echo '### Including support for SunOS 4 adjunct passwords' >& 4
X			p_shadow='shm_adjunct'
X		fi
X		;;
X	dec_osf*)
X		if $test -n "`./findhdr sia.h`" ; then
X			echo '### Including support for OSF/1 Security Integration Architecture' >& 4
X			p_shadow='shm_osf1';
X			p_osf1auth=$define
X		fi
X		;;
X	ultrix_4*)
X		if $test -n "`./findhdr auth.h`"; then
X			echo '### Including support for Ultrix 4 auth' >& 4
X			p_shadow='shm_ultrix';
X			p_u4auth=$define
X		fi
X		;;
X	hp*ux*)
X		if $test -n "`./findhdr prot.h`" ; then
X			echo '### Including support for HP-UX trusted host' >& 4
X			p_shadow='shm_hpux'
X			p_hpuxauth=$define
X		fi
X		;;
X	aix*)
X		if $test -n "`./findhdr userpw.h`"; then
X			echo '### Including support for AIX auth' >& 4
X			p_shadow='shm_aix';
X			p_aixauth=$define
X		fi
X		;;
Xesac
X
Xp_passwdfile=''
Xfor d in /etc /var/yp/src ; do
X	$test ! -d $d && continue
X	$test -f $d/passwd && p_passwdfile="$p_passwdfile $d/passwd"
Xdone
Xecho ' '
Xecho '### Found passwd files '
Xfor t in $p_passwdfile; do
X	echo "   \"$t\""
Xdone
Xecho ' '
Xrp='Change passwd file list?'
Xdflt='n'
X. ./myread
Xcase "$ans" in
X	y*|Y*)	ans=y ;;
Xesac
Xif $test "$ans" = y; then
X	echo 'Enter passwd file names, end with blank line'
X	d=''
X	while true; do
X		rp='Passwd file: '
X		dflt=''
X		. ./myread
X		case $ans in
X		/*)	;;
X		"")	break
X			;;
X		*)	echo 'File name must start with /'
X			continue
X			;;
X		esac
X		if $test ! -f $ans ; then
X			echo "No such file \"$ans\""
X			continue
X		fi
X		d="$d $ans"
X	done
X	$test -n "$d" && p_passwdfile=$d
X	echo ' '
X	echo "### Passwd file list now: $p_passwdfile"
Xfi
Xp_dbmpw=`./loc mkpasswd "" $pth`
Xif $test -n "$p_dbmpw"; then
X	echo ' '
X	echo '### Including support for DBM lookaside files'
X	echo ' '
X	p_dbmpw="$define"
Xelse
X	p_dbmpw="$undef"
Xfi
Xp_shadowfile=''
Xfor d in /etc /etc/security ; do
X	$test ! -d $d && continue
X	t=`(cd $d) >/dev/null 2>&1`
X	if $test -n "$t"; then
X		echo ' '
X		echo $t
X		ls -ld $d
X		echo "I strongly suggest you re-run $0 as root"
X		echo "so that the directory \"$d\" can be examined"
X		echo ' '
X	fi
X	for t in shadow passwd passwd.adjunct; do
X		$test -f $d/$t && p_shadowfile="$p_shadowfile $d/$t"
X	done
Xdone
Xp_shadowfile=`echo $p_shadowfile | sed 's@/etc/passwd@@'`
Xecho '### Found shadow files '
Xfor t in $p_shadowfile; do
X	echo "    \"$t\""
Xdone
Xrp='Change shadow file list?'
Xdflt='n'
X. ./myread
Xcase "$ans" in
X	y*|Y*)	ans=y ;;
Xesac
Xif $test "$ans" = y; then
X	rp='Enter shadow file names seperated by spaces'
X	dflt=$p_shadowfile
X	. ./myread
X	d=''
X	for l in $ans; do
X		if $test ! -f $l ; then
X			echo "Shadow file \"$l\" does not exist"
X			continue;
X		fi
X		case $l in
X		/*)	;;
X		*)	echo 'Filename must start with /'
X			continue
X			;;
X		esac
X		d="$d $l"
X	done
X	$test -n "$d" && p_shadowfile=$d
X	echo ' '
X	echo "Shadow file list now: $p_shadowfile"
Xfi
X
X
Xp_svcconf="$undef"
Xif $test -f /etc/svc.conf ; then
X	echo '### This system uses /etc/svc.conf'
Xfi
X
Xp_nsswitch="$undef"
Xif $test -f /etc/nsswitch.conf ; then
X	echo '### This system uses /etc/nsswitch.conf'
X	p_nsswitch="$define"
Xfi
X
Xif $test "$p_svcconf" = $define -a "$p_nsswitch" = $define; then
X	echo ' '
X	echo 'Hmm. This system thinks it has both /etc/svc.conf' >&4
X	echo "and /etc/nsswitch.conf.  That can\'t be right!" >&4
X	echo ' '
X	exit 1
Xfi
Xecho ' '
X
Xset yp_get_default_domain t
Xeval "$inlibc"
Xif $test "$t" = "$define"; then
X	echo ' '
X	echo '### This system has NIS (YP).'
X	echo ' '
X	rp='Do you want to include NIS support?'
X	dflt='y'
X	. ./myread
X	case "$ans" in
X	y*|Y*)	p_nis="$define"
X		: See if secure RPC is available
X		set issecure p_secure_rpc
X		eval "$inlibc"
X		if $test "$p_secure_rpc" = "$define"; then
X			echo '### This system has Secure RPC'
X		else
X			p_secure_rpc="$undef"
X		fi
X		;;
X	n*|N*)	p_nis="$undef"
X		p_secure_rpc="$undef"
X		 ;;
X	esac
Xelse
X	p_nis="$undef"
X	p_secure_rpc="$undef"
Xfi
X
Xp_nispasswd="$undef"
Xif $test -n "`./findhdr rpcsvc/nis.h`"; then
X	echo ' '
X	echo '### It looks like this system has NIS+.'
X	echo ' '
X	rp='Do you want to include NIS+ support?'
X	dflt='n'
X	. ./myread
X	case "$ans" in
X	y*|Y*)	p_nisplus="$define"
X		if $test -n "`./findhdr rpcsvc/nispasswd.h`"; then
X			p_nispasswd="$define"
X			echo '### Will use nispasswd RPC.'
X		fi
X	;;
X	n*|N*)	p_nisplus="$undef" ;;
X	esac
Xelse
X	p_nisplus="$undef"
Xfi
X
Xp_hesiod="$undef"		# Not yet
Xp_kerberos="$undef"		# Not yet
X
Xcat <<EOF
X
XThere are some functions that $package cannot perform, or
Xare best done by the vendor passwd/chfn/chsh programs.
X
XThese will be moved to a restricted access area if
Xyou choose the "replace system programs" option.
X
XEOF
X
Xp_replace=$undef
Xrp='Replace system programs?'
Xdflt='y'
X. ./myread
Xcase "$ans" in
X	y*|Y*)	p_replace=$define
X		;;
Xesac
X
Xlookfor='passwd chfn chsh yppasswd ypchfn ypchsh nispasswd'
X
Xfor d in $pth; do
X	if $test ! -d $d; then
X		continue
X	fi
X        case "`ls -ld $d`" in
X                l*)     continue ;;	# Ignore directories which are symlinks
X        esac
X	for l in $lookfor; do
X		$test ! -f $d/$l && continue
X		if $test -z "`ls -l $d/$l | awk '{print $1}' | tr -cd 'x\012'`"; then
X			continue	# Not an executable (no 'x' in mode)
X		fi
X		p_sysprogs="$p_sysprogs $d/$l"
X	done
Xdone
Xecho ' '
Xp_sysprogs=`echo $p_sysprogs | tr ' ' '\012' | sort | uniq | tr '\012' ' '`
X
Xecho '---------------------------------------------------'
Xecho ' '
Xecho Found passwd/chfn/chsh programs: $p_sysprogs >&4
Xecho ' '
Xecho '---------------------------------------------------'
X
Xcat <<EOF
X
XThe 'paranoid' option will cause $package to abort if
Xthe uid obtained via getpwnam(getlogin) does not equal the
Xuid obtained via getuid().
X
XIf you allow multiple login names to have the same uid,
Xthen DO NOT enable this option.
X
XEOF
X
Xrp='Activate the "paranoid" option'
Xdflt='n'
X. ./myread
Xcase "$ans" in
X	y*|Y*)	p_paranoid="$define" ;;
X	*)	p_paranoid="$undef" ;;
Xesac
X
Xp_history="$p_installdir/passwd.history"
X
Xcat <<EOF
X
X$package keeps a password history database.  This database is kept
Xin a DBM database or file (default "$p_history").
X
XEOF
X
Xt=`(rpcinfo -p localhost | grep nfs | grep -v rpcnfs) 2>/dev/null`
Xif $test -n "$t"; then
X	cat <<EOF
X
XIt appears that $myhostname is an NFS server.
X
XIf it is part of a cluster, or serves diskless or dataless clients,
Xthen files in $p_installdir must be writable by the members.
X
XIf this is the case, then the history file MUST be placed
Xto a filesystem that clients mount read/write with "root"
Xaccess permission.
X
XSee the Npasswd Reference Manual (doc/Reference.html) for details.
X
XEOF
Xfi
X
Xrp='Password history file'
Xdflt="$p_installdir/history"
Xfn='f/+'
X. ./getfile
Xp_history="$ansexp"
X
Xcat <<EOF
X
X---------------------------------------------------
XDone with $package configuration
X---------------------------------------------------
X
XEOF
X: see if bcopy exists
Xset bcopy d_bcopy
Xeval $inlibc
X
X: see if bzero exists
Xset bzero d_bzero
Xeval $inlibc
X
X: check for const keyword
Xecho " "
Xecho 'Checking to see if your C compiler knows about "const"...' >&4
X$cat >const.c <<'EOCP'
Xtypedef struct spug { int drokk; } spug;
Xmain()
X{
X	const char *foo;
X	const spug y;
X}
XEOCP
Xif $cc -c $ccflags const.c >/dev/null 2>&1 ; then
X	val="$define"
X	echo "Yup, it does."
Xelse
X	val="$undef"
X	echo "Nope, it doesn't."
Xfi
Xset d_const
Xeval $setvar
X
X: see if fchmod exists
Xset fchmod d_fchmod
Xeval $inlibc
X
X: see if fchown exists
Xset fchown d_fchown
Xeval $inlibc
X
X: see how we will look up host name
Xecho " "
Xif false; then
X	: dummy stub to allow use of elif
Xelif set gethostname val -f d_gethname; eval $csym; $val; then
X	echo 'gethostname() found.' >&4
X	d_gethname="$define"
X	call=gethostname
Xfi
Xcase "$d_gethname" in
X'') d_gethname="$undef";;
Xesac
Xcase "$d_uname" in
X'') d_uname="$undef";;
Xesac
Xcase "$d_phostname" in
X'') d_phostname="$undef";;
Xesac
X
X: see if memcpy exists
Xset memcpy d_memcpy
Xeval $inlibc
X
X: see if memset exists
Xset memset d_memset
Xeval $inlibc
X
X: Initialize h_fcntl
Xh_fcntl=false
X
X: Initialize h_sysfile
Xh_sysfile=false
X
X: Locate the flags for 'open()'
Xecho " "
X$cat >open3.c <<'EOCP'
X#include <sys/types.h>
X#ifdef I_FCNTL
X#include <fcntl.h>
X#endif
X#ifdef I_SYS_FILE
X#include <sys/file.h>
X#endif
Xmain() {
X	if(O_RDONLY);
X#ifdef O_TRUNC
X	exit(0);
X#else
X	exit(1);
X#endif
X}
XEOCP
X: check sys/file.h first to get FREAD on Sun
Xif $test `./findhdr sys/file.h` && \
X		$cc $cppflags "-DI_SYS_FILE" open3.c -o open3 >/dev/null 2>&1 ; then
X	h_sysfile=true;
X	echo "<sys/file.h> defines the O_* constants..." >&4
X	if ./open3; then
X		echo "and you have the 3 argument form of open()." >&4
X		val="$define"
X	else
X		echo "but not the 3 argument form of open().  Oh, well." >&4
X		val="$undef"
X	fi
Xelif $test `./findhdr fcntl.h` && \
X		$cc "-DI_FCNTL" open3.c -o open3 >/dev/null 2>&1 ; then
X	h_fcntl=true;
X	echo "<fcntl.h> defines the O_* constants..." >&4
X	if ./open3; then
X		echo "and you have the 3 argument form of open()." >&4
X		val="$define"
X	else
X		echo "but not the 3 argument form of open().  Oh, well." >&4
X		val="$undef"
X	fi
Xelse
X	val="$undef"
X	echo "I can't find the O_* constant definitions!  You got problems." >&4
Xfi
Xset d_open3
Xeval $setvar
X$rm -f open3*
X
X: define an alternate in-header-list? function
Xinhdr='echo " "; td=$define; tu=$undef; yyy=$@;
Xcont=true; xxf="echo \"<\$1> found.\" >&4";
Xcase $# in 2) xxnf="echo \"<\$1> NOT found.\" >&4";;
X*) xxnf="echo \"<\$1> NOT found, ...\" >&4";;
Xesac;
Xcase $# in 4) instead=instead;; *) instead="at last";; esac;
Xwhile $test "$cont"; do
X	xxx=`./findhdr $1`
X	var=$2; eval "was=\$$2";
X	if $test "$xxx" && $test -r "$xxx";
X	then eval $xxf;
X	eval "case \"\$$var\" in $undef) . ./whoa; esac"; eval "$var=\$td";
X		cont="";
X	else eval $xxnf;
X	eval "case \"\$$var\" in $define) . ./whoa; esac"; eval "$var=\$tu"; fi;
X	set $yyy; shift; shift; yyy=$@;
X	case $# in 0) cont="";;
X	2) xxf="echo \"but I found <\$1> $instead.\" >&4";
X		xxnf="echo \"and I did not find <\$1> either.\" >&4";;
X	*) xxf="echo \"but I found <\$1\> instead.\" >&4";
X		xxnf="echo \"there is no <\$1>, ...\" >&4";;
X	esac;
Xdone;
Xwhile $test "$yyy";
Xdo set $yyy; var=$2; eval "was=\$$2";
X	eval "case \"\$$var\" in $define) . ./whoa; esac"; eval "$var=\$tu";
X	set $yyy; shift; shift; yyy=$@;
Xdone'
X
X: see if this is a pwd.h system
Xset pwd.h i_pwd
Xeval $inhdr
X
Xcase "$i_pwd" in
X$define)
X	xxx=`./findhdr pwd.h`
X	$cppstdin $cppflags $cppminus < $xxx >$$.h
X
X	if $contains 'pw_quota' $$.h >/dev/null 2>&1; then
X		val="$define"
X	else
X		val="$undef"
X	fi
X	set d_pwquota
X	eval $setvar
X
X	if $contains 'pw_age' $$.h >/dev/null 2>&1; then
X		val="$define"
X	else
X		val="$undef"
X	fi
X	set d_pwage
X	eval $setvar
X
X	if $contains 'pw_change' $$.h >/dev/null 2>&1; then
X		val="$define"
X	else
X		val="$undef"
X	fi
X	set d_pwchange
X	eval $setvar
X
X	if $contains 'pw_class' $$.h >/dev/null 2>&1; then
X		val="$define"
X	else
X		val="$undef"
X	fi
X	set d_pwclass
X	eval $setvar
X
X	if $contains 'pw_expire' $$.h >/dev/null 2>&1; then
X		val="$define"
X	else
X		val="$undef"
X	fi
X	set d_pwexpire
X	eval $setvar
X
X	if $contains 'pw_comment' $$.h >/dev/null 2>&1; then
X		val="$define"
X	else
X		val="$undef"
X	fi
X	set d_pwcomment
X	eval $setvar
X
X	$rm -f $$.h
X	;;
X*)
X	val="$undef"; 
X	set d_pwquota; eval $setvar
X	set d_pwage; eval $setvar
X	set d_pwchange; eval $setvar
X	set d_pwclass; eval $setvar
X	set d_pwexpire; eval $setvar
X	set d_pwcomment; eval $setvar
X	;;
Xesac
X
X: see if readdir and friends exist
Xset readdir d_readdir
Xeval $inlibc
X
X: see if rename exists
Xset rename d_rename
Xeval $inlibc
X
X: see if sigblock exists
Xset sigblock d_sigblock
Xeval $inlibc
X
X: see if strcasecmp exists
Xset strcasecmp d_strccmp
Xeval $inlibc
X
X: see which of string.h or strings.h is needed
Xecho " "
Xstrings=`./findhdr string.h`
Xif $test "$strings" && $test -r "$strings"; then
X	echo "Using <string.h> instead of <strings.h>." >&4
X	val="$define"
Xelse
X	val="$undef"
X	strings=`./findhdr strings.h`
X	if $test "$strings" && $test -r "$strings"; then
X		echo "Using <strings.h> instead of <string.h>." >&4
X	else
X		echo "No string header found -- You'll surely have problems." >&4
X	fi
Xfi
Xset i_string
Xeval $setvar
Xcase "$i_string" in
X"$undef") strings=`./findhdr strings.h`;;
X*)	  strings=`./findhdr string.h`;;
Xesac
X
X: index or strchr
Xecho " "
Xif set index val -f; eval $csym; $val; then
X	if set strchr val -f d_strchr; eval $csym; $val; then
X		if $contains strchr "$strings" >/dev/null 2>&1 ; then
X			val="$define"
X			vali="$undef"
X			echo "strchr() found." >&4
X		else
X			val="$undef"
X			vali="$define"
X			echo "index() found." >&4
X		fi
X	else
X		val="$undef"
X		vali="$define"
X		echo "index() found." >&4
X	fi
Xelse
X	if set strchr val -f d_strchr; eval $csym; $val; then
X		val="$define"
X		vali="$undef"
X		echo "strchr() found." >&4
X	else
X		echo "No index() or strchr() found!" >&4
X		val="$undef"
X		vali="$undef"
X	fi
Xfi
Xset d_strchr; eval $setvar
Xval="$vali"
Xset d_index; eval $setvar
X
X: see if strdup exists
Xset strdup d_strdup
Xeval $inlibc
X
X: set the base revision
Xbaserev=2.0
X
X: see if this is a dirent system
Xecho " "
Xif xinc=`./findhdr dirent.h`; $test "$xinc"; then
X	val="$define"
X	echo "<dirent.h> found." >&4
Xelse
X	val="$undef"
X	if xinc=`./findhdr sys/dir.h`; $test "$xinc"; then
X		echo "<sys/dir.h> found." >&4
X		echo " "
X	else
X		xinc=`./findhdr sys/ndir.h`
X	fi
X	echo "<dirent.h> NOT found." >&4
Xfi
Xset i_dirent
Xeval $setvar
X
X: Look for type of directory structure.
Xecho " "
X$cppstdin $cppflags $cppminus < "$xinc" > try.c
X
Xcase "$direntrytype" in
X''|' ')
X	case "$i_dirent" in
X	$define) guess1='struct dirent' ;;
X	*) guess1='struct direct'  ;;
X	esac
X	;;
X*)	guess1="$direntrytype"
X	;;
Xesac
X
Xcase "$guess1" in
X'struct dirent') guess2='struct direct' ;;
X*) guess2='struct dirent' ;;
Xesac
X		
Xif $contains "$guess1" try.c >/dev/null 2>&1; then
X	direntrytype="$guess1"
X	echo "Your directory entries are $direntrytype." >&4
Xelif $contains "$guess2" try.c >/dev/null 2>&1; then
X	direntrytype="$guess2"
X	echo "Your directory entries seem to be $direntrytype." >&4
Xelse
X	echo "I don't recognize your system's directory entries." >&4
X	rp="What type is used for directory entries on this system?"
X	dflt="$guess1"
X	. ./myread
X	direntrytype="$ans"
Xfi
X$rm -f try.c
X
X
X: define an is-a-typedef? function
Xtypedef='type=$1; var=$2; def=$3; shift; shift; shift; inclist=$@;
Xcase "$inclist" in
X"") inclist="sys/types.h";;
Xesac;
Xeval "varval=\$$var";
Xcase "$varval" in
X"")
X	$rm -f temp.c;
X	for inc in $inclist; do
X		echo "#include <$inc>" >>temp.c;
X	done;
X	$cppstdin $cppflags $cppminus < temp.c >temp.E 2>/dev/null;
X	if $contains $type temp.E >/dev/null 2>&1; then
X		eval "$var=\$type";
X	else
X		eval "$var=\$def";
X	fi;
X	$rm -f temp.?;;
X*) eval "$var=\$varval";;
Xesac'
X
X: see what type gids are declared as in the kernel
Xset gid_t gidtype xxx stdio.h sys/types.h
Xeval $typedef
Xcase "$gidtype" in
Xxxx)
X	xxx=`./findhdr sys/user.h`
X	set `grep 'groups\[NGROUPS\];' "$xxx" 2>/dev/null` unsigned short
X	case $1 in
X	unsigned) dflt="$1 $2" ;;
X	*) dflt="$1" ;;
X	esac
X	;;
X*) dflt="$gidtype";;
Xesac
Xecho " "
Xrp="What is the type for group ids returned by getgid()?"
X. ./myread
Xgidtype="$ans"
X
X: locate a BSD compatible install program
Xecho " "
Xecho "Looking for a BSD-compatible install program..." >&4
Xcreatdir=''
Xcase "$install" in
X'')
X	tryit=''
X	for dir in $pth; do
X		for file in ginstall installbsd scoinst install; do
X			if $test -f $dir/$file; then
X				tryit="$tryit $dir/$file"
X			fi
X		done
X	done
X	$cat >try.c <<EOC
Xmain()
X{
X	printf("OK\n");
X	exit(0);
X}
XEOC
X	if $cc try.c -o try >/dev/null 2>&1; then
X		cp try try.ns
X		strip try >/dev/null 2>&1
X	else
X		echo "(I can't seem to compile a trivial C program -- bypassing.)"
X		echo "try" >try
X		cp try try.ns
X	fi
X	$cat >tryinst <<EOS
X$startsh
X$rm -rf foo d
X\$1 -d foo/bar
X$mkdir d
X\$1 -c -m 764 try.ns d
X\$1 -c -s -m 642 try.ns d/try
XEOS
X	chmod +x tryinst
X	$eunicefix tryinst
X	dflt=''
X	either=''
X	for prog in $tryit; do
X		$echo $n "Checking $prog... $c"
X		./tryinst $prog >/dev/null 2>&1
X		if $test -d foo/bar; then
X			creatdir="$prog -d"
X		fi
X		(ls -l d/try >try.ls; ls -l d/try.ns >tryno.ls) 2>/dev/null
X		if (cmp -s d/try try && cmp -s d/try.ns try.ns && \
X			$contains 'rwxrw-r--' tryno.ls && \
X			$contains 'rw-r---w-' try.ls) >/dev/null 2>&1
X		then
X			dflt="$prog"
X			echo "ok, that will do."
X			break
X		fi
X		echo "not good$either."
X		either=' either'
X		$rm -f try*.ls
X	done
X	$rm -rf foo d tryinst try try*.ls try.*
X	case "$dflt" in
X	'')
X		echo "Hopefully, $package comes with its own install script!"
X		dflt='./install'
X		;;
X	esac
X	;;
X*) dflt="$install";;
Xesac
X$cat <<EOM
X
XI will be requiring a BSD-compatible install program (one that allows
Xoptions like -s to strip executables or -m to specify a file mode) to
Xinstall $package.
X
XIf the question below contains a fully qualified default path, then it
Xis probably ok. If it is an unqualified name such as 'install', then it
Xmeans I was unable to find out a good install program I could use. If
Xyou know of one, please tell me about it. If the default is './install',
Xthen I shall be using the install script supplied with $package.
X
XEOM
Xfn='/fe~(install,./install)'
Xrp='Which install program shall I use?'
X. ./getfile
Xinstall="$ans"
X
X: how can we create nested directories?
Xecho " "
Xecho "Ok, let's see how we can create nested directories..." >&4
Xcase "$installdir" in
X'')
X	case "$creatdir" in
X	'')
X		$mkdir -p foo/bar >/dev/null 2>&1
X		if $test -d foo/bar; then
X			echo "Great, we can build them using 'mkdir -p'."
X			creatdir='mkdir -p'
X		elif eval "$install -d foo/bar"; $test -d foo/bar; then
X			creatdir="install -d"
X			echo "It looks like '$creatdir' will do it for us."
X		fi
X		;;
X	*)
X		eval "$creatdir foo/bar" >/dev/null 2>&1
X		if $test -d foo/bar; then
X			echo "Ah! We can use '$creatdir' to do just that."
X		fi
X		;;
X	esac
X	$rm -rf foo
X	case "$creatdir" in
X	'')
X		echo "Heck! Another ancient system lacking the comfort of modern ones!"
X		echo "You can thank $package for bringing you its own install script!"
X		installdir='./install -d'
X		;;
X	*) installdir="$creatdir";;
X	esac
X	;;
X*) echo "As you already told me, '$installdir' should work.";;
Xesac
X
X: find out how to generate dependencies
Xecho " "
Xecho "Checking how to generate makefile dependencies on your machine..." >&4
Xtoplev=`cd ..;pwd`
X$cat >dep.c <<'EOCP'
X#include "dep.h"
XEOCP
X$cat >dep.h <<'EOCP'
X
XEOCP
Xtakeflags='flags=""
Xcase "$@" in
X*--*)
X	for arg
X	do
X		shift
X		case "$arg" in
X		--) break;;
X		*) flags="$flags $arg";;
X		esac
X	done;;
Xesac'
Xcase "$mkdep" in
X'')
X	;;
X*)
X	if test -x "$mkdep" &&
X		$mkdep dep.c >dep.out 2>/dev/null &&
X		$contains "dep$_o:.*dep\.h" dep.out >/dev/null 2>&1
X	then
X		echo "$mkdep works."
X	else
X		mkdep=
X	fi
Xesac
X
Xcase "$mkdep" in
X'')
X	$spitshell > ../mkdep <<EOM
X$startsh
X$takeflags
Xfor srcfile
Xdo
X	$cpp -M -I. $cppflags \$flags \$srcfile 2>/dev/null
Xdone
Xexit 0
XEOM
X	mkdep=$toplev/mkdep
X	chmod +x $mkdep
X	$eunicefix $mkdep
X	if $mkdep dep.c >dep.out 2>/dev/null &&
X		$contains "dep$_o:.*dep\.h" dep.out >/dev/null 2>&1
X	then
X		echo "Looks like we can use $cpp -M."
X	else
X		mkdep=
X	fi
X	;;
Xesac
X
Xcase "$mkdep" in
X'')
X	$spitshell > ../mkdep <<EOM
X$startsh
X$takeflags
Xfor srcfile
Xdo
X	$cc -MM -I. $cppflags \$flags \$srcfile 2>/dev/null
Xdone
Xexit 0
XEOM
X	mkdep=$toplev/mkdep
X	chmod +x $mkdep
X	if $mkdep dep.c >dep.out 2>/dev/null &&
X		$contains "dep$_o: dep.h" dep.out >/dev/null 2>&1
X	then
X		echo "Looks like we can use $cc -MM."
X	else
X		mkdep=
X	fi
X	;;
Xesac
X
Xcase "$mkdep" in
X'')
X	$spitshell > ../mkdep <<EOM
X$startsh
X$takeflags
Xfor srcfile
Xdo
X	$cc -M -I. $cppflags \$flags \$srcfile 2>/dev/null
X	ufile=\`basename \$srcfile .c\`.u
X	grep -v /usr/include \$ufile
X	rm -f \$ufile
Xdone
Xexit 0
XEOM
X	mkdep=$toplev/mkdep
X	chmod +x $mkdep
X	if $mkdep dep.c >dep.out 2>/dev/null &&
X		$contains "dep$_o: dep.h" dep.out >/dev/null 2>&1
X	then
X		echo "Looks like we can use $cc -M."
X	else
X		mkdep=
X	fi
X	;;
Xesac
X
Xcase "$mkdep" in
X'')
X	$spitshell >../mkdep <<EOS
X$startsh
X$takeflags
Xfor srcfile
Xdo
X	case "\$srcfile" in
X	*.c) c='.c';;
X	*.y) c='.y';;
X	*.l) c='.l';;
X	esac
X	filebase=\`basename \$srcfile \$c\`
X	<\$srcfile $cpp $cppminus $cppflags -I. \$flags 2>/dev/null | \\
X	$sed -e '/^# *[0-9]/!d' \\
X		-e 's/^.*"\(.*\)".*\$/'\$filebase'$_o: \1/' \\
X		-e 's|: \./|: |' \\
X		-e 's|: *$|: '\$srcfile'|' | \\
X	$grep -v '^#' | $sort | $uniq
Xdone
Xexit 0
XEOS
X	mkdep=$toplev/mkdep
X	chmod +x $mkdep
X	$eunicefix $mkdep
X	if $mkdep dep.c >dep.out 2>/dev/null &&
X		$contains "dep$_o:.*dep\.h" dep.out >/dev/null 2>&1
X	then
X		echo "A shell script using $cpp does the trick."
X	else
X		echo "$cpp doesn't seem to be any use at all."
X		$spitshell >../mkdep <<EOS
X$startsh
X$takeflags
Xfiles="\$@"
Xset X \$flags
Xshift
Xinc='.'
Xwhile test \$# -gt 0
Xdo
X	case "\$1" in
X	-I) 
X		shift
X		inc="\$inc:\$1"
X		;;
X	-I*)
X		dir=\`echo \$1 | sed -e 's/^-I//'\`
X		inc="\$inc:\$dir"
X		;;
X	esac
X	shift
Xdone
Xset X \$files
Xshift
Xtrap "$rm -f /tmp/mkdep\$\$; exit 1" 1 2 3 15
Xfor srcfile
Xdo
X	case "\$srcfile" in
X	*.c) c='.c';;
X	*.y) c='.y';;
X	*.l) c='.l';;
X	esac
X	filebase=\`basename \$srcfile \$c\`
X	echo \$filebase$_o: \$srcfile
X	$grep '^#[  ]*include' \$srcfile /dev/null | \
X	$sed -n -e 's/#[   ]*include[  ]*//' \\
X		-e '/<\(.*\)>/ d' \\
X		-e 's/:[^"]*"\([^"]*\)".*/: \1/' \\
X		-e "s/\\.c:/$_o:/p" > /tmp/mkdep\$\$
X	IFS=': '
X	while read file dep; do
X		for dir in \$inc; do
X			if $test -f "\$dir/\$dep"; then
X				dep="\$dir/\$dep"
X				break
X			fi
X		done
X		echo "\$file: \$dep" | $sed -e 's,: \./,: ,'
X	done </tmp/mkdep\$\$
X	IFS=' '
X	$rm -f /tmp/mkdep\$\$
Xdone
Xexit 0
XEOS
X		mkdep=$toplev/mkdep
X		chmod +x $mkdep
X		$eunicefix $mkdep
X		if $mkdep dep.c >dep.out 2>/dev/null &&
X			$contains "dep$_o:.*dep\.h" dep.out >/dev/null 2>&1
X		then
X			cat << EOM
X
XI can use a script with grep instead, but it will make some incorrect
Xdependencies, since it doesn't understand about conditional compilation.
XMoreover, some dependencies may be missing, because scanning won't be
Xa recursive process.
XIf you have a program which generates makefile dependencies, you may want
Xto use it.  If not, you can use the script and edit the Makefile by hand
Xif you need to.
XEOM
X		else
X			mkdep=
X			cat << EOM
X
XI can't seem to generate makefile dependencies at all!  Perhaps you have a
Xprogram that does?  If you don't, you might look at the mkdep script to
Xsee if you can create one which works.
XEOM
X		fi
X	fi
Xesac
Xdflt="$mkdep"
Xfn=f~/
Xrp="Name of program to make makefile dependencies?"
X. ./getfile
Xmkdep="$ans"
X$rm -f dep.c dep.h dep$_o dep.out
X
Xset clnt_sperrno p_clnt_sperrno
Xeval "$inlibc"
X
Xset fgetpwent p_fgetpwent
Xeval "$inlibc"
X
Xif test $p_fgetpwent = $define; then
X	echo ' ' >&4
X	echo $n 'Checking if fgetpwent ignores NIS stubs ... ' $c >&4
X	echo "+one::0:0:::/bin/csh" > fgptest-passwd
X	cat > fgptest.c <<"EOF"
X#include <sys/types.h>
X#include <stdio.h>
X#include <pwd.h>
Xmain()
X{
X        FILE    *f = fopen("fgptest-passwd", "r");
X        struct passwd *pwp;
X        while (pwp = fgetpwent(f)) {
X		if (*pwp->pw_name == '+') exit(0);
X	}
X	exit(1);
X}
XEOF
X	$cc fgptest.c -o fgptest
X	if ./fgptest;  then
X		echo 'nope (good)' >&4
X	else
X		echo 'yep - we wont use it.' >&4
X		p_fgetpwent=$undef
X	fi
X	$rm -f fgptest.c fgptest fgptest-passwd
Xfi
X
Xset getusershell p_getusershell
Xeval "$inlibc"
X
Xset lckpwdf p_lckpwdf
Xeval "$inlibc"
X
Xset putpwent p_putpwent
Xeval "$inlibc"
X
X: see if sigprocmask exists
Xecho " "
Xif set sigprocmask val -f p_sigposix; eval "$csym"; $val; then
X        echo 'POSIX signal routines found.' >&4
X        p_sigposix="$define"
Xelse
X        echo 'No POSIX signal routines.' >&4
X        p_sigposix="$undef"
Xfi
X
Xset sysinfo p_sysinfo
Xeval "$inlibc"
X
X: see if tcgetattr exists
Xecho " "
Xif set tcgetattr val -f p_ttyposix; eval "$csym"; $val; then
X        echo 'POSIX tty routines found.' >&4
X        p_ttyposix="$define"
Xelse
X        echo 'No POSIX tty routines.' >&4
X        p_ttyposix="$undef"
Xfi
X
X: 
Xecho " "
Xp_rpclib=`./loc librpcsvc$_a "" $libpth`
Xif $test -n "$p_rpclib"; then
X	echo 'Found -lrpcsvc.' >&4
X	p_rpclib="-lrpcsvc"
Xfi
Xif $test -z "$p_rpclib"; then
X	p_rpclib=`./loc librpcsvc.$so "" $libpth`
X	if $test -n "$p_rpclib"; then
X		echo 'Found -lrpcsvc (shared).' >&4
X		p_rpclib="-lrpcsvc"
X	fi
Xfi
Xif $test -z "$p_rpclib"; then
X	p_rpclib=`./loc librpcsvc.$so.[0-9]'*' "" $libpth`
X	if $test -n "$p_rpclib"; then
X		echo 'Found -lrpcsvc (shared).' >&4
X		p_rpclib="-lrpcsvc"
X	fi
Xfi
X
Xp_xdr_passwd=''
X:
X: Look for xdr_passwd in libc
X:
Xif set xdr_passwd val -f p_xdr_passwd; eval "$csym"; $val; then
X	echo 'xdr_passwd() found.' >&4
X	p_xdr_passwd="$define"
X	p_rpclib=''
Xfi
Xif $test -z "$p_xdr_passwd"; then
X	:
X	: Look in librpcsvc
X	:
X	echo 'extern int xdr_passwd(); main(){int (*f)()=xdr_passwd;exit(0);}' > pwxdr.c
X	if $cc pwxdr.c -o pwxdr $p_rpclib $libs >/dev/null 2>&1; then
X		p_xdr_passwd="$define"
X		echo 'xdr_passwd() found.' >&4
X	fi
Xfi
X
Xif $test -z "$p_xdr_passwd"; then
X	echo 'xdr_passwd() not found - will use internal version.' >&4
X	p_xdr_passwd="$undef"
X	:
X	: Look for xdr_uid_t in librpcsvc
X	:
X	p_xdr_uid="$undef"
X	echo 'extern int xdr_uid_t(); main(){int (*f)()=xdr_uid_t;exit(0);}' > pwxdr.c
X	if $cc pwxdr.c -o pwxdr $p_rpclib $libs >/dev/null 2>&1; then
X		p_xdr_uid="$define"
X		echo 'xdr_uid_t() found.' >&4
X	fi
Xfi
X: Add the RPC library to 'libs' if needed
X$test -n "$p_rpclib" && libs="$libs $p_rpclib"
X
X:
X: Now look for the xencrypt routine
X:
Xp_xencrypt="$undef"
Xif $test "$p_secure_rpc" = "$define"; then
X	echo 'This system supports Secure RPC - looking for xencrypt()' >&4
X	if set xencrypt val -f p_xencrypt; eval "$csym"; $val; then
X		echo 'xencrypt() found.' >&4
X		p_xencrypt="$define"
X	else
X		echo 'extern int xencrypt(); main(){printf("%d",xencrypt);exit(0);}' > pwxdr.c
X		if $cc pwxdr.c -o pwxdr $p_rpclib $libs >/dev/null 2>&1; then
X			echo 'xencrypt() found.' >&4
X			p_xencrypt="$define"
X		else
X			cat <<EOF >&4
Xxencrypt() not found.
X
X*****
X*****	The SunOS encryption kit is not installed.
X*****	Secure RPC support is being disabled.
X*****
X*****	Re-run Configure after installing the encryption kit to
X*****	enable Secure RPC support.
X*****
XEOF
X			p_secure_rpc="$undef"
X		fi
X	fi
Xfi
Xif $test "$p_nisplus" = "$define"; then
X	echo '' >&4
X	echo 'This system supports NIS+ - looking for xencrypt()' >&4
X	if set xencrypt val -f p_xencrypt; eval "$csym"; $val; then
X		p_xencrypt="$define"
X	else
X		cat <<EOF >&4
X*****
X*****	xencrypt() not found in libnsl
X*****
X*****	It is not possible to update NIS+ credentials without
X*****	this routine.  Complain to Sun about taking this routine
X*****	out of libnsl in Solaris 2.5 and not providing a replacement API.
X*****
X*****	Re-run Configure and disable NIS+ support.
X*****	Aborting.
X*****
XEOF
X		exit 1
X	fi
Xfi
X
X$rm -f pwxdr pwxdr.c
X
X: Cruising for prototypes
Xecho " "
Xecho "Checking out function prototypes..." >&4
X$cat >prototype.c <<'EOCP'
Xmain(int argc, char *argv[]) {
X	exit(0);}
XEOCP
Xif $cc $ccflags -c prototype.c >prototype.out 2>&1 ; then
X	echo "Your C compiler appears to support function prototypes."
X	val="$define"
Xelse
X	echo "Your C compiler doesn't seem to understand function prototypes."
X	val="$undef"
Xfi
Xset prototype
Xeval $setvar
X$rm -f prototype*
X
X: see if signal is declared as pointer to function returning int or void
Xecho " "
Xxxx=`./findhdr signal.h`
X$test "$xxx" && $cppstdin $cppminus $cppflags < $xxx >$$.tmp 2>/dev/null
Xif $contains 'int.*\*[ 	]*signal' $$.tmp >/dev/null 2>&1 ; then
X	echo "You have int (*signal())() instead of void." >&4
X	val="$undef"
Xelif $contains 'void.*\*[ 	]*signal' $$.tmp >/dev/null 2>&1 ; then
X	echo "You have void (*signal())() instead of int." >&4
X	val="$define"
Xelif $contains 'extern[ 	]*[(\*]*signal' $$.tmp >/dev/null 2>&1 ; then
X	echo "You have int (*signal())() instead of void." >&4
X	val="$undef"
Xelse
X	case "$d_voidsig" in
X	'')
X	echo "I can't determine whether signal handler returns void or int..." >&4
X		dflt=void
X		rp="What type does your signal handler return?"
X		. ./myread
X		case "$ans" in
X		v*) val="$define";;
X		*) val="$undef";;
X		esac;;
X	"$define")
X		echo "As you already told me, signal handler returns void." >&4;;
X	*)
X		echo "As you already told me, signal handler returns int." >&4;;
X	esac
Xfi
Xset d_voidsig
Xeval $setvar
Xcase "$d_voidsig" in
X"$define") signal_t="void";;
X*) signal_t="int";;
Xesac
X$rm -f $$.tmp
X
X:
Xecho " "
Xcase "`$passcat | grep nobody | $awk 'BEGIN { FS=":" } { print $3 }'`" in 
X	-*)	uidsigned="$define"
X		echo "It looks like uids are signed on this system." >& 4
X		;;
X	*)	uidsigned="$undef"
X		;;
Xesac
X
X: see what type uids are declared as in the kernel
Xset uid_t uidtype xxx stdio.h sys/types.h
Xeval $typedef
Xcase "$uidtype" in
Xxxx)
X	xxx=`./findhdr sys/user.h`
X	set `grep '_ruid;' "$xxx" 2>/dev/null` unsigned short
X	case $1 in
X	unsigned) dflt="$1 $2" ;;
X	*) dflt="$1" ;;
X	esac
X	;;
X*) dflt="$uidtype";;
Xesac
Xecho " "
Xrp="What is the type for user ids returned by getuid()?"
X. ./myread
Xuidtype="$ans"
X
X: check for void type
Xecho " "
Xecho "Checking to see how well your C compiler groks the void type..." >&4
Xecho " "
X$cat >&4 <<EOM
X  Support flag bits are:
X    1: basic void declarations.
X    2: arrays of pointers to functions returning void.
X    4: operations between pointers to and addresses of void functions.
X    8: generic void pointers.
XEOM
Xecho " "
Xcase "$voidflags" in
X'')
X	$cat >try.c <<'EOCP'
X#if TRY & 1
Xvoid sub() {
X#else
Xsub() {
X#endif
X	extern void moo();	/* function returning void */
X	void (*goo)();		/* ptr to func returning void */
X#if TRY & 8
X	void *hue;		/* generic ptr */
X#endif
X#if TRY & 2
X	void (*foo[10])();
X#endif
X
X#if TRY & 4
X	if(goo == moo) {
X		exit(0);
X	}
X#endif
X	exit(0);
X}
Xmain() { sub(); }
XEOCP
X	if $cc $ccflags -c -DTRY=$defvoidused try.c >.out 2>&1 ; then
X		voidflags=$defvoidused
X	echo "It appears to support void to the level $package wants ($defvoidused)."
X		if $contains warning .out >/dev/null 2>&1; then
X			echo "However, you might get some warnings that look like this:"
X			$cat .out
X		fi
X	else
Xecho "Hmm, your compiler has some difficulty with void. Checking further..." >&4
X		if $cc $ccflags -c -DTRY=1 try.c >/dev/null 2>&1; then
X			echo "It supports 1..."
X			if $cc $ccflags -c -DTRY=3 try.c >/dev/null 2>&1; then
X				echo "It also supports 2..."
X				if $cc $ccflags -c -DTRY=7 try.c >/dev/null 2>&1; then
X					voidflags=7
X					echo "And it supports 4 but not 8 definitely."
X				else
X					echo "It doesn't support 4..."
X					if $cc $ccflags -c -DTRY=11 try.c >/dev/null 2>&1; then
X						voidflags=11
X						echo "But it supports 8."
X					else
X						voidflags=3
X						echo "Neither does it support 8."
X					fi
X				fi
X			else
X				echo "It does not support 2..."
X				if $cc $ccflags -c -DTRY=13 try.c >/dev/null 2>&1; then
X					voidflags=13
X					echo "But it supports 4 and 8."
X				else
X					if $cc $ccflags -c -DTRY=5 try.c >/dev/null 2>&1; then
X						voidflags=5
X						echo "And it supports 4 but has not heard about 8."
X					else
X						echo "However it supports 8 but not 4."
X					fi
X				fi
X			fi
X		else
X			echo "There is no support at all for void."
X			voidflags=0
X		fi
X	fi
Xesac
Xcase "$voidflags" in
X"$defvoidused") ;;
X*)
X	dflt="$voidflags";
X	rp="Your void support flags add up to what?"
X	. ./myread
X	voidflags="$ans"
X	;;
Xesac
X$rm -f try.* .out
X
X: see if dbm.h is available
X: see if dbmclose exists
Xset dbmclose d_dbmclose
Xeval $inlibc
X
Xcase "$d_dbmclose" in
X$define)
X	set dbm.h i_dbm
X	eval $inhdr
X	case "$i_dbm" in
X	$define)
X		val="$undef"
X		set i_rpcsvcdbm
X		eval $setvar
X		;;
X	*)	set rpcsvc/dbm.h i_rpcsvcdbm
X		eval $inhdr
X		;;
X	esac
X	;;
X*)	echo "We won't be including <dbm.h>"
X	val="$undef"
X	set i_dbm
X	eval $setvar
X	val="$undef"
X	set i_rpcsvcdbm
X	eval $setvar
X	;;
Xesac
X
X: see if memory.h is available.
Xval=''
Xset memory.h val
Xeval $inhdr
X
X: See if it conflicts with string.h
Xcase "$val" in
X$define)
X	case "$strings" in
X	'') ;;
X	*)
X		$cppstdin $cppflags $cppminus < $strings > mem.h
X		if $contains 'memcpy' mem.h >/dev/null 2>&1; then
X			echo " "
X			echo "We won't be including <memory.h>."
X			val="$undef"
X		fi
X		$rm -f mem.h
X		;;
X	esac
Xesac
Xset i_memory
Xeval $setvar
X
X: see if ndbm.h is available
Xset ndbm.h t_ndbm
Xeval $inhdr
Xcase "$t_ndbm" in
X$define)
X	: see if dbm_open exists
X	set dbm_open d_dbm_open
X	eval $inlibc
X	case "$d_dbm_open" in
X	$undef)
X		t_ndbm="$undef"
X		echo "We won't be including <ndbm.h>"
X		;;
X	esac
X	;;
Xesac
Xval="$t_ndbm"
Xset i_ndbm
Xeval $setvar
X
X: get C preprocessor symbols handy
Xecho " "
X$echo $n "Hmm... $c"
Xecho $al | $tr ' ' '\012' >Cppsym.know
X$cat <<EOSS >Cppsym
X$startsh
Xcase "\$1" in
X-l) list=true
X	shift
X	;;
Xesac
Xunknown=''
Xcase "\$list\$#" in
X1|2)
X	for sym do
X		if $contains "^\$1$" Cppsym.true >/dev/null 2>&1; then
X			exit 0
X		elif $contains "^\$1$" Cppsym.know >/dev/null 2>&1; then
X			:
X		else
X			unknown="\$unknown \$sym"
X		fi
X	done
X	set X \$unknown
X	shift
X	;;
Xesac
Xcase \$# in
X0) exit 1;;
Xesac
Xecho \$* | $tr ' ' '\012' | $sed -e 's/\(.*\)/\\
X#ifdef \1\\
Xexit 0; _ _ _ _\1\\	 \1\\
X#endif\\
X/' >Cppsym\$\$
Xecho "exit 1; _ _ _" >>Cppsym\$\$
X$cppstdin $cppminus <Cppsym\$\$ | $grep '^exit [01]; _ _'  >Cppsym2\$\$
Xcase "\$list" in
Xtrue) $awk 'NF > 5 {print substr(\$6,2,100)}' <Cppsym2\$\$ ;;
X*)
X	sh Cppsym2\$\$
X	status=\$?
X	;;
Xesac
X$rm -f Cppsym\$\$ Cppsym2\$\$
Xexit \$status
XEOSS
Xchmod +x Cppsym
X$eunicefix Cppsym
X./Cppsym -l $al | $sort | $grep -v '^$' >Cppsym.true
X
X: now check the C compiler for additional symbols
X$cat >ccsym <<EOS
X$startsh
X$cat >tmp.c <<EOF
Xextern int foo;
XEOF
Xfor i in \`$cc -v -c tmp.c 2>&1\`
Xdo
X	case "\$i" in
X	-D*) echo "\$i" | $sed 's/^-D//';;
X	-A*) $test "$gccversion" && echo "\$i" | $sed 's/^-A\(.*\)(\(.*\))/\1=\2/';;
X	esac
Xdone
X$rm -f try.c
XEOS
Xchmod +x ccsym
X$eunicefix ccsym
X./ccsym | $sort | $uniq >ccsym.raw
X$awk '/\=/ { print $0; next }
X	{ print $0"=1" }' ccsym.raw >ccsym.list
X$awk '{ print $0"=1" }' Cppsym.true >ccsym.true
X$comm -13 ccsym.true ccsym.list >ccsym.own
X$comm -12 ccsym.true ccsym.list >ccsym.com
X$comm -23 ccsym.true ccsym.list >ccsym.cpp
Xalso=''
Xsymbols='symbols'
Xif $test -z ccsym.raw; then
X	echo "Your C compiler doesn't seem to define any symbol!" >&4
X	echo " "
X	echo "However, your C preprocessor defines the following ones:"
X	$cat Cppsym.true
Xelse
X	if $test -s ccsym.com; then
X		echo "Your C compiler and pre-processor define these symbols:"
X		$sed -e 's/\(.*\)=.*/\1/' ccsym.com
X		also='also '
X		symbols='ones'
X		$test "$silent" || sleep 1
X	fi
X	if $test -s ccsym.cpp; then
X		$test "$also" && echo " "
X		echo "Your C pre-processor ${also}defines the following $symbols:"
X		$sed -e 's/\(.*\)=.*/\1/' ccsym.cpp
X		also='further '
X		$test "$silent" || sleep 1
X	fi
X	if $test -s ccsym.own; then
X		$test "$also" && echo " "
X		echo "Your C compiler ${also}defines the following cpp variables:"
X		$sed -e 's/\(.*\)=1/\1/' ccsym.own
X		$sed -e 's/\(.*\)=.*/\1/' ccsym.own | $uniq >>Cppsym.true
X		$test "$silent" || sleep 1
X	fi
Xfi
X$rm -f ccsym*
X
X: see if this is a termio system
Xval="$undef"
Xval2="$undef"
Xval3="$undef"
Xif $test `./findhdr termios.h`; then
X	set tcsetattr i_termios
X	eval $inlibc
X	val3="$i_termios"
Xfi
Xecho " "
Xcase "$val3" in
X"$define") echo "You have POSIX termios.h... good!" >&4;;
X*) if ./Cppsym pyr; then
X		case "`/bin/universe`" in
X		ucb) if $test `./findhdr sgtty.h`; then
X				val2="$define"
X				echo "<sgtty.h> found." >&4
X			else
X				echo "System is pyramid with BSD universe."
X				echo "<sgtty.h> not found--you could have problems." >&4
X			fi;;
X		*) if $test `./findhdr termio.h`; then
X				val="$define"
X				echo "<termio.h> found." >&4
X			else
X				echo "System is pyramid with USG universe."
X				echo "<termio.h> not found--you could have problems." >&4
X			fi;;
X		esac
X	elif ./usg; then
X		if $test `./findhdr termio.h`; then
X			echo "<termio.h> found." >&4
X			val="$define"
X		elif $test `./findhdr sgtty.h`; then
X			echo "<sgtty.h> found." >&4
X			val2="$define"
X		else
Xecho "Neither <termio.h> nor <sgtty.h> found--you could have problems." >&4
X		fi
X	else
X		if $test `./findhdr sgtty.h`; then
X			echo "<sgtty.h> found." >&4
X			val2="$define"
X		elif $test `./findhdr termio.h`; then
X			echo "<termio.h> found." >&4
X			val="$define"
X		else
Xecho "Neither <sgtty.h> nor <termio.h> found--you could have problems." >&4
X		fi
X	fi;;
Xesac
Xset i_termio; eval $setvar
Xval=$val2; set i_sgtty; eval $setvar
Xval=$val3; set i_termios; eval $setvar
X
X: see if stdlib is available
Xset stdlib.h i_stdlib
Xeval $inhdr
X
X: see if this is a sys/param system
Xset sys/param.h i_sysparam
Xeval $inhdr
X
X: see if sys/resource.h has to be included
Xset sys/resource.h i_sysresrc
Xeval $inhdr
X
X: see if we should include time.h, sys/time.h, or both
Xecho " "
Xecho "Testing to see if we should include <time.h>, <sys/time.h> or both." >&4
X$echo $n "I'm now running the test program...$c"
X$cat >try.c <<'EOCP'
X#include <sys/types.h>
X#ifdef I_TIME
X#include <time.h>
X#endif
X#ifdef I_SYSTIME
X#ifdef SYSTIMEKERNEL
X#define KERNEL
X#endif
X#include <sys/time.h>
X#endif
X#ifdef I_SYSSELECT
X#include <sys/select.h>
X#endif
Xmain()
X{
X	struct tm foo;
X#ifdef S_TIMEVAL
X	struct timeval bar;
X#endif
X#ifdef S_TIMEZONE
X	struct timezone tzp;
X#endif
X	if (foo.tm_sec == foo.tm_sec)
X		exit(0);
X#ifdef S_TIMEVAL
X	if (bar.tv_sec == bar.tv_sec)
X		exit(0);
X#endif
X	exit(1);
X}
XEOCP
Xflags=''
Xs_timezone=''
Xsysselect=''
Xfor s_timeval in '-DS_TIMEVAL' ''; do
Xfor i_systimek in '' '-DSYSTIMEKERNEL'; do
Xfor i_time in '' '-DI_TIME'; do
Xfor i_systime in '-DI_SYSTIME' ''; do
X	case "$flags" in
X	'') $echo $n ".$c"
X		if $cc $ccflags \
X		$i_time $i_systime $i_systimek $sysselect $s_timeval $s_timezone \
X		try.c -o try >/dev/null 2>&1 ; then
X			set X $i_time $i_systime $i_systimek $sysselect $s_timeval
X			shift
X			flags="$*"
X			echo " "
X			$echo $n "Succeeded with $flags$c"
X		fi
X		;;
X	esac
Xdone
Xdone
Xdone
Xdone
Xtimeincl=''
Xecho " "
Xcase "$flags" in
X*SYSTIMEKERNEL*) i_systimek="$define"
X	timeincl=`./findhdr sys/time.h`
X	echo "We'll include <sys/time.h> with KERNEL defined." >&4;;
X*) i_systimek="$undef";;
Xesac
Xcase "$flags" in
X*I_TIME*) i_time="$define"
X	timeincl=`./findhdr time.h`" $timeincl"
X	echo "We'll include <time.h>." >&4;;
X*) i_time="$undef";;
Xesac
Xcase "$flags" in
X*I_SYSTIME*) i_systime="$define"
X	timeincl=`./findhdr sys/time.h`" $timeincl"
X	echo "We'll include <sys/time.h>." >&4;;
X*) i_systime="$undef";;
Xesac
X$rm -f try.c try
X
X: see if this is a unistd.h system
Xset unistd.h i_unistd
Xeval $inhdr
X
X: see if stdarg is available
Xecho " "
Xif $test `./findhdr stdarg.h`; then
X	echo "<stdarg.h> found." >&4
X	valstd="$define"
Xelse
X	echo "<stdarg.h> NOT found." >&4
X	valstd="$undef"
Xfi
X
X: see if varags is available
Xecho " "
Xif $test `./findhdr varargs.h`; then
X	echo "<varargs.h> found." >&4
Xelse
X	echo "<varargs.h> NOT found, but that's ok (I hope)." >&4
Xfi
X
X: set up the varargs testing programs
X$cat > varargs.c <<EOP
X#ifdef I_STDARG
X#include <stdarg.h>
X#endif
X#ifdef I_VARARGS
X#include <varargs.h>
X#endif
X
X#ifdef I_STDARG
Xint f(char *p, ...)
X#else
Xint f(va_alist)
Xva_dcl
X#endif
X{
X	va_list ap;
X#ifndef I_STDARG
X	char *p;
X#endif
X#ifdef I_STDARG
X	va_start(ap,p);
X#else
X	va_start(ap);
X	p = va_arg(ap, char *);
X#endif
X	va_end(ap);
X}
XEOP
X$cat > varargs <<EOP
X$startsh
Xif $cc -c $ccflags -D\$1 varargs.c >/dev/null 2>&1; then
X	echo "true"
Xelse
X	echo "false"
Xfi
X$rm -f varargs$_o
XEOP
Xchmod +x varargs
X
X: now check which varargs header should be included
Xecho " "
Xi_varhdr=''
Xcase "$valstd" in
X"$define")
X	if `./varargs I_STDARG`; then
X		val='stdarg.h'
X	elif `./varargs I_VARARGS`; then
X		val='varargs.h'
X	fi
X	;;
X*)
X	if `./varargs I_VARARGS`; then
X		val='varargs.h'
X	fi
X	;;
Xesac
Xcase "$val" in
X'')
Xecho "I could not find the definition for va_dcl... You have problems..." >&4
X	val="$undef"; set i_stdarg; eval $setvar
X	val="$undef"; set i_varargs; eval $setvar
X	;;
X*) 
X	set i_varhdr
X	eval $setvar
X	case "$i_varhdr" in
X	stdarg.h)
X		val="$define"; set i_stdarg; eval $setvar
X		val="$undef"; set i_varargs; eval $setvar
X		;;
X	varargs.h)
X		val="$undef"; set i_stdarg; eval $setvar
X		val="$define"; set i_varargs; eval $setvar
X		;;
X	esac
X	echo "We'll include <$i_varhdr> to get va_dcl definition." >&4;;
Xesac
X$rm -f varargs*
X
X
Xcase "${p_osName}_${p_osRev}" in
X	aix_4*)	
X		echo ' '
X		echo 'CONSULT README.AIX4 before installing' >&4
X		echo ' '
X		;;
Xesac
X
Xcat <<EOF
X
X---------------------------------------------------
X         Summary of program options
X---------------------------------------------------
X
XSystem passwd programs: $p_sysprogs
XSystem program save directory: $p_keepdir
XDictionary directory: $p_dictionaries
XHistory database: $p_history
XHistory database gid: $p_histgid
XShadow module: $p_shadow
X
XEOF
X$test "$p_nis" = $define && \
X	echo NIS support enabled
X$test "$p_nisplus" = $define && \
X	echo NIS+ support enabled
X$test "$p_osf1auth" = $define && \
X	echo Digital UNIX auth support enabled
X$test "$p_hpuxauth" = $define && \
X	echo HP-UX auth support enabled
X$test "$o_paranoid" = $define && \
X	echo Paranoid user check enabled
X$test "$p_replace" = $define &&\
X	 echo Will save system programs and replace with $package
X
X: back to where it started
Xif test -d ../UU; then
X	cd ..
Xfi
X
X: configuration may be patched via a 'config.over' file
Xif $test -f config.over; then
X	echo " "
X	dflt=y
X	rp='I see a config.over file.  Do you wish to load it?'
X	. UU/myread
X	case "$ans" in
X	n*) echo "OK, I'll ignore it.";;
X	*)	. ./config.over
X		echo "Configuration override changes have been loaded."
X		;;
X	esac
Xfi
X
X: in case they want portability, strip down executable paths
Xcase "$d_portable" in
X"$define")
X	echo " "
X	echo "Stripping down executable paths..." >&4
X	for file in $loclist $trylist; do
X		eval $file="\$file"
X	done
X	;;
Xesac
X
X: create config.sh file
Xecho " "
Xecho "Creating config.sh..." >&4
X$spitshell <<EOT >config.sh
X$startsh
X#
X# This file was produced by running the Configure script. It holds all the
X# definitions figured out by Configure. Should you modify one of these values,
X# do not forget to propagate your changes by running "Configure -der". You may
X# instead choose to run each of the .SH files by yourself, or "Configure -S".
X#
X
X# Package name      : $package
X# Source directory  : $src
X# Configuration time: $cf_time
X# Configured by     : $cf_by
X# Target system     : $myuname
X
XAuthor='$Author'
XDate='$Date'
XHeader='$Header'
XId='$Id'
XLocker='$Locker'
XLog='$Log'
XMcc='$Mcc'
XRCSfile='$RCSfile'
XRevision='$Revision'
XSource='$Source'
XState='$State'
Xafs='$afs'
Xaphostname='$aphostname'
Xar='$ar'
Xarchobjs='$archobjs'
Xawk='$awk'
Xbaserev='$baserev'
Xbash='$bash'
Xbison='$bison'
Xbyacc='$byacc'
Xc='$c'
Xcat='$cat'
Xcc='$cc'
Xcc_dbflags='$cc_dbflags'
Xcc_osflags='$cc_osflags'
Xccflags='$ccflags'
Xcf_by='$cf_by'
Xcf_time='$cf_time'
Xchgrp='$chgrp'
Xchmod='$chmod'
Xchown='$chown'
Xcomm='$comm'
Xcompress='$compress'
Xcontains='$contains'
Xcp='$cp'
Xcpio='$cpio'
Xcpp='$cpp'
Xcppflags='$cppflags'
Xcpplast='$cpplast'
Xcppminus='$cppminus'
Xcpprun='$cpprun'
Xcppstdin='$cppstdin'
Xcsh='$csh'
Xd_bcopy='$d_bcopy'
Xd_bsd='$d_bsd'
Xd_bzero='$d_bzero'
Xd_const='$d_const'
Xd_dirnamlen='$d_dirnamlen'
Xd_eunice='$d_eunice'
Xd_fchmod='$d_fchmod'
Xd_fchown='$d_fchown'
Xd_gethname='$d_gethname'
Xd_gnulibc='$d_gnulibc'
Xd_index='$d_index'
Xd_memcpy='$d_memcpy'
Xd_memset='$d_memset'
Xd_open3='$d_open3'
Xd_phostname='$d_phostname'
Xd_portable='$d_portable'
Xd_pwage='$d_pwage'
Xd_pwchange='$d_pwchange'
Xd_pwclass='$d_pwclass'
Xd_pwcomment='$d_pwcomment'
Xd_pwexpire='$d_pwexpire'
Xd_pwquota='$d_pwquota'
Xd_readdir='$d_readdir'
Xd_rename='$d_rename'
Xd_rewinddir='$d_rewinddir'
Xd_seekdir='$d_seekdir'
Xd_sigblock='$d_sigblock'
Xd_strccmp='$d_strccmp'
Xd_strchr='$d_strchr'
Xd_strdup='$d_strdup'
Xd_telldir='$d_telldir'
Xd_uname='$d_uname'
Xd_voidsig='$d_voidsig'
Xd_xenix='$d_xenix'
Xdate='$date'
Xdefvoidused='$defvoidused'
Xdirentrytype='$direntrytype'
Xecho='$echo'
Xegrep='$egrep'
Xemacs='$emacs'
Xeunicefix='$eunicefix'
Xexpr='$expr'
Xfind='$find'
Xfirstmakefile='$firstmakefile'
Xflex='$flex'
Xgcc='$gcc'
Xgccversion='$gccversion'
Xgidtype='$gidtype'
Xglibpth='$glibpth'
Xgrep='$grep'
Xgroupcat='$groupcat'
Xgzip='$gzip'
Xh_fcntl='$h_fcntl'
Xh_sysfile='$h_sysfile'
Xhint='$hint'
Xhostcat='$hostcat'
Xhuge='$huge'
Xi_dbm='$i_dbm'
Xi_dirent='$i_dirent'
Xi_memory='$i_memory'
Xi_ndbm='$i_ndbm'
Xi_pwd='$i_pwd'
Xi_rpcsvcdbm='$i_rpcsvcdbm'
Xi_sgtty='$i_sgtty'
Xi_stdarg='$i_stdarg'
Xi_stdlib='$i_stdlib'
Xi_string='$i_string'
Xi_sysparam='$i_sysparam'
Xi_sysresrc='$i_sysresrc'
Xi_systime='$i_systime'
Xi_systimek='$i_systimek'
Xi_termio='$i_termio'
Xi_termios='$i_termios'
Xi_time='$i_time'
Xi_unistd='$i_unistd'
Xi_varargs='$i_varargs'
Xi_varhdr='$i_varhdr'
Xincpath='$incpath'
Xinews='$inews'
Xinstall='$install'
Xinstalldir='$installdir'
Xinstallprivlib='$installprivlib'
Xksh='$ksh'
Xlarge='$large'
Xldflags='$ldflags'
Xless='$less'
Xlib='$lib'
Xlibc='$libc'
Xlibexp='$libexp'
Xlibpth='$libpth'
Xlibs='$libs'
Xline='$line'
Xlint='$lint'
Xlkflags='$lkflags'
Xln='$ln'
Xlns='$lns'
Xloclibpth='$loclibpth'
Xlp='$lp'
Xlpr='$lpr'
Xls='$ls'
Xmail='$mail'
Xmailx='$mailx'
Xmake='$make'
Xmedium='$medium'
Xmips='$mips'
Xmips_type='$mips_type'
Xmkdep='$mkdep'
Xmkdir='$mkdir'
Xmodels='$models'
Xmore='$more'
Xmv='$mv'
Xmydomain='$mydomain'
Xmyhostname='$myhostname'
Xmyuname='$myuname'
Xn='$n'
Xnm_opt='$nm_opt'
Xnm_so_opt='$nm_so_opt'
Xnroff='$nroff'
Xoptimize='$optimize'
Xorderlib='$orderlib'
Xosname='$osname'
Xosvers='$osvers'
Xp_aixauth='$p_aixauth'
Xp_clnt_sperrno='$p_clnt_sperrno'
Xp_dbmpw='$p_dbmpw'
Xp_dictionaries='$p_dictionaries'
Xp_docdir='$p_docdir'
Xp_fgetpwent='$p_fgetpwent'
Xp_getusershell='$p_getusershell'
Xp_hesiod='$p_hesiod'
Xp_history='$p_history'
Xp_hpuxauth='$p_hpuxauth'
Xp_installdir='$p_installdir'
Xp_keepdir='$p_keepdir'
Xp_kerberos='$p_kerberos'
Xp_lckpwdf='$p_lckpwdf'
Xp_nis='$p_nis'
Xp_nispasswd='$p_nispasswd'
Xp_nisplus='$p_nisplus'
Xp_nsswitch='$p_nsswitch'
Xp_osMajor='$p_osMajor'
Xp_osMicro='$p_osMicro'
Xp_osMinor='$p_osMinor'
Xp_osName='$p_osName'
Xp_osRev='$p_osRev'
Xp_osf1auth='$p_osf1auth'
Xp_paranoid='$p_paranoid'
Xp_passwdfile='$p_passwdfile'
Xp_putpwent='$p_putpwent'
Xp_replace='$p_replace'
Xp_rpclib='$p_rpclib'
Xp_secure_rpc='$p_secure_rpc'
Xp_shadow='$p_shadow'
Xp_shadowfile='$p_shadowfile'
Xp_sigposix='$p_sigposix'
Xp_svcconf='$p_svcconf'
Xp_sysinfo='$p_sysinfo'
Xp_sysprogs='$p_sysprogs'
Xp_ttyposix='$p_ttyposix'
Xp_u4auth='$p_u4auth'
Xp_utildir='$p_utildir'
Xp_xdr_passwd='$p_xdr_passwd'
Xp_xdr_uid_t='$p_xdr_uid_t'
Xp_xencrypt='$p_xencrypt'
Xpackage='$package'
Xpasscat='$passcat'
Xperl='$perl'
Xpg='$pg'
Xphostname='$phostname'
Xplibpth='$plibpth'
Xpmake='$pmake'
Xpr='$pr'
Xprefix='$prefix'
Xprefixexp='$prefixexp'
Xprivlib='$privlib'
Xprivlibexp='$privlibexp'
Xprototype='$prototype'
Xranlib='$ranlib'
Xrm='$rm'
Xrmail='$rmail'
Xrunnm='$runnm'
Xsed='$sed'
Xsendmail='$sendmail'
Xsh='$sh'
Xshar='$shar'
Xsharpbang='$sharpbang'
Xshsharp='$shsharp'
Xsignal_t='$signal_t'
Xsleep='$sleep'
Xsmail='$smail'
Xsmall='$small'
Xso='$so'
Xsort='$sort'
Xspackage='$spackage'
Xspitshell='$spitshell'
Xsplit='$split'
Xsrc='$src'
Xstartsh='$startsh'
Xstrings='$strings'
Xsubmit='$submit'
Xsysman='$sysman'
Xtail='$tail'
Xtar='$tar'
Xtbl='$tbl'
Xtest='$test'
Xtimeincl='$timeincl'
Xtop_level='$top_level'
Xtouch='$touch'
Xtr='$tr'
Xtrdown='$trdown'
Xtroff='$troff'
Xtrup='$trup'
Xuidsigned='$uidsigned'
Xuidtype='$uidtype'
Xuname='$uname'
Xuniq='$uniq'
Xusenm='$usenm'
Xusrinc='$usrinc'
Xuuname='$uuname'
Xvi='$vi'
Xvoidflags='$voidflags'
Xxlibpth='$xlibpth'
Xzcat='$zcat'
Xzip='$zip'
XEOT
X
X: add special variables
X$test -f $src/patchlevel.h && \
Xawk '/^#define/ {printf "%s=%s\n",$2,$3}' $src/patchlevel.h >>config.sh
Xecho "CONFIG=true" >>config.sh
X
X: propagate old symbols
Xif $test -f UU/config.sh; then
X	<UU/config.sh sort | uniq >UU/oldconfig.sh
X	sed -n 's/^\([a-zA-Z_0-9]*\)=.*/\1/p' config.sh config.sh UU/oldconfig.sh |\
X	sort | uniq -u >UU/oldsyms
X	set X `cat UU/oldsyms`
X	shift
X	case $# in
X	0) ;;
X	*)
X		cat <<EOM
XHmm...You had some extra variables I don't know about...I'll try to keep 'em...
XEOM
X		echo "# Variables propagated from previous config.sh file." >>config.sh
X		for sym in `cat UU/oldsyms`; do
X			echo "    Propagating $hint variable "'$'"$sym..."
X			eval 'tmp="$'"${sym}"'"'
X			echo "$tmp" | \
X				sed -e "s/'/'\"'\"'/g" -e "s/^/$sym='/" -e "s/$/'/" >>config.sh
X		done
X		;;
X	esac
Xfi
X
X: preserve RCS keywords in files with variable substitution, grrr
XId='$Id'
X
X: Finish up by extracting the .SH files
Xcase "$alldone" in
Xexit)
X	$rm -rf UU
X	echo "Done."
X	exit 0
X	;;
Xcont)
X	;;
X'')
X	dflt=''
X	nostick=true
X	$cat <<EOM
X
XIf you'd like to make any changes to the config.sh file before I begin
Xto configure things, do it as a shell escape now (e.g. !vi config.sh).
X
XEOM
X	rp="Press return or use a shell escape to edit config.sh:"
X	. UU/myread
X	nostick=''
X	case "$ans" in
X	'') ;;
X	*) : in case they cannot read
X		sh 1>&4 -c "$ans";;
X	esac
X	;;
Xesac
X
X: if this fails, just run all the .SH files by hand
X. ./config.sh
X
Xecho " "
Xexec 1>&4
X. ./UU/extract
X
Xif $contains '^depend:' [Mm]akefile >/dev/null 2>&1; then
X	dflt=y
X	case "$silent" in
X	true) ;;
X	*)
X		$cat <<EOM
X
XNow you need to generate make dependencies by running "make depend".
XYou might prefer to run it in background: "make depend > makedepend.out &"
XIt can take a while, so you might not want to run it right now.
X
XEOM
X		;;
X	esac
X	rp="Run make depend now?"
X	. UU/myread
X	case "$ans" in
X	y*)
X		make depend && echo "Now you must run a make."
X		;;
X	*)
X		echo "You must run 'make depend' then 'make'."
X		;;
X	esac
Xelif test -f [Mm]akefile; then
X	echo " "
X	echo "Now you must run a make."
Xelse
X	echo "Done."
Xfi
X
X$rm -f kit*isdone ark*isdone
X$rm -rf UU
X
X: End of Configure
X
END_OF_FILE
if test 138308 -ne `wc -c <'Configure'`; then
    echo shar: \"'Configure'\" unpacked with wrong size!
fi
chmod +x 'Configure'
# end of 'Configure'
fi
if test -f 'Makefile.SH' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'Makefile.SH'\"
else
echo shar: Extracting \"'Makefile.SH'\" \(9971 characters\)
sed "s/^X//" >'Makefile.SH' <<'END_OF_FILE'
X: Makefile.SH generated from Jmake.tmpl and Jmakefile [jmake 3.0 PL70]
X: $X-Id: Jmake.tmpl,v 3.0.1.3 1997/02/28 14:56:16 ram Exp $
X
Xcase $CONFIG in
X'')
X	if test -f config.sh; then TOP=.;
X	elif test -f ../config.sh; then TOP=..;
X	elif test -f ../../config.sh; then TOP=../..;
X	elif test -f ../../../config.sh; then TOP=../../..;
X	elif test -f ../../../../config.sh; then TOP=../../../..;
X	else
X		echo "Can't find config.sh."; exit 1
X	fi
X	. $TOP/config.sh
X	;;
Xesac
Xcase "$0" in
X*/*) cd `expr X$0 : 'X\(.*\)/'` ;;
Xesac
XCURRENT=.
XDIR=`echo $CURRENT/ | sed -e 's/\.\///g'`
Xecho "Extracting ${DIR}Makefile (with variable substitutions)"
X
XINSTALLDIR=`echo $installdir | sed -e 's,\./i,\$(TOP)/i,'`
XDATE=`date`
X
X$spitshell >Makefile <<!GROK!THIS!
X########################################################################
X# Makefile generated from Makefile.SH on $DATE
X
XSHELL = /bin/sh
XJMAKE = jmake
XTOP = .
XCURRENT = $CURRENT
XDIR = $DIR
XINSTALLDIR = $INSTALLDIR
X
X########################################################################
X# Parameters set by Configure -- edit config.sh if changes are needed
X
XCTAGS = ctags
XMAKE = make
XMV = $mv
XRM = $rm -f
X
X########################################################################
X# Automatically generated parameters -- do not edit
X
XX_CCDEBUG =  $cc_dbflags
XX_COPT =  $optimize
XX_CFLAGS =  $ccflags $cc_osflags \$(INCLUDE_PATH)
XX_LDFLAGS =  $ldflags
XX_LOCAL_CFLAGS =
XLOCAL_FLAGS =  Makefile.local
XJCFLAGS =  \$(X_CFLAGS) \$(X_COPT) \$(X_LOCAL_CFLAGS)
XJLDFLAGS =  \$(X_LDFLAGS) \$(X_LOCAL_CFLAGS)
XDPFLAGS =  \$(INCLUDE_PATH)
XLINTFLAGS =  \$(X_CFLAGS) $ccflags
XINSTALL_DIR =  $p_installdir
XKEEP_DIR =  $p_keepdir
XDICT_DIR =  $p_dictionaries
XUTIL_DIR =  $p_utildir
XECHO_C =  $c
XECHO_N =  $n
XSUBDIRS = files src dict doc
X
X!GROK!THIS!
X$spitshell >>Makefile <<'!NO!SUBS!'
X########################################################################
X# Jmake rules for building libraries, programs, scripts, and data files
X# $X-Id: Jmake.rules,v 3.0.1.5 1995/09/25 09:07:19 ram Exp $
X
X########################################################################
X# Start of Jmakefile
X#
X# Copyright 1998, The University of Texas at Austin ("U. T. Austin").
X# All rights reserved.
X#
X# By using this software the USER indicates that he or she has read,
X# understood and will comply with the following:
X#
X# U. T. Austin hereby grants USER permission to use, copy, modify, and
X# distribute this software and its documentation for any purpose and
X# without fee, provided that:
X#
X# 1. the above copyright notice appears in all copies of the software
X#    and its documentation, or portions thereof, and
X# 2. a full copy of this notice is included with the software and its
X#    documentation, or portions thereof, and
X# 3. neither the software nor its documentation, nor portions thereof,
X#    is sold for profit. Any commercial sale or license of this software,
X#    copies of the software, its associated documentation and/or
X#    modifications of either is strictly prohibited without the prior
X#    consent of U. T. Austin.
X#
X# Title to copyright to this software and its associated documentation
X# shall at all times remain with U. T. Austin. No right is granted to
X# use in advertising, publicity or otherwise any trademark, service
X# mark, or the name of U. T. Austin.
X#
X# This software and any associated documentation are provided "as is,"
X# and U. T. AUSTIN MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESSED OR
X# IMPLIED, INCLUDING THOSE OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
X# PURPOSE, OR THAT USE OF THE SOFTWARE, MODIFICATIONS, OR ASSOCIATED
X# DOCUMENTATION WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR
X# OTHER INTELLECTUAL PROPERTY RIGHTS OF A THIRD PARTY. U. T. Austin, The
X# University of Texas System, its Regents, officers, and employees shall
X# not be liable under any circumstances for any direct, indirect, special,
X# incidental, or consequential damages with respect to any claim by USER
X# or any third party on account of or arising from the use, or inability
X# to use, this software or its associated documentation, even if U. T.
X# Austin has been advised of the possibility of those damages.
X#
X# Submit commercialization requests to: Office of the Executive Vice
X# President and Provost, U. T. Austin, 201 Main Bldg., Austin, Texas,
X# 78712, ATTN: Technology Licensing Specialist.
X#
X# @(#)Jmakefile	1.12 07/20/98 (cc.utexas.edu)
X#
X# Main Makefile for npasswd
X#
X
X#
X# This file is auto-generated from Makefile.SH - all persistent
X# changes should be made there.
X#
X# Makefile.SH is itself generated from "Jmakefile" by jmake.
X#
X# Jmakefile is included in the developer kit.
X# See the Npasswd Support Guide (Support.html).
X#
X
XDIRS_NEEDED = $(INSTALL_DIR) $(DICT_DIR) $(KEEP_DIR) $(UTIL_DIR)
X
X#
X# all
X#  Build everything everywhere
X#
X## all:  Build everything everywhere
X# Force "all" to be the first target
Xall::
X
X#
X# "make help" will show useful targets
X#
Xhelp::
X	@echo Targets in Makefile
X	-@sed -n 's/^##[ 	]/	/p' Makefile
X
X#
X# install
X#  Install npasswd. This must be done as root
X#
X## install:  Install npasswd. This must be done as root
X#
X# Install section - lots of things to do
X#
Xinstall::
X	@foo=`(id || whoami) 2>/dev/null`;\
X	  case "$$foo" in \
X	  *root*) exit 0;;\
X	  *) echo "make install should be done as root"; exit 1;;\
X	         esac
X
X#
X# Make and set modes for the installation directories
X#
Xinstall::
X	@for dir in $(DIRS_NEEDED); do \
X	case '${MFLAGS}' in *[i]*) set +e;; esac; \
X	(set -x; test -d $$dir || $(INSTALLDIR) $$dir); \
X	done
X	chmod 0755 $(INSTALL_DIR) $(DICT_DIR) $(UTIL_DIR)
X	chmod 0751 $(KEEP_DIR)
X
X#
X# deinstall
X#  Remove npasswd and revert to vendor programs
X#
X## deinstall:  Remove npasswd and revert to vendor programs
Xdeinstall:: backdown
X
X#
X# backdown
X#  Revert to vendor programs
X#
X## backdown:  Revert to vendor programs
Xbackdown::
X	cd src; make $(MFLAGS) backdown
X
X#
X# nuke
X#  Delete the entire install directory and contents
X#
X## nuke:  Delete the entire install directory and contents
Xnuke:
X	@echo $(ECHO_N) Delete everything under $(INSTALL_DIR) '(y/n)? $(ECHO_C)'; \
X	 read ans;\
X	 case "$$ans" in\
X	 y*|Y*) (set -x; $(RM) -r $(INSTALL_DIR)) ;;\
X	esac
X
X#
X# depend
X#  Update makefile dependancies
X#
X## depend:  Update makefile dependancies
X
Xdepend::
X	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
X	for i in $(SUBDIRS) ;\
X	do \
X	(cd $$i ; echo "Depending" "in $(DIR)$$i..."; \
X	$(MAKE) $(MFLAGS)  depend); \
X	done
X
X# ---------------------------------------------------------------
X# Set debugging flags in sub-directories
X# ---------------------------------------------------------------
X# debug-none
X##_ debug-none: Set debug level
X#
X
Xdebug-none::
X	@$(MAKE) subdirs TARGET=debug-none VERB=debug-none FLAGS=
X# debug-dbx
X##_ debug-dbx: Set debug level
X#
X
Xdebug-dbx::
X	@$(MAKE) subdirs TARGET=debug-dbx VERB=debug-dbx FLAGS=
X# debug-files
X##_ debug-files: Set debug level
X#
X
Xdebug-files::
X	@$(MAKE) subdirs TARGET=debug-files VERB=debug-files FLAGS=
X# debug-system
X##_ debug-system: Set debug level
X#
X
Xdebug-system::
X	@$(MAKE) subdirs TARGET=debug-system VERB=debug-system FLAGS=
X
X########################################################################
X# Common rules for all Makefiles -- do not edit
X
Xemptyrule::
X
Xclean: sub_clean local_clean
Xrealclean: sub_realclean local_realclean
Xclobber: sub_clobber local_clobber
X
Xlocal_clean::
X	$(RM) core *~ *.o
X
Xlocal_realclean:: local_clean
X	$(RM) -r UU
X
Xlocal_clobber:: local_realclean
X	$(RM) config.sh config.h
X	$(RM) -r .config
X	$(RM) Makefile
X
XMakefile.SH: Jmakefile
X	-@if test -f $(TOP)/.package; then \
X	if test -f Makefile.SH; then \
X	echo "	$(RM) Makefile.SH~; $(MV) Makefile.SH Makefile.SH~"; \
X	$(RM) Makefile.SH~; $(MV) Makefile.SH Makefile.SH~; \
X	fi; \
X	echo "	$(JMAKE) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT)" ; \
X	$(JMAKE) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT) ; \
X	else exit 0; fi
X
XMakefile: Makefile.SH
X	/bin/sh Makefile.SH
X
XJmakefile:
X
Xtags::
X	$(CTAGS) -w *.[ch]
X	$(CTAGS) -xw *.[ch] > tags
X
Xlocal_clobber::
X	$(RM) tags
X
X########################################################################
X# Rules for building in sub-directories -- do not edit
X
Xsubdirs:
X	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
X	for i in $(SUBDIRS) ;\
X	do \
X	(cd $$i ; echo $(VERB) "in $(DIR)$$i..."; \
X	$(MAKE) $(MFLAGS) $(FLAGS) $(TARGET)); \
X	done
X
Xinstall::
X	@$(MAKE) subdirs TARGET=install VERB="Installing" FLAGS=
X
Xdeinstall::
X	@$(MAKE) subdirs TARGET=deinstall VERB="Deinstalling" FLAGS=
X
Xinstall.man::
X	@$(MAKE) subdirs TARGET=install.man VERB="Installing man pages" FLAGS=
X
Xdeinstall.man::
X	@$(MAKE) subdirs TARGET=deinstall.man VERB="Deinstalling man pages" FLAGS=
X
Xsub_clean::
X	@$(MAKE) subdirs TARGET=clean VERB="Cleaning" FLAGS=
X	@echo "Back to $(CURRENT) for "clean...
X
Xsub_realclean::
X	@$(MAKE) subdirs TARGET=realclean VERB="Real cleaning" FLAGS=
X	@echo "Back to $(CURRENT) for "realclean...
X
Xsub_clobber::
X	@$(MAKE) subdirs TARGET=clobber VERB="Clobbering" FLAGS=
X	@echo "Back to $(CURRENT) for "clobber...
X
Xtag::
X	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
X	for i in $(SUBDIRS) ;\
X	do \
X	(cd $$i ; echo "Tagging" "in $(DIR)$$i..."; \
X	$(MAKE) $(MFLAGS)  tag); \
X	done
X
XMakefiles::
X	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
X	for i in $(SUBDIRS);\
X	do \
X	echo "Making "Makefiles" in $(DIR)$$i..."; \
X	(cd $$i || exit 1; \
X	if test ! -f Makefile; then /bin/sh Makefile.SH; fi; \
X	$(MAKE) $(MFLAGS) Makefiles) \
X	done
X
XMakefiles.SH:: Makefile.SH
X	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
X	for i in $(SUBDIRS);\
X	do \
X	case "$(DIR)$$i/" in \
X	*/*/*/*/) newtop=../../../..;; \
X	*/*/*/) newtop=../../..;; \
X	*/*/) newtop=../..;; \
X	*/) newtop=..;; \
X	esac; \
X	case "$(TOP)" in \
X	/*) newtop="$(TOP)" ;; \
X	esac; \
X	echo "Making Makefiles.SH in $(DIR)$$i..."; \
X	(cd $$i || exit 1; $(MAKE) $(MFLAGS) -f ../Makefile \
X	Makefile TOP=$$newtop CURRENT=$(DIR)$$i;\
X	$(MAKE) $(MFLAGS) Makefiles.SH) \
X	done
X
Xall::
X	@$(MAKE) subdirs TARGET=all VERB="Making all" FLAGS=
X
X!NO!SUBS!
Xchmod 644 Makefile
X$eunicefix Makefile
X
END_OF_FILE
if test 9971 -ne `wc -c <'Makefile.SH'`; then
    echo shar: \"'Makefile.SH'\" unpacked with wrong size!
fi
# end of 'Makefile.SH'
fi
if test -f 'doc/Makefile.SH' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/Makefile.SH'\"
else
echo shar: Extracting \"'doc/Makefile.SH'\" \(18974 characters\)
sed "s/^X//" >'doc/Makefile.SH' <<'END_OF_FILE'
X: Makefile.SH generated from Jmake.tmpl and Jmakefile [jmake 3.0 PL70]
X: $X-Id: Jmake.tmpl,v 3.0.1.3 1997/02/28 14:56:16 ram Exp $
X
Xcase $CONFIG in
X'')
X	if test -f config.sh; then TOP=.;
X	elif test -f ../config.sh; then TOP=..;
X	elif test -f ../../config.sh; then TOP=../..;
X	elif test -f ../../../config.sh; then TOP=../../..;
X	elif test -f ../../../../config.sh; then TOP=../../../..;
X	else
X		echo "Can't find config.sh."; exit 1
X	fi
X	. $TOP/config.sh
X	;;
Xesac
Xcase "$0" in
X*/*) cd `expr X$0 : 'X\(.*\)/'` ;;
Xesac
XCURRENT=doc
XDIR=`echo $CURRENT/ | sed -e 's/\.\///g'`
Xecho "Extracting ${DIR}Makefile (with variable substitutions)"
X
XINSTALL=`echo $install | sed -e 's,\./i,\$(TOP)/i,'`
XINSTALLDIR=`echo $installdir | sed -e 's,\./i,\$(TOP)/i,'`
XDATE=`date`
X
X$spitshell >Makefile <<!GROK!THIS!
X########################################################################
X# Makefile generated from Makefile.SH on $DATE
X
XSHELL = /bin/sh
XJMAKE = jmake
XTOP = ../
XCURRENT = $CURRENT
XDIR = $DIR
XINSTALL = $INSTALL
XINSTALLDIR = $INSTALLDIR
X
X########################################################################
X# Parameters set by Configure -- edit config.sh if changes are needed
X
XCC = $cc
XCTAGS = ctags
XMAKE = make
XMV = $mv
XRM = $rm -f
X
X########################################################################
X# Automatically generated parameters -- do not edit
X
XX_CCDEBUG =  $cc_dbflags
XX_COPT =  $optimize
XX_CFLAGS =  $ccflags $cc_osflags \$(INCLUDE_PATH)
XX_LDFLAGS =  $ldflags
XX_LOCAL_CFLAGS =
XLOCAL_FLAGS =  Makefile.local
XJCFLAGS =  \$(X_CFLAGS) \$(X_COPT) \$(X_LOCAL_CFLAGS)
XJLDFLAGS =  \$(X_LDFLAGS) \$(X_LOCAL_CFLAGS)
XDPFLAGS =  \$(INCLUDE_PATH)
XLINTFLAGS =  \$(X_CFLAGS) $ccflags
XDOCS =  $p_docdir
XNROFF =  $nroff
XHTCONVERT =  lynx -dump
XHTFILTER =   sed -e s@file://localhost`pwd`@file://localhost/.@
X
X!GROK!THIS!
X$spitshell >>Makefile <<'!NO!SUBS!'
X########################################################################
X# Jmake rules for building libraries, programs, scripts, and data files
X# $X-Id: Jmake.rules,v 3.0.1.5 1995/09/25 09:07:19 ram Exp $
X
X########################################################################
X# Start of Jmakefile
X#
X# Copyright 1998, The University of Texas at Austin ("U. T. Austin").
X# All rights reserved.
X#
X# By using this software the USER indicates that he or she has read,
X# understood and will comply with the following:
X#
X# U. T. Austin hereby grants USER permission to use, copy, modify, and
X# distribute this software and its documentation for any purpose and
X# without fee, provided that:
X#
X# 1. the above copyright notice appears in all copies of the software
X#    and its documentation, or portions thereof, and
X# 2. a full copy of this notice is included with the software and its
X#    documentation, or portions thereof, and
X# 3. neither the software nor its documentation, nor portions thereof,
X#    is sold for profit. Any commercial sale or license of this software,
X#    copies of the software, its associated documentation and/or
X#    modifications of either is strictly prohibited without the prior
X#    consent of U. T. Austin.
X#
X# Title to copyright to this software and its associated documentation
X# shall at all times remain with U. T. Austin. No right is granted to
X# use in advertising, publicity or otherwise any trademark, service
X# mark, or the name of U. T. Austin.
X#
X# This software and any associated documentation are provided "as is,"
X# and U. T. AUSTIN MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESSED OR
X# IMPLIED, INCLUDING THOSE OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
X# PURPOSE, OR THAT USE OF THE SOFTWARE, MODIFICATIONS, OR ASSOCIATED
X# DOCUMENTATION WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR
X# OTHER INTELLECTUAL PROPERTY RIGHTS OF A THIRD PARTY. U. T. Austin, The
X# University of Texas System, its Regents, officers, and employees shall
X# not be liable under any circumstances for any direct, indirect, special,
X# incidental, or consequential damages with respect to any claim by USER
X# or any third party on account of or arising from the use, or inability
X# to use, this software or its associated documentation, even if U. T.
X# Austin has been advised of the possibility of those damages.
X#
X# Submit commercialization requests to: Office of the Executive Vice
X# President and Provost, U. T. Austin, 201 Main Bldg., Austin, Texas,
X# 78712, ATTN: Technology Licensing Specialist.
X#
X# @(#)Jmakefile	1.13 10/01/98 (cc.utexas.edu)
X#
X# Makefile for npasswd documentation (mostly HTML docs)
X#
X
X#
X# This file is auto-generated from Makefile.SH - all persistent
X# changes should be made there.
X#
X# Makefile.SH is itself generated from "Jmakefile" by jmake.
X#
X# Jmakefile is included in the developer kit.
X# See the Npasswd Support Guide (Support.html).
X#
X
X#
X# NROFF
X# 	Nroff command
X#
X## NROFF: 	Nroff command
X
X#
X# HTCONVERT
X# 	Command to convert HTML to text (lynx -dump)
X#
X## HTCONVERT: 	Command to convert HTML to text (lynx -dump)
X
XHTML	= \
X	AdminGuide.html \
X	BuildInstall.html \
X	BugReport.html \
X	Copyright.html \
X	QNA.html \
X	Main.html \
X	ManPages.html \
X	MiscNotes.html \
X	Support.html \
X	Reference.html \
X	Reference_TOC.html \
X	Reference_index.html \
X	TOC_frame.html \
X	TOC_std.html \
X	index.html
X
XHTML_TXT = \
X	AdminGuide.txt \
X	BuildInstall.txt \
X	BugReport.txt \
X	Copyright.txt \
X	QNA.txt \
X	Main.txt \
X	ManPages.txt \
X	MiscNotes.txt \
X	Support.txt \
X	Reference.txt \
X	TOC_std.txt
X
XPS	= \
X	PasswordSecurity.ps \
X	Worm-MIT.ps \
X	Worm-Utah.ps
X
XIMG	= \
X	top.gif \
X	home.gif
X
XMAN	= \
X	checkpassword.1 \
X	checkpassword.3 \
X	history_admin.1 \
X	makedict.1 \
X	npasswd.1
X
XMAN_HTML = \
X	checkpassword_1.html \
X	checkpassword_3.html \
X	history_admin_1.html \
X	makedict_1.html \
X	npasswd_1.html
X
XMAN_CAT = \
X	checkpassword.cat1 \
X	checkpassword.cat3 \
X	history_admin.cat1 \
X	makedict.cat1 \
X	npasswd.cat1
X
X#
X# all
X# 	Make everything: nroff2html docfilter man-html man-txt hmtl-txt
X#
X## all: 	Make everything: nroff2html docfilter man-html man-txt hmtl-txt
Xall::	nroff2html docfilter man-html man-txt html-txt
X
X#
X# dist
X# 	Prepare for distribution
X#
X## dist: 	Prepare for distribution
Xdist:	man-html man-txt html-txt
X
X#
X# install
X# 	Install everything: install-html install-man install-txt
X#
X## install: 	Install everything: install-html install-man install-txt
X
X#
X# deinstall
X# 	Remove everything: deinstall-html deinstall-man deinstall-txt
X#
X## deinstall: 	Remove everything: deinstall-html deinstall-man deinstall-txt
X
Xinstall::
X	@for dir in $(DOCS); do \
X	case '${MFLAGS}' in *[i]*) set +e;; esac; \
X	(set -x; test -d $$dir || $(INSTALLDIR) $$dir); \
X	done
X
Xdeinstall::
X	$(RM) -r $(DOCS)
X
X#
X# "make help" will show useful targets
X#
Xhelp::
X	@echo Targets in Makefile
X	-@sed -n 's/^##[ 	]/	/p' Makefile
X
X#
X#  Program to "convert" nroff output to HTML
X#
X
Xnroff2html: nroff2html.c
X	$(CC) -o nroff2html nroff2html.c
X
Xdocfilter: docfilter.SH
X	$(RM) docfilter
X	sh docfilter.SH
X
X#
X# Transform manual pages to HTML documents
X#
X
X#
X# man-html
X# 	Make HTML versions of man pages
X#
X## man-html: 	Make HTML versions of man pages
Xman-html:	$(MAN_HTML) docfilter nroff2html
X
Xcheckpassword_1.html: checkpassword.1
X	-@if [ -f $(NROFF) ]; then \
X	$(RM) checkpassword_1.html; \
X	$(NROFF) -man checkpassword.1 |./docfilter |./nroff2html > checkpassword_1.html ;\
X	echo "checkpassword.1 -> checkpassword_1.html"; \
X	else \
X	echo "Cannot make checkpassword_1.html ($(NROFF) not found)"; \
X	fi
X
Xcheckpassword_3.html: checkpassword.3
X	-@if [ -f $(NROFF) ]; then \
X	$(RM) checkpassword_3.html; \
X	$(NROFF) -man checkpassword.3 |./docfilter |./nroff2html > checkpassword_3.html ;\
X	echo "checkpassword.3 -> checkpassword_3.html"; \
X	else \
X	echo "Cannot make checkpassword_3.html ($(NROFF) not found)"; \
X	fi
X
Xhistory_admin_1.html: history_admin.1
X	-@if [ -f $(NROFF) ]; then \
X	$(RM) history_admin_1.html; \
X	$(NROFF) -man history_admin.1 |./docfilter |./nroff2html > history_admin_1.html ;\
X	echo "history_admin.1 -> history_admin_1.html"; \
X	else \
X	echo "Cannot make history_admin_1.html ($(NROFF) not found)"; \
X	fi
X
Xmakedict_1.html: makedict.1
X	-@if [ -f $(NROFF) ]; then \
X	$(RM) makedict_1.html; \
X	$(NROFF) -man makedict.1 |./docfilter |./nroff2html > makedict_1.html ;\
X	echo "makedict.1 -> makedict_1.html"; \
X	else \
X	echo "Cannot make makedict_1.html ($(NROFF) not found)"; \
X	fi
X
Xnpasswd_1.html: npasswd.1
X	-@if [ -f $(NROFF) ]; then \
X	$(RM) npasswd_1.html; \
X	$(NROFF) -man npasswd.1 |./docfilter |./nroff2html > npasswd_1.html ;\
X	echo "npasswd.1 -> npasswd_1.html"; \
X	else \
X	echo "Cannot make npasswd_1.html ($(NROFF) not found)"; \
X	fi
X
X#
X# Transform manual pages to text documents
X#
X
X#
X# man-txt
X# 	Make text (cat) versions of man pages
X#
X## man-txt: 	Make text (cat) versions of man pages
Xman-txt:	$(MAN_CAT) docfilter
X
Xcheckpassword.cat1: checkpassword.1
X	-@if [ -f $(NROFF) ]; then \
X	$(RM) checkpassword.cat1; \
X	$(NROFF) -man checkpassword.1 | ./docfilter > checkpassword.cat1 ;\
X	echo "checkpassword.1 -> checkpassword.cat1"; \
X	else \
X	echo "Cannot make checkpassword.cat1 ($(NROFF) not found)"; \
X	fi
X
Xcheckpassword.cat3: checkpassword.3
X	-@if [ -f $(NROFF) ]; then \
X	$(RM) checkpassword.cat3; \
X	$(NROFF) -man checkpassword.3 | ./docfilter > checkpassword.cat3 ;\
X	echo "checkpassword.3 -> checkpassword.cat3"; \
X	else \
X	echo "Cannot make checkpassword.cat3 ($(NROFF) not found)"; \
X	fi
X
Xhistory_admin.cat1: history_admin.1
X	-@if [ -f $(NROFF) ]; then \
X	$(RM) history_admin.cat1; \
X	$(NROFF) -man history_admin.1 | ./docfilter > history_admin.cat1 ;\
X	echo "history_admin.1 -> history_admin.cat1"; \
X	else \
X	echo "Cannot make history_admin.cat1 ($(NROFF) not found)"; \
X	fi
X
Xmakedict.cat1: makedict.1
X	-@if [ -f $(NROFF) ]; then \
X	$(RM) makedict.cat1; \
X	$(NROFF) -man makedict.1 | ./docfilter > makedict.cat1 ;\
X	echo "makedict.1 -> makedict.cat1"; \
X	else \
X	echo "Cannot make makedict.cat1 ($(NROFF) not found)"; \
X	fi
X
Xnpasswd.cat1: npasswd.1
X	-@if [ -f $(NROFF) ]; then \
X	$(RM) npasswd.cat1; \
X	$(NROFF) -man npasswd.1 | ./docfilter > npasswd.cat1 ;\
X	echo "npasswd.1 -> npasswd.cat1"; \
X	else \
X	echo "Cannot make npasswd.cat1 ($(NROFF) not found)"; \
X	fi
X
X#
X# Transform HTML documents to text
X#
X
X#
X# html-txt
X# 	Make text versions of HTML files
X#
X## html-txt: 	Make text versions of HTML files
Xhtml-txt:	$(HTML_TXT) docfilter
X
X
XAdminGuide.txt: AdminGuide.html
X	@test -f AdminGuide.html
X	-@$(HTCONVERT) AdminGuide.html | ./docfilter | $(HTFILTER) >  AdminGuide.txt.tmp; \
X	if [ -s  AdminGuide.txt.tmp ]; then \
X	$(MV)  AdminGuide.txt.tmp  AdminGuide.txt; \
X	echo "AdminGuide.html ->  AdminGuide.txt"; \
X	else \
X	echo "Cannot make  AdminGuide.txt ('$(HTCONVERT)' failed)"; \
X	$(RM)  AdminGuide.txt.tmp; \
X	fi
X
X
XBuildInstall.txt: BuildInstall.html
X	@test -f BuildInstall.html
X	-@$(HTCONVERT) BuildInstall.html | ./docfilter | $(HTFILTER) >  BuildInstall.txt.tmp; \
X	if [ -s  BuildInstall.txt.tmp ]; then \
X	$(MV)  BuildInstall.txt.tmp  BuildInstall.txt; \
X	echo "BuildInstall.html ->  BuildInstall.txt"; \
X	else \
X	echo "Cannot make  BuildInstall.txt ('$(HTCONVERT)' failed)"; \
X	$(RM)  BuildInstall.txt.tmp; \
X	fi
X
X
XBugReport.txt: BugReport.html
X	@test -f BugReport.html
X	-@$(HTCONVERT) BugReport.html | ./docfilter | $(HTFILTER) >  BugReport.txt.tmp; \
X	if [ -s  BugReport.txt.tmp ]; then \
X	$(MV)  BugReport.txt.tmp  BugReport.txt; \
X	echo "BugReport.html ->  BugReport.txt"; \
X	else \
X	echo "Cannot make  BugReport.txt ('$(HTCONVERT)' failed)"; \
X	$(RM)  BugReport.txt.tmp; \
X	fi
X
X
XCopyright.txt: Copyright.html
X	@test -f Copyright.html
X	-@$(HTCONVERT) Copyright.html | ./docfilter | $(HTFILTER) >  Copyright.txt.tmp; \
X	if [ -s  Copyright.txt.tmp ]; then \
X	$(MV)  Copyright.txt.tmp  Copyright.txt; \
X	echo "Copyright.html ->  Copyright.txt"; \
X	else \
X	echo "Cannot make  Copyright.txt ('$(HTCONVERT)' failed)"; \
X	$(RM)  Copyright.txt.tmp; \
X	fi
X
X
XQNA.txt: QNA.html
X	@test -f QNA.html
X	-@$(HTCONVERT) QNA.html | ./docfilter | $(HTFILTER) >  QNA.txt.tmp; \
X	if [ -s  QNA.txt.tmp ]; then \
X	$(MV)  QNA.txt.tmp  QNA.txt; \
X	echo "QNA.html ->  QNA.txt"; \
X	else \
X	echo "Cannot make  QNA.txt ('$(HTCONVERT)' failed)"; \
X	$(RM)  QNA.txt.tmp; \
X	fi
X
X
XMain.txt: Main.html
X	@test -f Main.html
X	-@$(HTCONVERT) Main.html | ./docfilter | $(HTFILTER) >  Main.txt.tmp; \
X	if [ -s  Main.txt.tmp ]; then \
X	$(MV)  Main.txt.tmp  Main.txt; \
X	echo "Main.html ->  Main.txt"; \
X	else \
X	echo "Cannot make  Main.txt ('$(HTCONVERT)' failed)"; \
X	$(RM)  Main.txt.tmp; \
X	fi
X
X
XManPages.txt: ManPages.html
X	@test -f ManPages.html
X	-@$(HTCONVERT) ManPages.html | ./docfilter | $(HTFILTER) >  ManPages.txt.tmp; \
X	if [ -s  ManPages.txt.tmp ]; then \
X	$(MV)  ManPages.txt.tmp  ManPages.txt; \
X	echo "ManPages.html ->  ManPages.txt"; \
X	else \
X	echo "Cannot make  ManPages.txt ('$(HTCONVERT)' failed)"; \
X	$(RM)  ManPages.txt.tmp; \
X	fi
X
X
XMiscNotes.txt: MiscNotes.html
X	@test -f MiscNotes.html
X	-@$(HTCONVERT) MiscNotes.html | ./docfilter | $(HTFILTER) >  MiscNotes.txt.tmp; \
X	if [ -s  MiscNotes.txt.tmp ]; then \
X	$(MV)  MiscNotes.txt.tmp  MiscNotes.txt; \
X	echo "MiscNotes.html ->  MiscNotes.txt"; \
X	else \
X	echo "Cannot make  MiscNotes.txt ('$(HTCONVERT)' failed)"; \
X	$(RM)  MiscNotes.txt.tmp; \
X	fi
X
X
XSupport.txt: Support.html
X	@test -f Support.html
X	-@$(HTCONVERT) Support.html | ./docfilter | $(HTFILTER) >  Support.txt.tmp; \
X	if [ -s  Support.txt.tmp ]; then \
X	$(MV)  Support.txt.tmp  Support.txt; \
X	echo "Support.html ->  Support.txt"; \
X	else \
X	echo "Cannot make  Support.txt ('$(HTCONVERT)' failed)"; \
X	$(RM)  Support.txt.tmp; \
X	fi
X
X
XReference.txt: Reference.html
X	@test -f Reference.html
X	-@$(HTCONVERT) Reference.html | ./docfilter | $(HTFILTER) >  Reference.txt.tmp; \
X	if [ -s  Reference.txt.tmp ]; then \
X	$(MV)  Reference.txt.tmp  Reference.txt; \
X	echo "Reference.html ->  Reference.txt"; \
X	else \
X	echo "Cannot make  Reference.txt ('$(HTCONVERT)' failed)"; \
X	$(RM)  Reference.txt.tmp; \
X	fi
X
X
XTOC_std.txt: TOC_std.html
X	@test -f TOC_std.html
X	-@$(HTCONVERT) TOC_std.html | ./docfilter | $(HTFILTER) >  TOC_std.txt.tmp; \
X	if [ -s  TOC_std.txt.tmp ]; then \
X	$(MV)  TOC_std.txt.tmp  TOC_std.txt; \
X	echo "TOC_std.html ->  TOC_std.txt"; \
X	else \
X	echo "Cannot make  TOC_std.txt ('$(HTCONVERT)' failed)"; \
X	$(RM)  TOC_std.txt.tmp; \
X	fi
X
X
X#
X# Install targets
X#
Xinstall::	install-html
X
Xdeinstall::	deinstall-html
X
Xinstall::	install-man
X
Xdeinstall::	deinstall-man
X
Xinstall::	install-txt
X
Xdeinstall::	deinstall-txt
X
X
X#
X# install-html
X# 	Install HTML documents
X#
X## install-html: 	Install HTML documents
X
X#
X# deinstall-html
X# 	Remove HTML documents
X#
X## deinstall-html: 	Remove HTML documents
X
Xinstall-html:: $(PS) $(IMG)
X	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
X	for i in $(PS) $(IMG); do \
X	(set -x; $(INSTALL) -c  -m 0444 $$i  $(DOCS)); \
X	done
X
Xdeinstall-html::
X	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
X	for i in $(PS) $(IMG); do \
X	(set -x; $(RM)  $(DOCS)/$$i); \
X	done
X
Xinstall-html::  $(HTML) docfilter
X	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
X	for f in  $(HTML) ; do \
X	$(RM) /tmp/$$f.temp; \
X	./docfilter $$f > /tmp/$$f.temp; \
X	(set -x; $(INSTALL) -m 444 /tmp/$$f.temp  $(DOCS)/$$f; ); \
X	$(RM) /tmp/$$f.temp; \
X	done
X
Xdeinstall-html::
X	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
X	for f in  $(HTML) ; do \
X	$(RM) $(DOCS)/$$f; \
X	done
X
X#
X# install-man
X# 	Install man pages
X#
X## install-man: 	Install man pages
X
X#
X# deinstall-man
X# 	Remove man pages
X#
X## deinstall-man: 	Remove man pages
X
Xinstall-man::  $(MAN_HTML) $(MAN_CAT)
X	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
X	for i in  $(MAN_HTML) $(MAN_CAT); do \
X	(set -x; $(INSTALL) -c  -m 0444 $$i  $(DOCS)); \
X	done
X
Xdeinstall-man::
X	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
X	for i in  $(MAN_HTML) $(MAN_CAT); do \
X	(set -x; $(RM)  $(DOCS)/$$i); \
X	done
X
Xinstall-man::  $(MAN) docfilter
X	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
X	for f in  $(MAN) ; do \
X	$(RM) /tmp/$$f.temp; \
X	./docfilter $$f > /tmp/$$f.temp; \
X	(set -x; $(INSTALL) -m 444 /tmp/$$f.temp  $(DOCS)/$$f; ); \
X	$(RM) /tmp/$$f.temp; \
X	done
X
Xdeinstall-man::
X	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
X	for f in  $(MAN) ; do \
X	$(RM) $(DOCS)/$$f; \
X	done
X
X#
X# install-txt
X# 	Install text versions of HTML documents
X#
X## install-txt: 	Install text versions of HTML documents
X
X#
X# deinstall-txt
X# 	Remove text versions of HTML documents
X#
X## deinstall-txt: 	Remove text versions of HTML documents
X
Xinstall-txt::  $(HTML_TXT)
X	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
X	for i in  $(HTML_TXT); do \
X	(set -x; $(INSTALL) -c  -m 0444 $$i  $(DOCS)); \
X	done
X
Xdeinstall-txt::
X	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
X	for i in  $(HTML_TXT); do \
X	(set -x; $(RM)  $(DOCS)/$$i); \
X	done
X
X#
X# Dependancies for HTML documents
X#
X
XAdminGuide.html:
X	@exit 0;
X
XBuildInstall.html:
X	@exit 0;
X
XBugReport.html:
X	@exit 0;
X
XCopyright.html:
X	@exit 0;
X
XQNA.html:
X	@exit 0;
X
XMain.html:
X	@exit 0;
X
XManPages.html:
X	@exit 0;
X
XMiscNotes.html:
X	@exit 0;
X
XSupport.html:
X	@exit 0;
X
XReference.html:
X	@exit 0;
X
XReference_TOC.html:
X	@exit 0;
X
XReference_index.html:
X	@exit 0;
X
XTOC_frame.html:
X	@exit 0;
X
XTOC_std.html:
X	@exit 0;
X
Xindex.html:
X	@exit 0;
X
XPasswordSecurity.ps:
X	@exit 0;
X
XWorm-MIT.ps:
X	@exit 0;
X
XWorm-Utah.ps:
X	@exit 0;
X
Xtop.gif:
X	@exit 0;
X
Xhome.gif:
X	@exit 0;
X
X
X#
X# Clean the HTML docs created from man pages
X#
Xlocal_clobber::
X	$(RM) $(MAN_HTML) $(HTML_TXT) nroff2html docfilter
X
X# ---------------------------------------------------------------
X# Do-nothing debug targets
X# ---------------------------------------------------------------
Xdebug-none::
X	@echo Nothing to debug in $(CURRENT)
X
Xdebug-dbx::
X	@echo Nothing to debug in $(CURRENT)
X
Xdebug-files::
X	@echo Nothing to debug in $(CURRENT)
X
Xdebug-system::
X	@echo Nothing to debug in $(CURRENT)
X
X
Xlint:
X	-@echo Nothing to lint in $(CURRENT)
X
Xdepend:
X	-@echo No dependancies in $(CURRENT)
X
X#
X# End Makefile
X
X########################################################################
X# Common rules for all Makefiles -- do not edit
X
Xemptyrule::
X
Xclean: local_clean
Xrealclean: local_realclean
Xclobber: local_clobber
X
Xlocal_clean::
X	$(RM) core *~ *.o
X
Xlocal_realclean:: local_clean
X
Xlocal_clobber:: local_realclean
X	$(RM) Makefile config.sh
X
XMakefile.SH: Jmakefile
X	-@if test -f $(TOP)/.package; then \
X	if test -f Makefile.SH; then \
X	echo "	$(RM) Makefile.SH~; $(MV) Makefile.SH Makefile.SH~"; \
X	$(RM) Makefile.SH~; $(MV) Makefile.SH Makefile.SH~; \
X	fi; \
X	echo "	$(JMAKE) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT)" ; \
X	$(JMAKE) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT) ; \
X	else exit 0; fi
X
XMakefile: Makefile.SH
X	/bin/sh Makefile.SH
X
XJmakefile:
X
Xtags::
X	$(CTAGS) -w *.[ch]
X	$(CTAGS) -xw *.[ch] > tags
X
Xlocal_clobber::
X	$(RM) tags
X
X########################################################################
X# Empty rules for directories with no sub-directories -- do not edit
X
Xinstall::
X	@echo "install in $(CURRENT) done."
X
Xdeinstall::
X	@echo "deinstall in $(CURRENT) done."
X
Xinstall.man::
X	@echo "install.man in $(CURRENT) done."
X
Xdeinstall.man::
X	@echo "deinstall.man in $(CURRENT) done."
X
XMakefiles::
X
XMakefiles.SH::
X
X!NO!SUBS!
Xchmod 644 Makefile
X$eunicefix Makefile
X
END_OF_FILE
if test 18974 -ne `wc -c <'doc/Makefile.SH'`; then
    echo shar: \"'doc/Makefile.SH'\" unpacked with wrong size!
fi
# end of 'doc/Makefile.SH'
fi
echo shar: End of shell archive.
exit 0
