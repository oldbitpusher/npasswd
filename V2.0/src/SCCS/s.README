h57972
s 00011/00002/00129
d D 1.7 92/01/28 10:27:02 clyde 7 6
c Add mailing list pointers
e
s 00002/00000/00129
d D 1.6 90/03/19 16:36:31 clyde 6 5
c Add info about defining SECURE_RPC
e
s 00000/00007/00129
d D 1.5 90/03/19 16:10:58 clyde 5 4
c Remove stuff about YPPASSWDD_403
e
s 00015/00007/00121
d D 1.4 90/03/19 15:05:05 clyde 4 3
c 1. Fix errors.
c 2. Explain configuring for SunOS 4.0.3 
e
s 00038/00004/00090
d D 1.3 89/11/28 12:24:45 clyde 3 2
c Add sketch about the configuration file
e
s 00001/00002/00093
d D 1.2 89/10/24 10:48:21 clyde 2 1
c Remove 'beta test' comment
e
s 00095/00000/00000
d D 1.1 89/05/18 10:26:01 clyde 1 0
c date and time created 89/05/18 10:26:01 by clyde
e
u
U
t
T
I 1
D 2
README for npasswd beta test, May 16 1989
E 2
I 2
D 3
README for npasswd October 1989
E 3
I 3
D 4
README for npasswd December 1989
E 4
I 4
README for npasswd March 1990
E 4
E 3
E 2

%W% %G% (cc.utexas.edu)

* Introduction

D 3
npasswd is a pretty-much-plug-compatable replacement for passwd(1).
E 3
I 3
Npasswd is a pretty-much-plug-compatable replacement for passwd(1).
E 3
This version incorporates a password checking system
that disallows simple-minded passwords.

D 3
It does exactly ONE thing - change login passwords.
E 3
I 3
It does exactly ONE thing - change login passwords, though it would
not be too difficult to make it do shells and GECOS stuff also.
E 3

I have modeled npasswd after passwd(1) from 4.3BSD and SunOS 4.0, but
it does not impliment the options those versions have.
I have also included support for Sys VR3 password aging, but I don't have
a SysV box around to test it on.

* About npasswd

The program is divided into upper and lower sections.
The upper (driver) half deals with abstract data such as login names and
passwords.  It has no knowledge of how or where passwords are stored.

The lower (method) half does data lookup and replacement.  There are 
two different method modules provided with this distribution.

	pw_passwd.c - deals with standard /etc/passwd type files and
		the hashed passwd database used in 4.3BSD.
	pw_yp.c - deals with standard /etc/passwd files and Yellow Pages
		passwd service.

The lower half hides all its data from the upper half, and vice versa.
The upper and lower halves communicate via this interface:

	pw_initalize()		Do initializations 
	pw_getuserbyname()	Get user information by name
	pw_permission()		Check if user has permission
				 to change this users' password
	pw_compare()		Compare passwords (returns 1 on match, 0 if not)
	pw_check()		Check password (returns 1 if ok, 0 otherwise)
	pw_replace()		Replace the password
	pw_cleanup()		Cleanup

Both the upper and lower halves keep private state, and must determine
such things as who invoked the program seperately.

This approach allows there to be one user interface for a variety of
password storage methods.  To support another method, such as shadow
password files, a new collection of method routines need be written and
linked to npasswd.o.

I have tried to minimalize the assumptions about what is available in the
C library and localized UNIX version dependancies.

* Building npasswd

D 4
** You will probably want to edit the manual page - it is fairly rough. **
** Look at the sources before you install to see if the assumptions
   I made are correct for your site. **
E 4
I 4
- You will probably want to edit the manual page - it is fairly rough.
E 4

I 4
- Look at the sources before you install to see if the assumptions
  I made are correct for your site.

E 4
1. Choose which version of npasswd you want to be the default and
   retarget 'all' in Makefile to point to it.

2. Read checkpasswd/README and configure Makefiles accordingly.

3. Set the system target information in Makefile.
	* For running under SunOS 4.X system, set OPTIONS = -DSUNOS4 
I 6
	* If you are thinking about running Sun "Secure RPC", add
	  -DSECURE_RPC to OPTIONS
E 6
I 4
D 5
	  ********
	  If you are running SunOS 4.0.3 or greater, add -DYPPASSWDD_403
	  to OPTIONS.  This is IMPORTANT to prevent password file
	  modification collisions with yppasswdd.
	  If 'strings /usr/etc/rpc.yppasswdd | grep ptmp' comes up
	  with '.ptmp', set this option.
	  ********
E 5
E 4
	* For running under System V, set OPTIONS = -DSYSV
	* To use syslog(3), include -DSYSLOG in OPTIONS
	* To update the 4.3BSD hashed password database,
	  include '-DBSD4_3' in OPTIONS.
	* Change the lines for 'CF' and 'HF' to retarget the config and
	  or help files.

4. Edit 'npasswd.help' to reflect the preferences chosen for the
   password checking plus add any other local administrativa.

D 4
5. Edit npasswd.cf to reflect your preferences.  See checkpasswd/checkpasswd.8
D 3
   for informationa about the password checking configuration file.
E 3
I 3
   (or the section below) for information about the password checking
   configuration file.
E 4
I 4
5. Edit 'npasswd.conf' to reflect your preferences.  See
   checkpasswd/checkpasswd.8 (or the section below) for information about
   the password checking configuration file.
E 4
E 3

6. Do a 'make'.

7. Become super-user and do 'make install'.

8. If you built npasswd with -DSYSLOG, modify /etc/syslog.conf to log
   messages for facility LOG_AUTH level LOG_INFO.  This gives you a record
   of password changes.

I 3
* The configuration file explained

dictionary	/path/to/dictionary	[description]
	/usr/dict/words is always looked in.
	There are 2 good reasons to have a DBM version of each dictionary:
	1. Faster password checking.	
	2. More secure checking.  If there are no DBM files, then egrep(1)
	   is used and unfortunately, the candidate password must be put on the 
	   command line - which makes it suspectible to being seen with ps(1).

# singlecase	yes | [no]	- Pass single-case passwords
	Allow single case passwords.  Default is not to.

# minlength	N [5]	- Minimum password length
	5 characters is the default minimum password length

# maxlength	N [8]	Maximum effective password length
	All this does is issue a warning message that just the first N
	characters of a password are used.

# printonly	yes | [no] 	- Allow only printable characters
	Allow non-printable (ASCII control) characters in passwords

# badchars	"<string>"	- Replace illegal character list
	Set a list of characters verboten in passwords.
	This form REPLACES the built-in illegal character list.
	Control characters may be specified by the '^X' convention.  

# badchars	+"<string>"	- Add to illegal character list
	Adds to the built-in illegal character list.

----------------------
E 3
Bug reports & enhancements to
D 7
clyde@emx.utexas.edu
E 7
D 2
uunet!cs.utexas.edu!ut-emx!clyde
E 2

I 7
	npasswd-bugs@emx.utexas.edu
E 7

D 7
	-Clyde Hoover
E 7
I 7
There is a mailing list for users of the npasswd program:

	npasswd-users@emx.utexas.edu

Requests to be added to this list should be send to:

	npasswd-users-request@emx.utexas.edu


	-Clyde Hoover (clyde@emx.utexas.edu)
E 7

E 1
